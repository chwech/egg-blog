/*
 Navicat Premium Data Transfer

 Source Server         : 本地wordpress
 Source Server Type    : MySQL
 Source Server Version : 50732
 Source Host           : localhost:32769
 Source Schema         : wordpress

 Target Server Type    : MySQL
 Target Server Version : 50732
 File Encoding         : 65001

 Date: 12/01/2021 20:34:06
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for wp_commentmeta
-- ----------------------------
DROP TABLE IF EXISTS `wp_commentmeta`;
CREATE TABLE `wp_commentmeta`  (
  `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `meta_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL DEFAULT NULL,
  `meta_value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL,
  PRIMARY KEY (`meta_id`) USING BTREE,
  INDEX `comment_id`(`comment_id`) USING BTREE,
  INDEX `meta_key`(`meta_key`(191)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_commentmeta
-- ----------------------------

-- ----------------------------
-- Table structure for wp_comments
-- ----------------------------
DROP TABLE IF EXISTS `wp_comments`;
CREATE TABLE `wp_comments`  (
  `comment_ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `comment_author` tinytext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_author_email` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_date` datetime(0) NOT NULL,
  `comment_date_gmt` datetime(0) NOT NULL,
  `comment_content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT 0,
  `comment_approved` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`comment_ID`) USING BTREE,
  INDEX `comment_post_ID`(`comment_post_ID`) USING BTREE,
  INDEX `comment_approved_date_gmt`(`comment_approved`, `comment_date_gmt`) USING BTREE,
  INDEX `comment_date_gmt`(`comment_date_gmt`) USING BTREE,
  INDEX `comment_parent`(`comment_parent`) USING BTREE,
  INDEX `comment_author_email`(`comment_author_email`(10)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_comments
-- ----------------------------
INSERT INTO `wp_comments` VALUES (1, 1, 'A WordPress Commenter', 'wapuu@wordpress.example', 'https://wordpress.org/', '', '2019-03-30 09:12:11', '2019-03-30 09:12:11', 'Hi, this is a comment.\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\nCommenter avatars come from <a href=\"https://gravatar.com\">Gravatar</a>.', 0, '1', '', '', 0, 0);

-- ----------------------------
-- Table structure for wp_links
-- ----------------------------
DROP TABLE IF EXISTS `wp_links`;
CREATE TABLE `wp_links`  (
  `link_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) UNSIGNED NOT NULL DEFAULT 1,
  `link_rating` int(11) NOT NULL DEFAULT 0,
  `link_updated` datetime(0) NOT NULL,
  `link_rel` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `link_rss` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`) USING BTREE,
  INDEX `link_visible`(`link_visible`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_links
-- ----------------------------

-- ----------------------------
-- Table structure for wp_options
-- ----------------------------
DROP TABLE IF EXISTS `wp_options`;
CREATE TABLE `wp_options`  (
  `option_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `option_value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `autoload` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`) USING BTREE,
  UNIQUE INDEX `option_name`(`option_name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7346 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_options
-- ----------------------------
INSERT INTO `wp_options` VALUES (1, 'siteurl', 'https://www.chwech.com', 'yes');
INSERT INTO `wp_options` VALUES (2, 'home', 'https://www.chwech.com', 'yes');
INSERT INTO `wp_options` VALUES (3, 'blogname', 'chwech码农地', 'yes');
INSERT INTO `wp_options` VALUES (4, 'blogdescription', '一个前端工程师的技术博客', 'yes');
INSERT INTO `wp_options` VALUES (5, 'users_can_register', '0', 'yes');
INSERT INTO `wp_options` VALUES (6, 'admin_email', '804699297@qq.com', 'yes');
INSERT INTO `wp_options` VALUES (7, 'start_of_week', '1', 'yes');
INSERT INTO `wp_options` VALUES (8, 'use_balanceTags', '0', 'yes');
INSERT INTO `wp_options` VALUES (9, 'use_smilies', '1', 'yes');
INSERT INTO `wp_options` VALUES (10, 'require_name_email', '1', 'yes');
INSERT INTO `wp_options` VALUES (11, 'comments_notify', '1', 'yes');
INSERT INTO `wp_options` VALUES (12, 'posts_per_rss', '10', 'yes');
INSERT INTO `wp_options` VALUES (13, 'rss_use_excerpt', '0', 'yes');
INSERT INTO `wp_options` VALUES (14, 'mailserver_url', 'mail.example.com', 'yes');
INSERT INTO `wp_options` VALUES (15, 'mailserver_login', 'login@example.com', 'yes');
INSERT INTO `wp_options` VALUES (16, 'mailserver_pass', 'password', 'yes');
INSERT INTO `wp_options` VALUES (17, 'mailserver_port', '110', 'yes');
INSERT INTO `wp_options` VALUES (18, 'default_category', '1', 'yes');
INSERT INTO `wp_options` VALUES (19, 'default_comment_status', 'open', 'yes');
INSERT INTO `wp_options` VALUES (20, 'default_ping_status', 'open', 'yes');
INSERT INTO `wp_options` VALUES (21, 'default_pingback_flag', '1', 'yes');
INSERT INTO `wp_options` VALUES (22, 'posts_per_page', '10', 'yes');
INSERT INTO `wp_options` VALUES (23, 'date_format', 'F j, Y', 'yes');
INSERT INTO `wp_options` VALUES (24, 'time_format', 'g:i a', 'yes');
INSERT INTO `wp_options` VALUES (25, 'links_updated_date_format', 'F j, Y g:i a', 'yes');
INSERT INTO `wp_options` VALUES (26, 'comment_moderation', '0', 'yes');
INSERT INTO `wp_options` VALUES (27, 'moderation_notify', '1', 'yes');
INSERT INTO `wp_options` VALUES (28, 'permalink_structure', '/%year%/%monthnum%/%day%/%postname%/', 'yes');
INSERT INTO `wp_options` VALUES (29, 'rewrite_rules', 'a:98:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:50:\"(javascript)/(?:feed/)?(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:33:\"(javascript)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:15:\"(javascript)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:48:\"(markdown)/(?:feed/)?(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:31:\"(markdown)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:13:\"(markdown)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:53:\"(uncategorized)/(?:feed/)?(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:36:\"(uncategorized)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:18:\"(uncategorized)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:43:\"(vue)/(?:feed/)?(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:26:\"(vue)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:8:\"(vue)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:14:\"category/(.*)$\";s:39:\"index.php?category_redirect=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:20:\"tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:21:\"type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:23:\"author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:45:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:32:\"([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:19:\"([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:58:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:68:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:88:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:83:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:64:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:53:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/embed/?$\";s:91:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/trackback/?$\";s:85:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&tb=1\";s:77:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&feed=$matches[5]\";s:65:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&paged=$matches[5]\";s:72:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$\";s:98:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&cpage=$matches[5]\";s:61:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/([^/]+)(?:/([0-9]+))?/?$\";s:97:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&name=$matches[4]&page=$matches[5]\";s:47:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:57:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:77:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:72:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:53:\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}/[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&cpage=$matches[4]\";s:51:\"([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&cpage=$matches[3]\";s:38:\"([0-9]{4})/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&cpage=$matches[2]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";}', 'yes');
INSERT INTO `wp_options` VALUES (30, 'hack_file', '0', 'yes');
INSERT INTO `wp_options` VALUES (31, 'blog_charset', 'UTF-8', 'yes');
INSERT INTO `wp_options` VALUES (32, 'moderation_keys', '', 'no');
INSERT INTO `wp_options` VALUES (33, 'active_plugins', 'a:1:{i:0;s:27:\"wp-editormd/wp-editormd.php\";}', 'yes');
INSERT INTO `wp_options` VALUES (34, 'category_base', '', 'yes');
INSERT INTO `wp_options` VALUES (35, 'ping_sites', 'http://rpc.pingomatic.com/', 'yes');
INSERT INTO `wp_options` VALUES (36, 'comment_max_links', '2', 'yes');
INSERT INTO `wp_options` VALUES (37, 'gmt_offset', '0', 'yes');
INSERT INTO `wp_options` VALUES (38, 'default_email_category', '1', 'yes');
INSERT INTO `wp_options` VALUES (39, 'recently_edited', '', 'no');
INSERT INTO `wp_options` VALUES (40, 'template', 'Mokore', 'yes');
INSERT INTO `wp_options` VALUES (41, 'stylesheet', 'Mokore', 'yes');
INSERT INTO `wp_options` VALUES (42, 'comment_whitelist', '1', 'yes');
INSERT INTO `wp_options` VALUES (43, 'blacklist_keys', '', 'no');
INSERT INTO `wp_options` VALUES (44, 'comment_registration', '0', 'yes');
INSERT INTO `wp_options` VALUES (45, 'html_type', 'text/html', 'yes');
INSERT INTO `wp_options` VALUES (46, 'use_trackback', '0', 'yes');
INSERT INTO `wp_options` VALUES (47, 'default_role', 'subscriber', 'yes');
INSERT INTO `wp_options` VALUES (48, 'db_version', '44719', 'yes');
INSERT INTO `wp_options` VALUES (49, 'uploads_use_yearmonth_folders', '1', 'yes');
INSERT INTO `wp_options` VALUES (50, 'upload_path', '', 'yes');
INSERT INTO `wp_options` VALUES (51, 'blog_public', '1', 'yes');
INSERT INTO `wp_options` VALUES (52, 'default_link_category', '2', 'yes');
INSERT INTO `wp_options` VALUES (53, 'show_on_front', 'posts', 'yes');
INSERT INTO `wp_options` VALUES (54, 'tag_base', '', 'yes');
INSERT INTO `wp_options` VALUES (55, 'show_avatars', '1', 'yes');
INSERT INTO `wp_options` VALUES (56, 'avatar_rating', 'G', 'yes');
INSERT INTO `wp_options` VALUES (57, 'upload_url_path', '', 'yes');
INSERT INTO `wp_options` VALUES (58, 'thumbnail_size_w', '150', 'yes');
INSERT INTO `wp_options` VALUES (59, 'thumbnail_size_h', '150', 'yes');
INSERT INTO `wp_options` VALUES (60, 'thumbnail_crop', '1', 'yes');
INSERT INTO `wp_options` VALUES (61, 'medium_size_w', '300', 'yes');
INSERT INTO `wp_options` VALUES (62, 'medium_size_h', '300', 'yes');
INSERT INTO `wp_options` VALUES (63, 'avatar_default', 'mystery', 'yes');
INSERT INTO `wp_options` VALUES (64, 'large_size_w', '1024', 'yes');
INSERT INTO `wp_options` VALUES (65, 'large_size_h', '1024', 'yes');
INSERT INTO `wp_options` VALUES (66, 'image_default_link_type', 'none', 'yes');
INSERT INTO `wp_options` VALUES (67, 'image_default_size', '', 'yes');
INSERT INTO `wp_options` VALUES (68, 'image_default_align', '', 'yes');
INSERT INTO `wp_options` VALUES (69, 'close_comments_for_old_posts', '0', 'yes');
INSERT INTO `wp_options` VALUES (70, 'close_comments_days_old', '14', 'yes');
INSERT INTO `wp_options` VALUES (71, 'thread_comments', '1', 'yes');
INSERT INTO `wp_options` VALUES (72, 'thread_comments_depth', '5', 'yes');
INSERT INTO `wp_options` VALUES (73, 'page_comments', '0', 'yes');
INSERT INTO `wp_options` VALUES (74, 'comments_per_page', '50', 'yes');
INSERT INTO `wp_options` VALUES (75, 'default_comments_page', 'newest', 'yes');
INSERT INTO `wp_options` VALUES (76, 'comment_order', 'asc', 'yes');
INSERT INTO `wp_options` VALUES (77, 'sticky_posts', 'a:0:{}', 'yes');
INSERT INTO `wp_options` VALUES (78, 'widget_categories', 'a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (79, 'widget_text', 'a:0:{}', 'yes');
INSERT INTO `wp_options` VALUES (80, 'widget_rss', 'a:0:{}', 'yes');
INSERT INTO `wp_options` VALUES (81, 'uninstall_plugins', 'a:0:{}', 'no');
INSERT INTO `wp_options` VALUES (82, 'timezone_string', '', 'yes');
INSERT INTO `wp_options` VALUES (83, 'page_for_posts', '0', 'yes');
INSERT INTO `wp_options` VALUES (84, 'page_on_front', '0', 'yes');
INSERT INTO `wp_options` VALUES (85, 'default_post_format', '0', 'yes');
INSERT INTO `wp_options` VALUES (86, 'link_manager_enabled', '0', 'yes');
INSERT INTO `wp_options` VALUES (87, 'finished_splitting_shared_terms', '1', 'yes');
INSERT INTO `wp_options` VALUES (88, 'site_icon', '0', 'yes');
INSERT INTO `wp_options` VALUES (89, 'medium_large_size_w', '768', 'yes');
INSERT INTO `wp_options` VALUES (90, 'medium_large_size_h', '0', 'yes');
INSERT INTO `wp_options` VALUES (91, 'wp_page_for_privacy_policy', '3', 'yes');
INSERT INTO `wp_options` VALUES (92, 'show_comments_cookies_opt_in', '1', 'yes');
INSERT INTO `wp_options` VALUES (93, 'initial_db_version', '44719', 'yes');
INSERT INTO `wp_options` VALUES (94, 'wp_user_roles', 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}', 'yes');
INSERT INTO `wp_options` VALUES (95, 'fresh_site', '0', 'yes');
INSERT INTO `wp_options` VALUES (96, 'widget_search', 'a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (97, 'widget_recent-posts', 'a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (98, 'widget_recent-comments', 'a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (99, 'widget_archives', 'a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (100, 'widget_meta', 'a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (101, 'sidebars_widgets', 'a:2:{s:19:\"wp_inactive_widgets\";a:0:{}s:13:\"array_version\";i:3;}', 'yes');
INSERT INTO `wp_options` VALUES (102, 'widget_pages', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (103, 'widget_calendar', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (104, 'widget_media_audio', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (105, 'widget_media_image', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (106, 'widget_media_gallery', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (107, 'widget_media_video', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (108, 'nonce_key', '(tKlI;P|@{5=rw94E,6sf/.DgHTI2>/?<FJM}.kWB,U)FJf9$#oo:d5>Qn.LL`S[', 'no');
INSERT INTO `wp_options` VALUES (109, 'nonce_salt', '1#Ea~dEKYRUD-}vf%my%6pEr@[$a*+n:Td%UKX|[N4Bd:Pa[zlZ<SRj@<I>a@`NH', 'no');
INSERT INTO `wp_options` VALUES (110, 'widget_tag_cloud', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (111, 'widget_nav_menu', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (112, 'widget_custom_html', 'a:1:{s:12:\"_multiwidget\";i:1;}', 'yes');
INSERT INTO `wp_options` VALUES (113, 'cron', 'a:5:{i:1586617933;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1586639533;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1586682848;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1586686867;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}', 'yes');
INSERT INTO `wp_options` VALUES (114, 'theme_mods_twentynineteen', 'a:3:{s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1555212301;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}}}s:18:\"nav_menu_locations\";a:0:{}}', 'yes');
INSERT INTO `wp_options` VALUES (119, 'secure_auth_key', 'rd-ehnQH)D0{=`v`mgkMDO3!7+2@.XKltfHiGwtL*aDygY^-9]3GOIm#N#pK|4-<', 'no');
INSERT INTO `wp_options` VALUES (120, 'secure_auth_salt', '|B}vWd!#e@6^H6`]l;z>2D:mE,0[tkSJv*`Lb3W0dP)xx3h}tt1TrJAB1jC3U#O@', 'no');
INSERT INTO `wp_options` VALUES (121, 'logged_in_key', '<;u:otYV]}T-S$!1hPvReLgPu>8NmKxqnpA7t*fk5ZW]+G4kRS*xHt^gwrUndRA*', 'no');
INSERT INTO `wp_options` VALUES (122, 'logged_in_salt', '(I=E1%#^V[tuQt2$B)=BW4W`5H9H$D%Y(jfM1=`vVEm||?izX#UQQJxKje`_Urmz', 'no');
INSERT INTO `wp_options` VALUES (126, 'can_compress_scripts', '0', 'no');
INSERT INTO `wp_options` VALUES (142, 'current_theme', 'Mokore', 'yes');
INSERT INTO `wp_options` VALUES (143, 'theme_mods_Mokore', 'a:4:{i:0;b:0;s:18:\"nav_menu_locations\";a:0:{}s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1555212187;s:4:\"data\";a:1:{s:19:\"wp_inactive_widgets\";a:0:{}}}}', 'yes');
INSERT INTO `wp_options` VALUES (144, 'theme_switched', '', 'yes');
INSERT INTO `wp_options` VALUES (145, 'optionsframework', 'a:2:{s:2:\"id\";s:23:\"optionsframework_mokore\";s:12:\"knownoptions\";a:1:{i:0;s:23:\"optionsframework_mokore\";}}', 'yes');
INSERT INTO `wp_options` VALUES (146, 'optionsframework_mokore', 'a:92:{s:10:\"theme_skin\";s:7:\"#23d3e0\";s:11:\"mokore_logo\";s:0:\"\";s:15:\"mokore_logo_ico\";s:86:\"https://www.chwech.com/wp-content/uploads/2019/06/006rG8asly1fzte28fllej30dw0dv75c.jpg\";s:11:\"mokore_meta\";b:0;s:20:\"mokore_meta_keywords\";s:0:\"\";s:23:\"mokore_meta_description\";s:0:\"\";s:7:\"shownav\";b:0;s:10:\"patternimg\";b:0;s:10:\"top_search\";s:3:\"yes\";s:15:\"post_list_style\";s:8:\"standard\";s:9:\"list_type\";s:5:\"round\";s:11:\"toggle-menu\";s:3:\"yes\";s:13:\"pagenav_style\";s:4:\"ajax\";s:9:\"admin_des\";s:139:\"眼前解决不了的问题，\r\n\r\n都可交付未来，\r\n\r\n时间是一个伟大的作者，\r\n\r\n他必将写出，\r\n\r\n最完美的答案。\";s:8:\"head_css\";s:57:\"https://www.chwech.com/wp-content/themes/Mokore/theme.css\";s:11:\"footer_info\";s:66:\"Copyright &copy; 2019  by chwech 备案号: 粤ICP备17047292号-1\";s:9:\"head_code\";s:0:\"\";s:11:\"footer_code\";s:0:\"\";s:17:\"site_custom_style\";s:0:\"\";s:10:\"head_focus\";b:0;s:11:\"focus_slant\";s:1:\"1\";s:11:\"focus_infos\";b:0;s:12:\"focus_height\";b:0;s:9:\"focus_amv\";b:0;s:12:\"focus_mvlive\";b:0;s:7:\"amv_url\";s:0:\"\";s:9:\"amv_title\";s:0:\"\";s:10:\"focus_logo\";s:81:\"https://www.chwech.com/wp-content/uploads/2019/06/u3628509720244891551fm26gp0.jpg\";s:11:\"focus_img_1\";s:0:\"\";s:11:\"focus_img_2\";s:0:\"\";s:11:\"focus_img_3\";s:0:\"\";s:11:\"focus_img_4\";s:0:\"\";s:11:\"focus_img_5\";s:0:\"\";s:16:\"focus_img_filter\";s:14:\"filter-nothing\";s:9:\"post_like\";s:3:\"yes\";s:10:\"post_share\";s:3:\"yes\";s:10:\"post_nepre\";s:3:\"yes\";s:14:\"author_profile\";s:3:\"yes\";s:11:\"alipay_code\";s:0:\"\";s:11:\"wechat_code\";s:0:\"\";s:6:\"wechat\";s:0:\"\";s:4:\"sina\";s:0:\"\";s:2:\"qq\";s:9:\"804699297\";s:5:\"qzone\";s:0:\"\";s:5:\"dofan\";s:0:\"\";s:6:\"github\";s:25:\"https://github.com/chwech\";s:7:\"toutiao\";s:0:\"\";s:7:\"kandian\";s:0:\"\";s:6:\"lofter\";s:0:\"\";s:4:\"bili\";s:0:\"\";s:5:\"youku\";s:0:\"\";s:6:\"alipay\";s:0:\"\";s:8:\"dribbble\";s:0:\"\";s:5:\"tieba\";s:0:\"\";s:7:\"twitter\";s:0:\"\";s:5:\"zcool\";s:0:\"\";s:5:\"zhihu\";s:0:\"\";s:8:\"facebook\";s:0:\"\";s:10:\"googleplus\";s:0:\"\";s:7:\"jianshu\";s:0:\"\";s:4:\"csdn\";s:0:\"\";s:11:\"top_feature\";b:0;s:13:\"feature_title\";s:6:\"聚焦\";s:12:\"feature1_img\";s:64:\"http://wx4.sinaimg.cn/mw690/006rG8asly1fzte2eg8hvj30jg0chaao.jpg\";s:14:\"feature1_title\";s:8:\"feature1\";s:13:\"feature1_link\";s:1:\"#\";s:12:\"feature2_img\";s:64:\"http://wx4.sinaimg.cn/mw690/006rG8asly1fzte2eg8hvj30jg0chaao.jpg\";s:14:\"feature2_title\";s:8:\"feature2\";s:13:\"feature2_link\";s:1:\"#\";s:12:\"feature3_img\";s:64:\"http://wx4.sinaimg.cn/mw690/006rG8asly1fzte2eg8hvj30jg0chaao.jpg\";s:14:\"feature3_title\";s:8:\"feature3\";s:13:\"feature3_link\";s:1:\"#\";s:12:\"imgbox_music\";s:0:\"\";s:8:\"poi_pjax\";b:0;s:11:\"head_notice\";b:0;s:12:\"notice_title\";s:0:\"\";s:11:\"web_runtime\";s:1:\"1\";s:13:\"web_buildtime\";s:9:\"2019-3-30\";s:16:\"classify_display\";s:0:\"\";s:14:\"image_category\";s:0:\"\";s:14:\"mail_user_name\";s:3:\"poi\";s:20:\"open_private_message\";b:0;s:7:\"norobot\";s:1:\"1\";s:14:\"open_useragent\";b:0;s:19:\"open_prism_codelamp\";b:0;s:9:\"qiniu_cdn\";s:0:\"\";s:8:\"login_bg\";s:0:\"\";s:11:\"exlogin_url\";s:0:\"\";s:14:\"exregister_url\";s:0:\"\";s:16:\"ex_register_open\";b:0;s:13:\"login_urlskip\";b:0;s:14:\"login_validate\";b:0;}', 'yes');
INSERT INTO `wp_options` VALUES (148, 'auth_key', '<gy5 sfq+V:I#.W7Tb,TtsV&WW?w+PF)[}g[?WgZysD_quz[P+>L~k!i?ZU}3k.P', 'no');
INSERT INTO `wp_options` VALUES (149, 'auth_salt', 'Qv>xN!+,!r-V.>?pwxkp%bTY@YGIH8LM%0y5@~_i/fFCxTK&Ln#$_dO~xW:<vSOH', 'no');
INSERT INTO `wp_options` VALUES (153, 'recently_activated', 'a:0:{}', 'yes');
INSERT INTO `wp_options` VALUES (200, 'ftp_credentials', 'a:3:{s:8:\"hostname\";s:14:\"www.chwech.com\";s:8:\"username\";s:6:\"chwech\";s:15:\"connection_type\";s:3:\"ftp\";}', 'yes');
INSERT INTO `wp_options` VALUES (242, 'editor_basics', 'a:8:{s:9:\"task_list\";s:3:\"off\";s:10:\"imagepaste\";s:3:\"off\";s:12:\"live_preview\";s:3:\"off\";s:14:\"sync_scrolling\";s:3:\"off\";s:11:\"html_decode\";s:3:\"off\";s:13:\"support_front\";s:3:\"off\";s:13:\"support_reply\";s:3:\"off\";s:18:\"support_other_text\";s:0:\"\";}', 'yes');
INSERT INTO `wp_options` VALUES (243, 'editor_style', 'a:3:{s:11:\"theme_style\";s:7:\"default\";s:10:\"code_style\";s:7:\"default\";s:13:\"editor_addres\";s:51:\"https://cdn.jsdelivr.net/wp/wp-editormd/tags/10.0.3\";}', 'yes');
INSERT INTO `wp_options` VALUES (244, 'syntax_highlighting', 'a:9:{s:19:\"highlight_mode_auto\";s:3:\"off\";s:12:\"line_numbers\";s:3:\"off\";s:13:\"show_language\";s:3:\"off\";s:14:\"copy_clipboard\";s:3:\"off\";s:23:\"highlight_library_style\";s:7:\"default\";s:18:\"customize_my_style\";s:7:\"nothing\";s:24:\"highlight_mode_customize\";s:3:\"off\";s:25:\"customize_highlight_style\";s:7:\"nothing\";s:30:\"customize_highlight_javascript\";s:7:\"nothing\";}', 'yes');
INSERT INTO `wp_options` VALUES (245, 'editor_emoji', 'a:1:{s:13:\"support_emoji\";s:3:\"off\";}', 'yes');
INSERT INTO `wp_options` VALUES (246, 'editor_toc', 'a:1:{s:11:\"support_toc\";s:3:\"off\";}', 'yes');
INSERT INTO `wp_options` VALUES (247, 'editor_katex', 'a:1:{s:13:\"support_katex\";s:3:\"off\";}', 'yes');
INSERT INTO `wp_options` VALUES (248, 'editor_mermaid', 'a:1:{s:13:\"support_katex\";s:3:\"off\";}', 'yes');
INSERT INTO `wp_options` VALUES (249, 'editor_mindmap', 'a:4:{s:11:\"theme_style\";s:7:\"default\";s:10:\"code_style\";s:7:\"default\";s:13:\"editor_addres\";s:51:\"https://cdn.jsdelivr.net/wp/wp-editormd/tags/10.0.3\";s:17:\"customize_mindmap\";s:81:\"https://cdn.jsdelivr.net/wp/wp-editormd/tags/10.0.3/assets/MindMap/mindMap.min.js\";}', 'yes');
INSERT INTO `wp_options` VALUES (250, 'editor_advanced', 'a:2:{s:17:\"jquery_compatible\";s:3:\"off\";s:8:\"hide_ads\";s:3:\"off\";}', 'yes');
INSERT INTO `wp_options` VALUES (385, 'WPLANG', 'zh_CN', 'yes');
INSERT INTO `wp_options` VALUES (386, 'new_admin_email', '804699297@qq.com', 'yes');
INSERT INTO `wp_options` VALUES (392, 'theme_mods_twentysixteen', 'a:4:{i:0;b:0;s:18:\"nav_menu_locations\";a:0:{}s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1555212259;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:10:\"archives-2\";i:1;s:6:\"meta-2\";i:2;s:8:\"search-2\";i:3;s:12:\"categories-2\";i:4;s:14:\"recent-posts-2\";i:5;s:17:\"recent-comments-2\";}s:9:\"sidebar-1\";a:0:{}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}', 'yes');
INSERT INTO `wp_options` VALUES (393, '_transient_twentysixteen_categories', '1', 'yes');
INSERT INTO `wp_options` VALUES (396, 'theme_mods_twentyseventeen', 'a:4:{i:0;b:0;s:18:\"nav_menu_locations\";a:0:{}s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1555213378;s:4:\"data\";a:4:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:9:\"sidebar-2\";a:0:{}s:9:\"sidebar-3\";a:0:{}}}}', 'yes');
INSERT INTO `wp_options` VALUES (397, '_transient_twentyseventeen_categories', '1', 'yes');
INSERT INTO `wp_options` VALUES (1409, 'external_theme_updates-Mokore', 'O:8:\"stdClass\":3:{s:9:\"lastCheck\";i:1559697179;s:14:\"checkedVersion\";s:3:\"1.2\";s:6:\"update\";N;}', 'yes');
INSERT INTO `wp_options` VALUES (1414, 'z_taxonomy_image2', '', 'yes');
INSERT INTO `wp_options` VALUES (1512, 'z_taxonomy_image4', '', 'yes');
INSERT INTO `wp_options` VALUES (2321, 'category_children', 'a:0:{}', 'yes');
INSERT INTO `wp_options` VALUES (3260, 'auto_core_update_notified', 'a:4:{s:4:\"type\";s:4:\"fail\";s:5:\"email\";s:16:\"804699297@qq.com\";s:7:\"version\";s:5:\"5.1.4\";s:9:\"timestamp\";i:1582374951;}', 'no');
INSERT INTO `wp_options` VALUES (6053, 'auto_core_update_failed', 'a:6:{s:9:\"attempted\";s:5:\"5.1.4\";s:7:\"current\";s:5:\"5.1.1\";s:10:\"error_code\";s:23:\"mkdir_failed_ziparchive\";s:10:\"error_data\";N;s:9:\"timestamp\";i:1582374951;s:5:\"retry\";b:0;}', 'no');
INSERT INTO `wp_options` VALUES (6657, '_transient_is_multi_author', '0', 'yes');
INSERT INTO `wp_options` VALUES (7337, '_site_transient_timeout_theme_roots', '1586608316', 'no');
INSERT INTO `wp_options` VALUES (7338, '_site_transient_theme_roots', 'a:4:{s:6:\"Mokore\";s:7:\"/themes\";s:14:\"twentynineteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:13:\"twentysixteen\";s:7:\"/themes\";}', 'no');
INSERT INTO `wp_options` VALUES (7341, '_site_transient_update_core', 'O:8:\"stdClass\":4:{s:7:\"updates\";a:6:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:63:\"https://downloads.wordpress.org/release/zh_CN/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"zh_CN\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:63:\"https://downloads.wordpress.org/release/zh_CN/wordpress-5.4.zip\";s:10:\"no_content\";b:0;s:11:\"new_bundled\";b:0;s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":10:{s:8:\"response\";s:7:\"upgrade\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.4-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.4-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";}i:2;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.4.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.4-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.4-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:3:\"5.4\";s:7:\"version\";s:3:\"5.4\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:3;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.3.2.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.3.2.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.3.2-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-5.3.2-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"5.3.2\";s:7:\"version\";s:5:\"5.3.2\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:4;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.2.5.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.2.5.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.2.5-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-5.2.5-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"5.2.5\";s:7:\"version\";s:5:\"5.2.5\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:0:\"\";s:9:\"new_files\";s:1:\"1\";}i:5;O:8:\"stdClass\":11:{s:8:\"response\";s:10:\"autoupdate\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.1.4.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-5.1.4.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.1.4-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-5.1.4-new-bundled.zip\";s:7:\"partial\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.1.4-partial-1.zip\";s:8:\"rollback\";s:70:\"https://downloads.wordpress.org/release/wordpress-5.1.4-rollback-1.zip\";}s:7:\"current\";s:5:\"5.1.4\";s:7:\"version\";s:5:\"5.1.4\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.3\";s:15:\"partial_version\";s:5:\"5.1.1\";s:9:\"new_files\";s:0:\"\";}}s:12:\"last_checked\";i:1586606520;s:15:\"version_checked\";s:5:\"5.1.1\";s:12:\"translations\";a:1:{i:0;a:7:{s:4:\"type\";s:4:\"core\";s:4:\"slug\";s:7:\"default\";s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"5.1.1\";s:7:\"updated\";s:19:\"2019-07-29 00:19:11\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/5.1.1/zh_CN.zip\";s:10:\"autoupdate\";b:1;}}}', 'no');
INSERT INTO `wp_options` VALUES (7342, '_site_transient_update_themes', 'O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1586606520;s:7:\"checked\";a:4:{s:6:\"Mokore\";s:3:\"1.2\";s:14:\"twentynineteen\";s:3:\"1.3\";s:15:\"twentyseventeen\";s:3:\"2.1\";s:13:\"twentysixteen\";s:3:\"1.9\";}s:8:\"response\";a:3:{s:14:\"twentynineteen\";a:6:{s:5:\"theme\";s:14:\"twentynineteen\";s:11:\"new_version\";s:3:\"1.5\";s:3:\"url\";s:44:\"https://wordpress.org/themes/twentynineteen/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/theme/twentynineteen.1.5.zip\";s:8:\"requires\";s:5:\"4.9.6\";s:12:\"requires_php\";s:5:\"5.2.4\";}s:15:\"twentyseventeen\";a:6:{s:5:\"theme\";s:15:\"twentyseventeen\";s:11:\"new_version\";s:3:\"2.3\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentyseventeen/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentyseventeen.2.3.zip\";s:8:\"requires\";s:3:\"4.7\";s:12:\"requires_php\";s:5:\"5.2.4\";}s:13:\"twentysixteen\";a:6:{s:5:\"theme\";s:13:\"twentysixteen\";s:11:\"new_version\";s:3:\"2.1\";s:3:\"url\";s:43:\"https://wordpress.org/themes/twentysixteen/\";s:7:\"package\";s:59:\"https://downloads.wordpress.org/theme/twentysixteen.2.1.zip\";s:8:\"requires\";s:3:\"4.4\";s:12:\"requires_php\";s:5:\"5.2.4\";}}s:12:\"translations\";a:0:{}}', 'no');
INSERT INTO `wp_options` VALUES (7343, '_site_transient_update_plugins', 'O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1586606521;s:7:\"checked\";a:3:{s:19:\"akismet/akismet.php\";s:5:\"4.1.1\";s:9:\"hello.php\";s:5:\"1.7.1\";s:27:\"wp-editormd/wp-editormd.php\";s:6:\"10.0.3\";}s:8:\"response\";a:3:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.1.4\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.1.4.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:3:\"5.4\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:9:\"hello.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:5:\"1.7.2\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/plugin/hello-dolly.1.7.2.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:64:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=2052855\";s:2:\"1x\";s:64:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=2052855\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:66:\"https://ps.w.org/hello-dolly/assets/banner-772x250.jpg?rev=2052855\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"5.2.5\";s:12:\"requires_php\";b:0;s:13:\"compatibility\";O:8:\"stdClass\":0:{}}s:27:\"wp-editormd/wp-editormd.php\";O:8:\"stdClass\":12:{s:2:\"id\";s:25:\"w.org/plugins/wp-editormd\";s:4:\"slug\";s:11:\"wp-editormd\";s:6:\"plugin\";s:27:\"wp-editormd/wp-editormd.php\";s:11:\"new_version\";s:6:\"10.1.2\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/wp-editormd/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/plugin/wp-editormd.10.1.2.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:64:\"https://ps.w.org/wp-editormd/assets/icon-256x256.png?rev=1598433\";s:2:\"1x\";s:64:\"https://ps.w.org/wp-editormd/assets/icon-128x128.png?rev=1598433\";}s:7:\"banners\";a:2:{s:2:\"2x\";s:67:\"https://ps.w.org/wp-editormd/assets/banner-1544x500.png?rev=1598433\";s:2:\"1x\";s:66:\"https://ps.w.org/wp-editormd/assets/banner-772x250.png?rev=1598433\";}s:11:\"banners_rtl\";a:0:{}s:6:\"tested\";s:5:\"5.4.0\";s:12:\"requires_php\";s:5:\"5.6.0\";s:13:\"compatibility\";O:8:\"stdClass\":0:{}}}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:0:{}}', 'no');
INSERT INTO `wp_options` VALUES (7345, '_transient_doing_cron', '1586620321.7458939552307128906250', 'yes');

-- ----------------------------
-- Table structure for wp_postmeta
-- ----------------------------
DROP TABLE IF EXISTS `wp_postmeta`;
CREATE TABLE `wp_postmeta`  (
  `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `meta_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL DEFAULT NULL,
  `meta_value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL,
  PRIMARY KEY (`meta_id`) USING BTREE,
  INDEX `post_id`(`post_id`) USING BTREE,
  INDEX `meta_key`(`meta_key`(191)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 250 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_postmeta
-- ----------------------------
INSERT INTO `wp_postmeta` VALUES (1, 2, '_wp_page_template', 'default');
INSERT INTO `wp_postmeta` VALUES (2, 3, '_wp_page_template', 'default');
INSERT INTO `wp_postmeta` VALUES (3, 1, 'views', '303');
INSERT INTO `wp_postmeta` VALUES (4, 2, 'views', '261');
INSERT INTO `wp_postmeta` VALUES (5, 5, '_edit_lock', '1560048395:1');
INSERT INTO `wp_postmeta` VALUES (6, 5, 'views', '330');
INSERT INTO `wp_postmeta` VALUES (9, 5, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (10, 8, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (11, 5, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (12, 9, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (13, 10, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (16, 3, '_edit_lock', '1555213979:1');
INSERT INTO `wp_postmeta` VALUES (17, 2, '_edit_lock', '1560868179:1');
INSERT INTO `wp_postmeta` VALUES (19, 12, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (20, 12, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (21, 12, '_edit_lock', '1554818870:1');
INSERT INTO `wp_postmeta` VALUES (22, 13, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (23, 12, 'views', '371');
INSERT INTO `wp_postmeta` VALUES (24, 14, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (28, 18, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (29, 18, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (30, 18, '_edit_lock', '1556782075:1');
INSERT INTO `wp_postmeta` VALUES (31, 19, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (32, 18, 'views', '360');
INSERT INTO `wp_postmeta` VALUES (33, 20, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (34, 21, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (35, 22, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (36, 23, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (39, 24, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (41, 26, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (42, 26, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (43, 26, '_edit_lock', '1559052494:1');
INSERT INTO `wp_postmeta` VALUES (44, 27, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (45, 26, 'views', '1047');
INSERT INTO `wp_postmeta` VALUES (48, 1, '_edit_lock', '1559053372:1');
INSERT INTO `wp_postmeta` VALUES (49, 28, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (50, 1, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (53, 29, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (54, 1, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (55, 2, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (56, 30, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (57, 2, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (58, 31, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (59, 31, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (60, 31, '_edit_lock', '1559052841:1');
INSERT INTO `wp_postmeta` VALUES (61, 31, 'views', '4');
INSERT INTO `wp_postmeta` VALUES (62, 32, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (63, 33, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (65, 35, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (66, 35, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (67, 35, '_edit_lock', '1560047438:1');
INSERT INTO `wp_postmeta` VALUES (68, 36, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (69, 35, 'views', '945');
INSERT INTO `wp_postmeta` VALUES (70, 37, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (71, 37, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (72, 37, '_edit_lock', '1559053316:1');
INSERT INTO `wp_postmeta` VALUES (73, 38, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (75, 40, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (76, 41, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (77, 42, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (78, 43, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (79, 44, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (80, 45, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (81, 46, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (82, 47, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (89, 50, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (90, 50, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (91, 50, '_edit_lock', '1560047350:1');
INSERT INTO `wp_postmeta` VALUES (92, 51, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (93, 50, 'views', '6');
INSERT INTO `wp_postmeta` VALUES (94, 52, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (95, 53, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (102, 56, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (104, 58, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (105, 58, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (106, 58, '_edit_lock', '1560093458:1');
INSERT INTO `wp_postmeta` VALUES (107, 59, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (108, 58, 'views', '370');
INSERT INTO `wp_postmeta` VALUES (109, 60, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (110, 61, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (111, 62, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (112, 63, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (113, 64, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (114, 65, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (118, 67, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (119, 68, '_wp_attached_file', '2019/06/u3628509720244891551fm26gp0.jpg');
INSERT INTO `wp_postmeta` VALUES (120, 68, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:200;s:6:\"height\";i:200;s:4:\"file\";s:39:\"2019/06/u3628509720244891551fm26gp0.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:39:\"u3628509720244891551fm26gp0-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:39:\"u3628509720244891551fm26gp0-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (121, 69, '_wp_attached_file', '2019/06/006rG8asly1fzte28fllej30dw0dv75c.jpg');
INSERT INTO `wp_postmeta` VALUES (122, 69, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:200;s:6:\"height\";i:200;s:4:\"file\";s:44:\"2019/06/006rG8asly1fzte28fllej30dw0dv75c.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:44:\"006rG8asly1fzte28fllej30dw0dv75c-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:44:\"006rG8asly1fzte28fllej30dw0dv75c-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (123, 70, '_wp_attached_file', '2019/06/u17958180141349924277fm26gp0.jpg');
INSERT INTO `wp_postmeta` VALUES (124, 70, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:533;s:6:\"height\";i:300;s:4:\"file\";s:40:\"2019/06/u17958180141349924277fm26gp0.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:40:\"u17958180141349924277fm26gp0-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:40:\"u17958180141349924277fm26gp0-300x169.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:169;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:40:\"u17958180141349924277fm26gp0-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (126, 72, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (127, 72, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (128, 72, '_edit_lock', '1562594306:1');
INSERT INTO `wp_postmeta` VALUES (129, 73, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (130, 74, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (131, 72, 'views', '273');
INSERT INTO `wp_postmeta` VALUES (132, 75, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (133, 76, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (134, 77, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (135, 78, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (136, 79, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (139, 80, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (140, 81, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (143, 82, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (146, 83, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (149, 84, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (152, 85, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (155, 86, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (158, 87, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (163, 88, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (165, 90, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (166, 90, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (167, 90, '_edit_lock', '1565015284:1');
INSERT INTO `wp_postmeta` VALUES (168, 91, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (169, 92, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (170, 92, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (171, 92, '_edit_lock', '1565140081:1');
INSERT INTO `wp_postmeta` VALUES (172, 93, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (174, 95, '_wp_attached_file', '2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg');
INSERT INTO `wp_postmeta` VALUES (175, 95, '_wp_attachment_metadata', 'a:5:{s:5:\"width\";i:1862;s:6:\"height\";i:1534;s:4:\"file\";s:46:\"2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:46:\"713774d5383d726b1cb8e6b6ef48fd0d_r-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:46:\"713774d5383d726b1cb8e6b6ef48fd0d_r-300x247.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:247;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:46:\"713774d5383d726b1cb8e6b6ef48fd0d_r-768x633.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:633;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:47:\"713774d5383d726b1cb8e6b6ef48fd0d_r-1024x844.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:844;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:14:\"post-thumbnail\";a:4:{s:4:\"file\";s:46:\"713774d5383d726b1cb8e6b6ef48fd0d_r-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}');
INSERT INTO `wp_postmeta` VALUES (176, 96, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (177, 96, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (178, 96, '_edit_lock', '1583226660:1');
INSERT INTO `wp_postmeta` VALUES (179, 97, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (180, 96, 'views', '235');
INSERT INTO `wp_postmeta` VALUES (181, 98, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (184, 99, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (185, 99, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (186, 100, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (187, 99, '_edit_lock', '1567747913:1');
INSERT INTO `wp_postmeta` VALUES (189, 102, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (190, 103, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (191, 99, 'views', '236');
INSERT INTO `wp_postmeta` VALUES (194, 104, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (195, 105, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (198, 106, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (201, 107, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (204, 108, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (206, 110, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (207, 110, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (208, 110, '_edit_lock', '1571020539:1');
INSERT INTO `wp_postmeta` VALUES (209, 111, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (210, 110, 'views', '211');
INSERT INTO `wp_postmeta` VALUES (212, 113, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (213, 113, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (214, 113, '_edit_lock', '1574778011:1');
INSERT INTO `wp_postmeta` VALUES (215, 114, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (216, 113, 'views', '233');
INSERT INTO `wp_postmeta` VALUES (219, 115, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (221, 117, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (222, 117, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (223, 117, '_edit_lock', '1582292341:1');
INSERT INTO `wp_postmeta` VALUES (224, 118, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (225, 117, 'views', '215');
INSERT INTO `wp_postmeta` VALUES (226, 119, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (227, 120, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (228, 121, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (230, 123, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (233, 124, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (235, 126, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (236, 126, '_edit_last', '1');
INSERT INTO `wp_postmeta` VALUES (237, 126, '_edit_lock', '1582510325:1');
INSERT INTO `wp_postmeta` VALUES (238, 127, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (239, 126, 'views', '128');
INSERT INTO `wp_postmeta` VALUES (242, 128, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (243, 129, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (246, 130, '_wpcom_is_markdown', '1');
INSERT INTO `wp_postmeta` VALUES (249, 131, '_wpcom_is_markdown', '1');

-- ----------------------------
-- Table structure for wp_posts
-- ----------------------------
DROP TABLE IF EXISTS `wp_posts`;
CREATE TABLE `wp_posts`  (
  `ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `post_date` datetime(0) NOT NULL,
  `post_date_gmt` datetime(0) NOT NULL,
  `post_content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_title` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_excerpt` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `to_ping` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `pinged` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_modified` datetime(0) NOT NULL,
  `post_modified_gmt` datetime(0) NOT NULL,
  `post_content_filtered` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `post_parent` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `guid` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT 0,
  `post_type` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`) USING BTREE,
  INDEX `post_name`(`post_name`(191)) USING BTREE,
  INDEX `type_status_date`(`post_type`, `post_status`, `post_date`, `ID`) USING BTREE,
  INDEX `post_parent`(`post_parent`) USING BTREE,
  INDEX `post_author`(`post_author`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 149 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_posts
-- ----------------------------
INSERT INTO `wp_posts` VALUES (1, 1, '2019-03-30 09:12:11', '2019-03-30 09:12:11', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 'Hello world!', '', 'publish', 'open', 'open', '', 'hello-world', '', '', '2019-05-26 01:59:21', '2019-05-26 01:59:21', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 0, 'https://www.chwech.com/?p=1', 0, 'post', '', 1);
INSERT INTO `wp_posts` VALUES (2, 1, '2019-03-30 09:12:11', '2019-03-30 09:12:11', 'chwech\n男 广州天河|本科 2年工作经验\n804699297@qq.com\n\n<h2>求职意向</h2>\n\n期望工作岗位：中级前端开发\n到职状态: 离职随时入职\n\n<h2>工作经历</h2>\n\n<strong>2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发</strong>\n1. 负责产品团队成熟电子档案管理系统的重构工作。\n2. 负责多个新项目的前端开发和一个老项目的维护工作\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\n<strong>2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师</strong>\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\n\n<h2>项目经历</h2>\n\n<strong>2018.06 - 2018.12   交通工程电子档案系统重构</strong>\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\n<strong>2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台</strong>\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\n\n<h2>专业技能</h2>\n\n以下为我熟练使用的技能：\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\n前端工具：懂得使用webpack对项目进行模块打包。\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\n\n<h2>教育经历</h2>\n\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', 'My Resume', '', 'publish', 'closed', 'open', '', 'resume', '', '', '2019-06-18 14:29:39', '2019-06-18 14:29:39', 'chwech\r\n男 广州天河|本科 2年工作经验\r\n804699297@qq.com\r\n## 求职意向\r\n期望工作岗位：中级前端开发\r\n到职状态: 离职随时入职\r\n## 工作经历\r\n**2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发**\r\n1. 负责产品团队成熟电子档案管理系统的重构工作。\r\n2. 负责多个新项目的前端开发和一个老项目的维护工作\r\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\r\n**2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师**\r\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\r\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\r\n## 项目经历\r\n**2018.06 - 2018.12   交通工程电子档案系统重构**\r\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\r\n**2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台**\r\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\r\n## 专业技能\r\n以下为我熟练使用的技能：\r\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\r\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\r\n前端工具：懂得使用webpack对项目进行模块打包。\r\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\r\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\r\n## 教育经历\r\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', 0, 'https://www.chwech.com/?page_id=2', 0, 'page', '', 0);
INSERT INTO `wp_posts` VALUES (3, 1, '2019-03-30 09:12:11', '2019-03-30 09:12:11', '<!-- wp:heading --><h2>Who we are</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Our website address is: https://www.chwech.com.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>What personal data we collect and why we collect it</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Comments</h3><!-- /wp:heading --><!-- wp:paragraph --><p>When visitors leave comments on the site we collect the data shown in the comments form, and also the visitor&#8217;s IP address and browser user agent string to help spam detection.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>An anonymized string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Media</h3><!-- /wp:heading --><!-- wp:paragraph --><p>If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Contact forms</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Cookies</h3><!-- /wp:heading --><!-- wp:paragraph --><p>If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select &quot;Remember Me&quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Embedded content from other websites</h3><!-- /wp:heading --><!-- wp:paragraph --><p>Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the exact same way as if the visitor has visited the other website.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracking your interaction with the embedded content if you have an account and are logged in to that website.</p><!-- /wp:paragraph --><!-- wp:heading {\"level\":3} --><h3>Analytics</h3><!-- /wp:heading --><!-- wp:heading --><h2>Who we share your data with</h2><!-- /wp:heading --><!-- wp:heading --><h2>How long we retain your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognize and approve any follow-up comments automatically instead of holding them in a moderation queue.</p><!-- /wp:paragraph --><!-- wp:paragraph --><p>For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>What rights you have over your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>If you have an account on this site, or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Where we send your data</h2><!-- /wp:heading --><!-- wp:paragraph --><p>Visitor comments may be checked through an automated spam detection service.</p><!-- /wp:paragraph --><!-- wp:heading --><h2>Your contact information</h2><!-- /wp:heading --><!-- wp:heading --><h2>Additional information</h2><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>How we protect your data</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What data breach procedures we have in place</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What third parties we receive data from</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>What automated decision making and/or profiling we do with user data</h3><!-- /wp:heading --><!-- wp:heading {\"level\":3} --><h3>Industry regulatory disclosure requirements</h3><!-- /wp:heading -->', 'Privacy Policy', '', 'draft', 'closed', 'open', '', 'privacy-policy', '', '', '2019-03-30 09:12:11', '2019-03-30 09:12:11', '', 0, 'https://www.chwech.com/?page_id=3', 0, 'page', '', 0);
INSERT INTO `wp_posts` VALUES (5, 1, '2019-04-01 13:54:22', '2019-04-01 13:54:22', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<pre><code class=\"\"># 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n</code></pre>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<pre><code class=\"\">&gt; 这是引用\n</code></pre>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\n<pre><code class=\"\">    function fn () {\n        console.log(\'这是代码块\')\n    }\n</code></pre>\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<pre><code class=\"\">[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n</code></pre>\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n<pre><code class=\"\">此定义参考百度百科[markdown][markdown]词条\n</code></pre>\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<pre><code class=\"\">[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n</code></pre>\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<pre><code class=\"\">![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n</code></pre>\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<pre><code class=\"\">![alt text][id]\n[id]: url/to/image \"title\"\n</code></pre>\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<pre><code class=\"\">*斜体*\n\n**粗体**\n</code></pre>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<pre><code class=\"\">* 苹果\n* 香蕉\n* 雪梨\n</code></pre>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n\n<pre><code class=\"\">1. 苹果\n2. 香蕉\n3. 雪梨\n</code></pre>\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<pre><code class=\"\">header 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n</code></pre>\n\n<h2>中划线（文字中间划线）</h2>\n\n<pre><code class=\"\">~~测试测试测试~~\n</code></pre>\n\n<h1>待办事项列表</h1>\n\n<pre><code class=\"\">- [ ] todo1\n- [ ] todo2\n    - [x] todo3\n</code></pre>\n\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', 'markdown基本使用', '', 'publish', 'open', 'open', '', 'markdown%e5%9f%ba%e6%9c%ac%e4%bd%bf%e7%94%a8', '', '', '2019-06-09 02:48:44', '2019-06-09 02:48:44', '## 段落和换行\r\n\r\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\r\n\r\n## 标题\r\n```\r\n# 标题一h1\r\n## 标题二h2\r\n### 标题二h3\r\n#### 标题二h4\r\n##### 标题二h5\r\n###### 标题二h6\r\n```\r\n## 引用\r\n\r\n使用 **>** 号表示引用\r\n```\r\n&gt; 这是引用\r\n```\r\n## 代码块\r\n\r\n简单地缩进 4 个空格或是 1 个制表符就可以\r\n```\r\n	function fn () {\r\n		console.log(&#039;这是代码块&#039;)\r\n	}\r\n```\r\n## 代码\r\n\r\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\r\n\r\njavascript中可以用`console.log()`函数在控制台中输出东西\r\n\r\n## 链接\r\n### 行内链接\r\n\r\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\r\n```\r\n[百度](http://www.baidu.com/ &quot;百度一下，你就知道&quot;)一下，你就知道\r\n```\r\n### 参考链接\r\n\r\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\r\n```\r\n此定义参考百度百科[markdown][markdown]词条\r\n```\r\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\r\n```\r\n[markdown]: http://baike.baidu.com/item/markdown &quot;markdown词条&quot;\r\n```\r\n> 链接内容定义的形式为：\r\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\r\n> * 接着一个冒号\r\n> * 接着一个以上的空格或制表符\r\n> * 接着链接的网址\r\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\r\n\r\n## 图片\r\n### 行内式\r\n```\r\n![alt text](/path/to/img.jpg)\r\n![alt text](/path/to/img.jpg &quot;title&quot;)\r\n```\r\n> 详细叙述如下：\r\n> * 一个惊叹号 !\r\n> * 接着一个方括号，里面放上图片的替代文字\r\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\r\n\r\n### 参考式\r\n```\r\n![alt text][id]\r\n[id]: url/to/image &quot;title&quot;\r\n```\r\n## 强调\r\n\r\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\r\n```\r\n*斜体*\r\n\r\n**粗体**\r\n```\r\n## 列表\r\n### 无序列表\r\n\r\n无序列表用*加一个空格开头\r\n```\r\n* 苹果\r\n* 香蕉\r\n* 雪梨\r\n```\r\n### 有序列表\r\n\r\n有序列表直接写序号开头\r\n```\r\n1. 苹果\r\n2. 香蕉\r\n3. 雪梨\r\n```\r\n## 分隔线\r\n\r\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\r\n\r\n---\r\n\r\n## 表格\r\n```\r\nheader 1 | header 2\r\n---|---\r\nrow 1 col 1 | row 1 col 2\r\nrow 2 col 1 | row 2 col 2\r\n```\r\n## 中划线（文字中间划线）\r\n```\r\n~~测试测试测试~~\r\n```\r\n# 待办事项列表\r\n```\r\n- [ ] todo1\r\n- [ ] todo2\r\n	- [x] todo3\r\n```\r\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\r\n\r\n参考文章：\r\n\r\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 0, 'https://www.chwech.com/?p=5', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (6, 1, '2019-03-31 10:23:06', '2019-03-31 10:23:06', '## 段落和换行\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n## 标题\n\n# 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n\n## 引用\n\n使用 **&gt;** 号表示引用\n\n&gt; 这是引用\n\n## 代码块\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\nfunction fn () {\nconsole.log(\'这是代码块\')\n}\n\n## 代码\n\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\n\njavascript中可以用`console.log()`函数在控制台中输出东西\n\n## 链接\n### 行内链接\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n\n### 参考链接\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n此定义参考百度百科[markdown][markdown]词条\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n\n&gt; 链接内容定义的形式为：\n&gt; * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n&gt; * 接着一个冒号\n&gt; * 接着一个以上的空格或制表符\n&gt; * 接着链接的网址\n&gt; * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n\n## 图片\n### 行内式\n![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n&gt; 详细叙述如下：\n&gt; * 一个惊叹号 !\n&gt; * 接着一个方括号，里面放上图片的替代文字\n&gt; * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n\n### 参考式\n![alt text][id]\n[id]: url/to/image \"title\"\n## 强调\n\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\n\n*斜体*\n\n**粗体**\n\n## 列表\n### 无序列表\n\n无序列表用*加一个空格开头\n\n* 苹果\n* 香蕉\n* 雪梨\n\n### 有序列表\n\n有序列表直接写序号开头\n1. 苹果\n2. 香蕉\n3. 雪梨\n\n## 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n---\n\n## 表格\nheader 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n\n## 中划线（文字中间划线）\n~~测试测试测试~~\n\n参考文章：\n\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', '', '', 'inherit', 'closed', 'closed', '', '5-revision-v1', '', '', '2019-03-31 10:23:06', '2019-03-31 10:23:06', '', 5, 'https://www.chwech.com/2019/03/31/5-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (8, 1, '2019-04-01 13:44:58', '2019-04-01 13:44:58', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<h1>标题一h1</h1>\n\n<h2>标题二h2</h2>\n\n<h3>标题二h3</h3>\n\n<h4>标题二h4</h4>\n\n<h5>标题二h5</h5>\n\n<h6>标题二h6</h6>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<blockquote>\n  这是引用\n</blockquote>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\nfunction fn () {\nconsole.log(\'这是代码块\')\n}\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<a href=\"http://www.baidu.com/\" title=\"百度一下，你就知道\">百度</a>一下，你就知道\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n此定义参考百度百科<a href=\"http://baike.baidu.com/item/markdown\" title=\"markdown词条\">markdown</a>词条\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<img src=\"/path/to/img.jpg\" alt=\"alt text\" />\n<img src=\"/path/to/img.jpg\" alt=\"alt text\" title=\"title\" />\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<img src=\"url/to/image\" alt=\"alt text\" title=\"title\" />\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<em>斜体</em>\n\n<strong>粗体</strong>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<ul>\n<li>苹果</li>\n<li>香蕉</li>\n<li>雪梨</li>\n</ul>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n1. 苹果\n2. 香蕉\n3. 雪梨\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<table>\n<thead>\n<tr>\n  <th>header 1</th>\n  <th>header 2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>row 1 col 1</td>\n  <td>row 1 col 2</td>\n</tr>\n<tr>\n  <td>row 2 col 1</td>\n  <td>row 2 col 2</td>\n</tr>\n</tbody>\n</table>\n\n<h2>中划线（文字中间划线）</h2>\n\n<del>测试测试测试</del>\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', '', '', 'inherit', 'closed', 'closed', '', '5-revision-v1', '', '', '2019-04-01 13:44:58', '2019-04-01 13:44:58', '## 段落和换行\r\n\r\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\r\n\r\n## 标题\r\n\r\n# 标题一h1\r\n## 标题二h2\r\n### 标题二h3\r\n#### 标题二h4\r\n##### 标题二h5\r\n###### 标题二h6\r\n\r\n## 引用\r\n\r\n使用 **>** 号表示引用\r\n\r\n> 这是引用\r\n\r\n## 代码块\r\n\r\n简单地缩进 4 个空格或是 1 个制表符就可以\r\n\r\nfunction fn () {\r\nconsole.log(\'这是代码块\')\r\n}\r\n\r\n## 代码\r\n\r\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\r\n\r\njavascript中可以用`console.log()`函数在控制台中输出东西\r\n\r\n## 链接\r\n### 行内链接\r\n\r\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\r\n\r\n[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\r\n\r\n### 参考链接\r\n\r\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\r\n\r\n此定义参考百度百科[markdown][markdown]词条\r\n\r\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\r\n\r\n[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\r\n\r\n> 链接内容定义的形式为：\r\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\r\n> * 接着一个冒号\r\n> * 接着一个以上的空格或制表符\r\n> * 接着链接的网址\r\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\r\n\r\n## 图片\r\n### 行内式\r\n![alt text](/path/to/img.jpg)\r\n![alt text](/path/to/img.jpg \"title\")\r\n> 详细叙述如下：\r\n> * 一个惊叹号 !\r\n> * 接着一个方括号，里面放上图片的替代文字\r\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\r\n\r\n### 参考式\r\n![alt text][id]\r\n[id]: url/to/image \"title\"\r\n## 强调\r\n\r\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\r\n\r\n*斜体*\r\n\r\n**粗体**\r\n\r\n## 列表\r\n### 无序列表\r\n\r\n无序列表用*加一个空格开头\r\n\r\n* 苹果\r\n* 香蕉\r\n* 雪梨\r\n\r\n### 有序列表\r\n\r\n有序列表直接写序号开头\r\n1. 苹果\r\n2. 香蕉\r\n3. 雪梨\r\n\r\n## 分隔线\r\n\r\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\r\n\r\n---\r\n\r\n## 表格\r\nheader 1 | header 2\r\n---|---\r\nrow 1 col 1 | row 1 col 2\r\nrow 2 col 1 | row 2 col 2\r\n\r\n## 中划线（文字中间划线）\r\n~~测试测试测试~~\r\n\r\n参考文章：\r\n\r\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 5, 'https://www.chwech.com/2019/04/01/5-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (9, 1, '2019-04-01 13:49:15', '2019-04-01 13:49:15', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<pre><code class=\"\"># 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n</code></pre>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<pre><code class=\"\">&gt; 这是引用\n</code></pre>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\n<pre><code class=\"\">    function fn () {\n        console.log(\'这是代码块\')\n    }\n</code></pre>\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<pre><code class=\"\">[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n</code></pre>\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n<pre><code class=\"\">此定义参考百度百科[markdown][markdown]词条\n</code></pre>\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<pre><code class=\"\">[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n</code></pre>\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<pre><code class=\"\">![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n</code></pre>\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<pre><code class=\"\">![alt text][id]\n[id]: url/to/image \"title\"\n</code></pre>\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<pre><code class=\"\">*斜体*\n\n**粗体**\n</code></pre>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<pre><code class=\"\">* 苹果\n* 香蕉\n* 雪梨\n</code></pre>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n\n<pre><code class=\"\">1. 苹果\n2. 香蕉\n3. 雪梨\n</code></pre>\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<pre><code class=\"\">header 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n</code></pre>\n\n<h2>中划线（文字中间划线）</h2>\n\n<pre><code class=\"\">~~测试测试测试~~\n</code></pre>\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', '', '', 'inherit', 'closed', 'closed', '', '5-revision-v1', '', '', '2019-04-01 13:49:15', '2019-04-01 13:49:15', '## 段落和换行\r\n\r\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\r\n\r\n## 标题\r\n```\r\n# 标题一h1\r\n## 标题二h2\r\n### 标题二h3\r\n#### 标题二h4\r\n##### 标题二h5\r\n###### 标题二h6\r\n```\r\n## 引用\r\n\r\n使用 **>** 号表示引用\r\n```\r\n&gt; 这是引用\r\n```\r\n## 代码块\r\n\r\n简单地缩进 4 个空格或是 1 个制表符就可以\r\n```\r\n	function fn () {\r\n		console.log(&#039;这是代码块&#039;)\r\n	}\r\n```\r\n## 代码\r\n\r\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\r\n\r\njavascript中可以用`console.log()`函数在控制台中输出东西\r\n\r\n## 链接\r\n### 行内链接\r\n\r\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\r\n```\r\n[百度](http://www.baidu.com/ &quot;百度一下，你就知道&quot;)一下，你就知道\r\n```\r\n### 参考链接\r\n\r\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\r\n```\r\n此定义参考百度百科[markdown][markdown]词条\r\n```\r\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\r\n```\r\n[markdown]: http://baike.baidu.com/item/markdown &quot;markdown词条&quot;\r\n```\r\n> 链接内容定义的形式为：\r\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\r\n> * 接着一个冒号\r\n> * 接着一个以上的空格或制表符\r\n> * 接着链接的网址\r\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\r\n\r\n## 图片\r\n### 行内式\r\n```\r\n![alt text](/path/to/img.jpg)\r\n![alt text](/path/to/img.jpg &quot;title&quot;)\r\n```\r\n> 详细叙述如下：\r\n> * 一个惊叹号 !\r\n> * 接着一个方括号，里面放上图片的替代文字\r\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\r\n\r\n### 参考式\r\n```\r\n![alt text][id]\r\n[id]: url/to/image &quot;title&quot;\r\n```\r\n## 强调\r\n\r\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\r\n```\r\n*斜体*\r\n\r\n**粗体**\r\n```\r\n## 列表\r\n### 无序列表\r\n\r\n无序列表用*加一个空格开头\r\n```\r\n* 苹果\r\n* 香蕉\r\n* 雪梨\r\n```\r\n### 有序列表\r\n\r\n有序列表直接写序号开头\r\n```\r\n1. 苹果\r\n2. 香蕉\r\n3. 雪梨\r\n```\r\n## 分隔线\r\n\r\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\r\n\r\n---\r\n\r\n## 表格\r\n```\r\nheader 1 | header 2\r\n---|---\r\nrow 1 col 1 | row 1 col 2\r\nrow 2 col 1 | row 2 col 2\r\n```\r\n## 中划线（文字中间划线）\r\n```\r\n~~测试测试测试~~\r\n```\r\n\r\n参考文章：\r\n\r\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 5, 'https://www.chwech.com/2019/04/01/5-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (10, 1, '2019-04-01 13:51:18', '2019-04-01 13:51:18', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<pre><code class=\"\"># 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n</code></pre>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<pre><code class=\"\">&gt; 这是引用\n</code></pre>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\n<pre><code class=\"\">    function fn () {\n        console.log(\'这是代码块\')\n    }\n</code></pre>\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<pre><code class=\"\">[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n</code></pre>\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n<pre><code class=\"\">此定义参考百度百科[markdown][markdown]词条\n</code></pre>\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<pre><code class=\"\">[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n</code></pre>\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<pre><code class=\"\">![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n</code></pre>\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<pre><code class=\"\">![alt text][id]\n[id]: url/to/image \"title\"\n</code></pre>\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<pre><code class=\"\">*斜体*\n\n**粗体**\n</code></pre>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<pre><code class=\"\">* 苹果\n* 香蕉\n* 雪梨\n</code></pre>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n\n<pre><code class=\"\">1. 苹果\n2. 香蕉\n3. 雪梨\n</code></pre>\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<pre><code class=\"\">header 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n</code></pre>\n\n<h2>中划线（文字中间划线）</h2>\n\n<pre><code class=\"\">~~测试测试测试~~\n</code></pre>\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', 'markdown基本使用', '', 'inherit', 'closed', 'closed', '', '5-revision-v1', '', '', '2019-04-01 13:51:18', '2019-04-01 13:51:18', '## 段落和换行\r\n\r\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\r\n\r\n## 标题\r\n```\r\n# 标题一h1\r\n## 标题二h2\r\n### 标题二h3\r\n#### 标题二h4\r\n##### 标题二h5\r\n###### 标题二h6\r\n```\r\n## 引用\r\n\r\n使用 **>** 号表示引用\r\n```\r\n&gt; 这是引用\r\n```\r\n## 代码块\r\n\r\n简单地缩进 4 个空格或是 1 个制表符就可以\r\n```\r\n	function fn () {\r\n		console.log(&#039;这是代码块&#039;)\r\n	}\r\n```\r\n## 代码\r\n\r\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\r\n\r\njavascript中可以用`console.log()`函数在控制台中输出东西\r\n\r\n## 链接\r\n### 行内链接\r\n\r\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\r\n```\r\n[百度](http://www.baidu.com/ &quot;百度一下，你就知道&quot;)一下，你就知道\r\n```\r\n### 参考链接\r\n\r\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\r\n```\r\n此定义参考百度百科[markdown][markdown]词条\r\n```\r\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\r\n```\r\n[markdown]: http://baike.baidu.com/item/markdown &quot;markdown词条&quot;\r\n```\r\n> 链接内容定义的形式为：\r\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\r\n> * 接着一个冒号\r\n> * 接着一个以上的空格或制表符\r\n> * 接着链接的网址\r\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\r\n\r\n## 图片\r\n### 行内式\r\n```\r\n![alt text](/path/to/img.jpg)\r\n![alt text](/path/to/img.jpg &quot;title&quot;)\r\n```\r\n> 详细叙述如下：\r\n> * 一个惊叹号 !\r\n> * 接着一个方括号，里面放上图片的替代文字\r\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\r\n\r\n### 参考式\r\n```\r\n![alt text][id]\r\n[id]: url/to/image &quot;title&quot;\r\n```\r\n## 强调\r\n\r\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\r\n```\r\n*斜体*\r\n\r\n**粗体**\r\n```\r\n## 列表\r\n### 无序列表\r\n\r\n无序列表用*加一个空格开头\r\n```\r\n* 苹果\r\n* 香蕉\r\n* 雪梨\r\n```\r\n### 有序列表\r\n\r\n有序列表直接写序号开头\r\n```\r\n1. 苹果\r\n2. 香蕉\r\n3. 雪梨\r\n```\r\n## 分隔线\r\n\r\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\r\n\r\n---\r\n\r\n## 表格\r\n```\r\nheader 1 | header 2\r\n---|---\r\nrow 1 col 1 | row 1 col 2\r\nrow 2 col 1 | row 2 col 2\r\n```\r\n## 中划线（文字中间划线）\r\n```\r\n~~测试测试测试~~\r\n```\r\n\r\n参考文章：\r\n\r\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 5, 'https://www.chwech.com/2019/04/01/5-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (12, 1, '2019-04-09 14:10:07', '2019-04-09 14:10:07', '<h3>安装</h3>\n\n<h3>配置</h3>\n\n<h4>MySQL目录结构</h4>\n\nbin目录，存储可执行文件<br />\ndata目录，存储数据文件<br />\ndocs, 文档<br />\ninclude目录，存储包含的头文件<br />\nlib目录，存储库文件<br />\nshare目录，错误消息和字符集\n\n<h4>配置文件</h4>\n\nmy.ini\n\n<h3>启动与停止服务</h3>\n\n<ol>\n<li>管理-服务-mysql服务</li>\n<li>启动服务，cmd命令行输入</li>\n</ol>\n\n<pre><code class=\"\">net start mysql\n</code></pre>\n\n停止服务输入\n\n<pre><code class=\"\">net stop mysql\n</code></pre>\n\n<h3>登录与退出mysql</h3>\n\n<ol>\n<li>登录：cmd - <code>mysql -u root -p</code></li>\n<li>退出：<code>\\q</code> ,  <code>quit</code>  ,  <code>exit</code></li>\n</ol>\n\n<h4>修改MySql提示符</h4>\n\n<table>\n<thead>\n<tr>\n  <th>参数</th>\n  <th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>\\D</td>\n  <td>完整日期</td>\n</tr>\n<tr>\n  <td>\\d</td>\n  <td>当前数据库</td>\n</tr>\n<tr>\n  <td>\\h</td>\n  <td>服务器名称</td>\n</tr>\n<tr>\n  <td>\\u</td>\n  <td>当前用户</td>\n</tr>\n</tbody>\n</table>\n\n设置为 <em>当前用户@服务器名 数据库></em> 的形式\n\n<pre><code class=\"\">prompt \\u@\\h \\d&gt;\n</code></pre>\n\n<h3>常用命令</h3>\n\n<pre><code class=\"\">SELECT VERSION();\nSELECT NOW();\nSELECT USER();\nSELECT DATABASE(); // 查看当前数据库\n</code></pre>\n\n<h4>Mysql语句规范</h4>\n\n<ul>\n<li>关键字与函数名称全部大写</li>\n<li>数据库名称、表名称、字段名称全部小写</li>\n<li>SQL语句必须以分号结尾</li>\n</ul>\n\n<h3>操作数据库</h3>\n\n<h4>创建数据库</h4>\n\n<pre><code class=\"\">CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name\n</code></pre>\n\n<h4>修改数据库编码方式</h4>\n\n<pre><code class=\"\">ALTER {DATABASE | SCHEMA} [db_name] [DEFAULT] CHARACTER SET [=] charset_name\n</code></pre>\n\n<h4>删除数据库</h4>\n\n<pre><code class=\"\">DROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n</code></pre>\n\n<h4>查看数据库列表</h4>\n\n<pre><code class=\"\">SHOW [DATABASES | SCHEMAS]\n</code></pre>\n\n<h4>查看警告信息</h4>\n\n<pre><code class=\"\">SHOW WARNINGS\n</code></pre>\n\n<h4>查看数据库编码方式</h4>\n\n<pre><code class=\"\">SHOW CREATE DATABASE db_name;\n</code></pre>\n\n<h3>数据类型和操作数据表</h3>\n\n数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表不同的信息类型\n\n<h4>整形</h4>\n\n<img src=\"\" alt=\"image\" /><br />\nM<br />\n指出最大的显示尺寸。最大的合法的显示尺寸是 255 。\n\nUNSIGNED<br />\n无符号，即为非负数，只针对整型。\n\n当插入长度大于设定的M时，字段值不会被截断，还是按照类型的实际精度进行保存。\n\n整型字段有个ZEROFILL属性，在数字长度不够的数据前面填充0，以达到设定的长度。M值只当属性为ZEROFILL时，才有区别效果。\n\n<h4>浮点型</h4>\n\nFLOAT<br />\nDOUBLE\n\n<code>FLOAT(M, D)</code><br />\nM的值应该取1到255。D的值可为0到30\n\n<h4>时期时间型</h4>\n\nYEAR<br />\nTIME<br />\nDATE<br />\nDATEIME<br />\nTIMESTAMP\n\n<h4>字符型</h4>\n\nCHAR(M) M个字节，0 &lt;= M &lt;= 255<br />\nVARCHAR(M)<br />\nTINYTEXT \nTEXT<br />\nMEDIUMTEXT<br />\nLONGTEXT<br />\nENUM(\'value1\', \'value2\'...)<br />\nSET(\'value1\', \'value2\'...)\n\n<h4>创建数据表</h4>\n\n打开数据库：\nUSE 数据库<br />\n查看当前打开的数据库：<code>SELECT DATABASE();</code>\n\n<pre><code class=\"\">CREATE TABLE [IF NOT EXISTS] table_name(\n    column_name data_type,\n)\n</code></pre>\n\n<h4>查看数据表</h4>\n\n<pre><code class=\"\">SHOW TABLES [FROM db_name];\n</code></pre>\n\n<h4>查看数据表的结构</h4>\n\n<pre><code class=\"\">SHOW COLUMNS FROM tb_name;\n</code></pre>\n\n或者\n\n<pre><code class=\"\">DESC tb_name;\n</code></pre>\n\n<h4>插入记录</h4>\n\n<pre><code class=\"\">INSERT [INTO] tb_name[(COLUMNS...)] values(val...)\n</code></pre>\n\n<h4>更新记录(单表更新)</h4>\n\n<pre><code class=\"\">UPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr1|DEFAULT}[,col_nmae2={expr2|DEFAULT}]... [WHERE where_condition]\n</code></pre>\n\n<h4>单表删除记录</h4>\n\n<pre><code class=\"\">DELETE FROM tb_name [WHERE where_condition]\n</code></pre>\n\n<h4>记录查找</h4>\n\n<pre><code class=\"\">SELECT select_expr[,select_expr...] \n[\n    FROM tb_name\n    [WHERE where_condition] // 条件查询\n    [GROUP BY {col_name|expr|position}[ASC|DESC],...] // 分组\n    [HAVING where_condition]  //分组条件\n    [ORDER BY {col_name|expr|position}[ASC|DESC],...] // 排序\n    [LIMIT {[offset,]row_count|row_count OFFSET offset}] // 限制查询结果的数量\n\n]\n</code></pre>\n\n<h5>查询表达式(select_expr)</h5>\n\n每一个表达式表示想要的一列，必须有至少一个。多个列之间以英文逗号分隔。星号（<em>）表示所有列。tb_name.</em>可以表示命名表的所有列。查询表达式可以使用AS alias_name为其赋予别名。别名可用于GROUP BY, ORDER BY 或HAVING子句。\n\n<h3>空值与非空</h3>\n\n<ul>\n<li>NULL，字段值可以为空</li>\n<li>NOT NULL，字段值禁止为空</li>\n</ul>\n\n<h3>AUTO_INCREMENT</h3>\n\n<ul>\n<li>自动编号，且必须与主键组合使用</li>\n<li>默认情况下，起始值为1，每次增量为1</li>\n</ul>\n\n<h3>主键</h3>\n\n主键是数据表的唯一索引\n* 主键约束\n* 每张数据表只能存在一个主键\n* 主键保证记录唯一性\n* 主键自动NOT NULL\n\n<h3>UNIQUE KEY</h3>\n\n<ul>\n<li>唯一约束</li>\n<li>唯一约束可以保证记录的唯一性</li>\n<li>唯一约束的字段可以为空值（NULL)</li>\n<li>每张数据表可以存在多个唯一约束</li>\n</ul>\n\n<h3>DEFAULT</h3>\n\n<ul>\n<li>默认值</li>\n<li>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值</li>\n</ul>\n\n<h3>Mysql外键约束的要求解析</h3>\n\n<h4>约束</h4>\n\n<ol>\n<li>约束保证数据的完整性和一致性</li>\n<li>约束分为表级约束和列级约束</li>\n<li>约束类型包括：</li>\n</ol>\n\n* NOT NULL 非空约束\n* PRIMARY KEY 主键约束\n* UNIQUE KEY 唯一约束\n* DEFAULT 默认约束\n* FOREIGE KEY 外键约束\n\n<h3>外键约束</h3>\n\n保持数据的一致性，完整性。实现一对一或一对多关系\n\n<h4>外键约束的要求</h4>\n\n<ol>\n<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表</li>\n<li>数据表的存储引擎只能为InnoDB</li>\n<li>外键列和参照列必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同</li>\n<li>外键列和参照列必须创建索引。如果外键列不存在索引的话，mysql将自动创建索引</li>\n</ol>\n\n<h4>外键约束的参照操作</h4>\n\n<h3>mysql修改数据表</h3>\n\n<h4>添加单列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]\n</code></pre>\n\n<h4>添加多列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [COLUMN] (col_name col_defintion...)\n</code></pre>\n\n<h4>删除列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name DROP col_name\n</code></pre>\n\n<h4>添加主键约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT[SYMBOL]] PRIMARY KEY [index_type](index_col_name,...)\n</code></pre>\n\n<h4>添加唯一约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)\n</code></pre>\n\n<h4>添加外键约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (index_col_name,...) reference_definition\n</code></pre>\n\n<h4>添加/删除默认约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\n</code></pre>\n\n<h3>子查询与连接</h3>\n\n<h4>子查询</h4>\n\n子查询（Subquery)是指出现在其他SQL语句内的SELECT子句。<br />\n例如：\n\n<pre><code class=\"\">SELECT * FROM t1 WHERE col1 = (SELECT col2 FROM t2);\n</code></pre>\n\n其中\n\n<pre><code class=\"\">SELECT * FROM t1\n</code></pre>\n\n称为Outer Query/Outer Statement\n\n<pre><code class=\"\">SELECT col2 FROM t2\n</code></pre>\n\n称为SubQuery。<br />\n子查询指嵌套在查询内部，且必须始终出现在圆括号内。子查询可以包含多个关键字或条件，如DISTINCT、GROUP BY、ORDER BY、LIMIT，函数等。子查询的外层查询可以是：SELECT，INSERT,UPDATE,SET或DO。子查询可以返回标量、一行、一列或子查询。\n\n<h4>使用比较运算符的子查询</h4>\n\n<h4>使用[NOT] IN/EXISTS 的子查询</h4>\n\n<h4>INSERT ... SELECT</h4>\n\n<h4>多表更新</h4>\n\n<pre><code class=\"\">UPDATE table_references SET col_name1={expr1|DEFAULT}[,col_name2={expr2|DEFAULT}]...[WHERE where_condition]\n</code></pre>\n\n<h4>连接</h4>\n\n<h5>语法结构</h5>\n\n<pre><code class=\"\">table_reference\n{[INNER|CROSS]JOIN|{LEFT|RIGHT}[OUTER]JOIN}\ntable_reference\nON conditional_expr\n</code></pre>\n\n<h5>内连接</h5>\n\n<h5>左外连接</h5>\n\n<h5>右外连接</h5>\n\n<h3>无限级分类表设计</h3>\n\n<h3>多表删除</h3>\n\n<h3>存储过程</h3>\n\n<h4>创建存储过程</h4>\n\n<pre><code class=\"\">CREATE\n[DEFINER = { user | CURRENT_USER }]\nPROCEDURE sp_name ([proc_parameter[,...]])\n[characteristic] routine_body\n</code></pre>\n\nproc_parameter:<br />\n[IN | OUT | INOUT] param_name type<br />\nIN: 表示参数的值必须在调用时指定，不能改变，不能返回<br />\nOUT:表示该参数的值可以被改变，并且返回<br />\nINOUT:表示该参数的调用指定，并且可以改变和返回\n\n过程体（routine_body）<br />\n* 过程体由合法的SQL语句构成；<br />\n* 过程体可以是任意的SQL语句；<br />\n* 过程体如果为复合结构则使用BEGIN...END语句\n* 复合结构可以包含声明，循环，控制结构；\n\n<h4>调用存储过程</h4>\n\n<code>CALL sp_name([proc_parameter[,...]]);</code>\n\n<code>CALL sp_name;</code>', '写给自己的mysql基础教程', '', 'publish', 'open', 'open', '', '%e5%86%99%e7%bb%99%e8%87%aa%e5%b7%b1%e7%9a%84mysql%e5%9f%ba%e7%a1%80%e6%95%99%e7%a8%8b', '', '', '2019-04-09 14:10:07', '2019-04-09 14:10:07', '### 安装\r\n### 配置\r\n#### MySQL目录结构\r\nbin目录，存储可执行文件  \r\ndata目录，存储数据文件  \r\ndocs, 文档  \r\ninclude目录，存储包含的头文件  \r\nlib目录，存储库文件  \r\nshare目录，错误消息和字符集\r\n#### 配置文件\r\nmy.ini\r\n### 启动与停止服务\r\n1. 管理-服务-mysql服务\r\n2. 启动服务，cmd命令行输入   \r\n```\r\nnet start mysql\r\n```  \r\n停止服务输入  \r\n```\r\nnet stop mysql\r\n```\r\n### 登录与退出mysql\r\n1. 登录：cmd - ```mysql -u root -p```\r\n2. 退出：```\\q ``` ,  ```quit```  ,  ```exit```\r\n\r\n#### 修改MySql提示符\r\n\r\n参数 | 描述\r\n---|---\r\n\\D | 完整日期\r\n\\d | 当前数据库\r\n\\h | 服务器名称\r\n\\u | 当前用户\r\n\r\n设置为 *当前用户@服务器名 数据库>* 的形式\r\n```\r\nprompt \\u@\\h \\d&gt;\r\n```\r\n\r\n### 常用命令\r\n```\r\nSELECT VERSION();\r\nSELECT NOW();\r\nSELECT USER();\r\nSELECT DATABASE(); // 查看当前数据库\r\n```\r\n#### Mysql语句规范\r\n* 关键字与函数名称全部大写\r\n* 数据库名称、表名称、字段名称全部小写\r\n* SQL语句必须以分号结尾\r\n\r\n### 操作数据库\r\n#### 创建数据库\r\n```\r\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name\r\n```\r\n#### 修改数据库编码方式\r\n```\r\nALTER {DATABASE | SCHEMA} [db_name] [DEFAULT] CHARACTER SET [=] charset_name\r\n```\r\n#### 删除数据库\r\n```\r\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\r\n```\r\n#### 查看数据库列表\r\n```\r\nSHOW [DATABASES | SCHEMAS]\r\n```\r\n#### 查看警告信息\r\n```\r\nSHOW WARNINGS\r\n```\r\n#### 查看数据库编码方式\r\n```\r\nSHOW CREATE DATABASE db_name;\r\n```\r\n### 数据类型和操作数据表\r\n数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表不同的信息类型\r\n#### 整形\r\n![image]()  \r\nM   \r\n指出最大的显示尺寸。最大的合法的显示尺寸是 255 。\r\n\r\nUNSIGNED  \r\n无符号，即为非负数，只针对整型。\r\n\r\n当插入长度大于设定的M时，字段值不会被截断，还是按照类型的实际精度进行保存。\r\n\r\n整型字段有个ZEROFILL属性，在数字长度不够的数据前面填充0，以达到设定的长度。M值只当属性为ZEROFILL时，才有区别效果。\r\n#### 浮点型\r\nFLOAT  \r\nDOUBLE\r\n\r\n`FLOAT(M, D)`  \r\nM的值应该取1到255。D的值可为0到30\r\n\r\n#### 时期时间型\r\nYEAR  \r\nTIME  \r\nDATE  \r\nDATEIME  \r\nTIMESTAMP\r\n#### 字符型\r\nCHAR(M) M个字节，0 <= M <= 255  \r\nVARCHAR(M)  \r\nTINYTEXT \r\nTEXT  \r\nMEDIUMTEXT  \r\nLONGTEXT  \r\nENUM(\'value1\', \'value2\'...)  \r\nSET(\'value1\', \'value2\'...)  \r\n#### 创建数据表\r\n打开数据库：\r\nUSE 数据库  \r\n查看当前打开的数据库：```SELECT DATABASE();```\r\n```\r\nCREATE TABLE [IF NOT EXISTS] table_name(\r\n    column_name data_type,\r\n)\r\n```\r\n#### 查看数据表\r\n```\r\nSHOW TABLES [FROM db_name];\r\n```\r\n#### 查看数据表的结构\r\n```\r\nSHOW COLUMNS FROM tb_name;\r\n```\r\n或者\r\n```\r\nDESC tb_name;\r\n```\r\n#### 插入记录\r\n```\r\nINSERT [INTO] tb_name[(COLUMNS...)] values(val...)\r\n```\r\n#### 更新记录(单表更新)\r\n```\r\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr1|DEFAULT}[,col_nmae2={expr2|DEFAULT}]... [WHERE where_condition]\r\n```\r\n\r\n#### 单表删除记录\r\n```\r\nDELETE FROM tb_name [WHERE where_condition]\r\n```\r\n#### 记录查找\r\n```\r\nSELECT select_expr[,select_expr...] \r\n[\r\n    FROM tb_name\r\n    [WHERE where_condition] // 条件查询\r\n    [GROUP BY {col_name|expr|position}[ASC|DESC],...] // 分组\r\n    [HAVING where_condition]  //分组条件\r\n    [ORDER BY {col_name|expr|position}[ASC|DESC],...] // 排序\r\n    [LIMIT {[offset,]row_count|row_count OFFSET offset}] // 限制查询结果的数量\r\n    \r\n]\r\n```\r\n##### 查询表达式(select_expr)\r\n每一个表达式表示想要的一列，必须有至少一个。多个列之间以英文逗号分隔。星号（*）表示所有列。tb_name.*可以表示命名表的所有列。查询表达式可以使用AS alias_name为其赋予别名。别名可用于GROUP BY, ORDER BY 或HAVING子句。\r\n\r\n### 空值与非空\r\n* NULL，字段值可以为空  \r\n* NOT NULL，字段值禁止为空  \r\n\r\n### AUTO_INCREMENT\r\n* 自动编号，且必须与主键组合使用\r\n* 默认情况下，起始值为1，每次增量为1  \r\n\r\n### 主键\r\n主键是数据表的唯一索引\r\n* 主键约束\r\n* 每张数据表只能存在一个主键\r\n* 主键保证记录唯一性\r\n* 主键自动NOT NULL\r\n\r\n### UNIQUE KEY\r\n* 唯一约束\r\n* 唯一约束可以保证记录的唯一性\r\n* 唯一约束的字段可以为空值（NULL)\r\n* 每张数据表可以存在多个唯一约束\r\n\r\n### DEFAULT\r\n* 默认值\r\n* 当插入记录时，如果没有明确为字段赋值，则自动赋予默认值\r\n\r\n### Mysql外键约束的要求解析\r\n#### 约束\r\n1. 约束保证数据的完整性和一致性\r\n2. 约束分为表级约束和列级约束\r\n3. 约束类型包括：\r\n* NOT NULL 非空约束\r\n* PRIMARY KEY 主键约束\r\n* UNIQUE KEY 唯一约束\r\n* DEFAULT 默认约束\r\n* FOREIGE KEY 外键约束\r\n### 外键约束\r\n保持数据的一致性，完整性。实现一对一或一对多关系\r\n#### 外键约束的要求\r\n1. 父表和子表必须使用相同的存储引擎，而且禁止使用临时表\r\n2. 数据表的存储引擎只能为InnoDB\r\n3. 外键列和参照列必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同\r\n4. 外键列和参照列必须创建索引。如果外键列不存在索引的话，mysql将自动创建索引\r\n#### 外键约束的参照操作\r\n### mysql修改数据表\r\n#### 添加单列\r\n```\r\nALTER TABLE tb_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]\r\n```\r\n#### 添加多列\r\n```\r\nALTER TABLE tb_name ADD [COLUMN] (col_name col_defintion...)\r\n```\r\n#### 删除列\r\n```\r\nALTER TABLE tb_name DROP col_name\r\n```\r\n#### 添加主键约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT[SYMBOL]] PRIMARY KEY [index_type](index_col_name,...)\r\n```\r\n#### 添加唯一约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)\r\n```\r\n#### 添加外键约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (index_col_name,...) reference_definition\r\n```\r\n#### 添加/删除默认约束\r\n```\r\nALTER TABLE tb_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\r\n```\r\n### 子查询与连接\r\n#### 子查询\r\n子查询（Subquery)是指出现在其他SQL语句内的SELECT子句。  \r\n例如：  \r\n```\r\nSELECT * FROM t1 WHERE col1 = (SELECT col2 FROM t2);\r\n```\r\n其中\r\n```\r\nSELECT * FROM t1\r\n```\r\n称为Outer Query/Outer Statement\r\n```\r\nSELECT col2 FROM t2\r\n```\r\n称为SubQuery。  \r\n子查询指嵌套在查询内部，且必须始终出现在圆括号内。子查询可以包含多个关键字或条件，如DISTINCT、GROUP BY、ORDER BY、LIMIT，函数等。子查询的外层查询可以是：SELECT，INSERT,UPDATE,SET或DO。子查询可以返回标量、一行、一列或子查询。  \r\n#### 使用比较运算符的子查询\r\n#### 使用[NOT] IN/EXISTS 的子查询\r\n#### INSERT ... SELECT\r\n#### 多表更新\r\n```\r\nUPDATE table_references SET col_name1={expr1|DEFAULT}[,col_name2={expr2|DEFAULT}]...[WHERE where_condition]\r\n```\r\n#### 连接\r\n##### 语法结构\r\n```\r\ntable_reference\r\n{[INNER|CROSS]JOIN|{LEFT|RIGHT}[OUTER]JOIN}\r\ntable_reference\r\nON conditional_expr\r\n```\r\n##### 内连接\r\n##### 左外连接\r\n##### 右外连接\r\n### 无限级分类表设计\r\n### 多表删除\r\n\r\n### 存储过程\r\n#### 创建存储过程\r\n```\r\nCREATE\r\n[DEFINER = { user | CURRENT_USER }]\r\nPROCEDURE sp_name ([proc_parameter[,...]])\r\n[characteristic] routine_body\r\n```\r\nproc_parameter:  \r\n[IN | OUT | INOUT] param_name type  \r\nIN: 表示参数的值必须在调用时指定，不能改变，不能返回  \r\nOUT:表示该参数的值可以被改变，并且返回  \r\nINOUT:表示该参数的调用指定，并且可以改变和返回\r\n\r\n过程体（routine_body）  \r\n* 过程体由合法的SQL语句构成；  \r\n* 过程体可以是任意的SQL语句；  \r\n* 过程体如果为复合结构则使用BEGIN...END语句\r\n* 复合结构可以包含声明，循环，控制结构；\r\n\r\n#### 调用存储过程\r\n`CALL sp_name([proc_parameter[,...]]);`\r\n\r\n`CALL sp_name;`', 0, 'https://www.chwech.com/?p=12', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (13, 1, '2019-04-09 14:08:33', '2019-04-09 14:08:33', '<h3>安装</h3>\n\n<h3>配置</h3>\n\n<h4>MySQL目录结构</h4>\n\nbin目录，存储可执行文件<br />\ndata目录，存储数据文件<br />\ndocs, 文档<br />\ninclude目录，存储包含的头文件<br />\nlib目录，存储库文件<br />\nshare目录，错误消息和字符集\n\n<h4>配置文件</h4>\n\nmy.ini\n\n<h3>启动与停止服务</h3>\n\n<ol>\n<li>管理-服务-mysql服务</li>\n<li>启动服务，cmd命令行输入</li>\n</ol>\n\n<pre><code class=\"\">net start mysql\n</code></pre>\n\n停止服务输入\n\n<pre><code class=\"\">net stop mysql\n</code></pre>\n\n<h3>登录与退出mysql</h3>\n\n<ol>\n<li>登录：cmd - <code>mysql -u root -p</code></li>\n<li>退出：<code>\\q</code> ,  <code>quit</code>  ,  <code>exit</code></li>\n</ol>\n\n<h4>修改MySql提示符</h4>\n\n<table>\n<thead>\n<tr>\n  <th>参数</th>\n  <th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>\\D</td>\n  <td>完整日期</td>\n</tr>\n<tr>\n  <td>\\d</td>\n  <td>当前数据库</td>\n</tr>\n<tr>\n  <td>\\h</td>\n  <td>服务器名称</td>\n</tr>\n<tr>\n  <td>\\u</td>\n  <td>当前用户</td>\n</tr>\n</tbody>\n</table>\n\n设置为 <em>当前用户@服务器名 数据库></em> 的形式\n\n<pre><code class=\"\">prompt \\u@\\h \\d&gt;\n</code></pre>\n\n<h3>常用命令</h3>\n\n<pre><code class=\"\">SELECT VERSION();\nSELECT NOW();\nSELECT USER();\nSELECT DATABASE(); // 查看当前数据库\n</code></pre>\n\n<h4>Mysql语句规范</h4>\n\n<ul>\n<li>关键字与函数名称全部大写</li>\n<li>数据库名称、表名称、字段名称全部小写</li>\n<li>SQL语句必须以分号结尾</li>\n</ul>\n\n<h3>操作数据库</h3>\n\n<h4>创建数据库</h4>\n\n<pre><code class=\"\">CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name\n</code></pre>\n\n<h4>修改数据库编码方式</h4>\n\n<pre><code class=\"\">ALTER {DATABASE | SCHEMA} [db_name] [DEFAULT] CHARACTER SET [=] charset_name\n</code></pre>\n\n<h4>删除数据库</h4>\n\n<pre><code class=\"\">DROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n</code></pre>\n\n<h4>查看数据库列表</h4>\n\n<pre><code class=\"\">SHOW [DATABASES | SCHEMAS]\n</code></pre>\n\n<h4>查看警告信息</h4>\n\n<pre><code class=\"\">SHOW WARNINGS\n</code></pre>\n\n<h4>查看数据库编码方式</h4>\n\n<pre><code class=\"\">SHOW CREATE DATABASE db_name;\n</code></pre>\n\n<h3>数据类型和操作数据表</h3>\n\n数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表不同的信息类型\n\n<h4>整形</h4>\n\n<img src=\"\" alt=\"image\" /><br />\nM<br />\n指出最大的显示尺寸。最大的合法的显示尺寸是 255 。\n\nUNSIGNED<br />\n无符号，即为非负数，只针对整型。\n\n当插入长度大于设定的M时，字段值不会被截断，还是按照类型的实际精度进行保存。\n\n整型字段有个ZEROFILL属性，在数字长度不够的数据前面填充0，以达到设定的长度。M值只当属性为ZEROFILL时，才有区别效果。\n\n<h4>浮点型</h4>\n\nFLOAT<br />\nDOUBLE\n\n<code>FLOAT(M, D)</code><br />\nM的值应该取1到255。D的值可为0到30\n\n<h4>时期时间型</h4>\n\nYEAR<br />\nTIME<br />\nDATE<br />\nDATEIME<br />\nTIMESTAMP\n\n<h4>字符型</h4>\n\nCHAR(M) M个字节，0 &lt;= M &lt;= 255<br />\nVARCHAR(M)<br />\nTINYTEXT \nTEXT<br />\nMEDIUMTEXT<br />\nLONGTEXT<br />\nENUM(\'value1\', \'value2\'...)<br />\nSET(\'value1\', \'value2\'...)\n\n<h4>创建数据表</h4>\n\n打开数据库：\nUSE 数据库<br />\n查看当前打开的数据库：<code>SELECT DATABASE();</code>\n\n<pre><code class=\"\">CREATE TABLE [IF NOT EXISTS] table_name(\n    column_name data_type,\n)\n</code></pre>\n\n<h4>查看数据表</h4>\n\n<pre><code class=\"\">SHOW TABLES [FROM db_name];\n</code></pre>\n\n<h4>查看数据表的结构</h4>\n\n<pre><code class=\"\">SHOW COLUMNS FROM tb_name;\n</code></pre>\n\n或者\n\n<pre><code class=\"\">DESC tb_name;\n</code></pre>\n\n<h4>插入记录</h4>\n\n<pre><code class=\"\">INSERT [INTO] tb_name[(COLUMNS...)] values(val...)\n</code></pre>\n\n<h4>更新记录(单表更新)</h4>\n\n<pre><code class=\"\">UPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr1|DEFAULT}[,col_nmae2={expr2|DEFAULT}]... [WHERE where_condition]\n</code></pre>\n\n<h4>单表删除记录</h4>\n\n<pre><code class=\"\">DELETE FROM tb_name [WHERE where_condition]\n</code></pre>\n\n<h4>记录查找</h4>\n\n<pre><code class=\"\">SELECT select_expr[,select_expr...] \n[\n    FROM tb_name\n    [WHERE where_condition] // 条件查询\n    [GROUP BY {col_name|expr|position}[ASC|DESC],...] // 分组\n    [HAVING where_condition]  //分组条件\n    [ORDER BY {col_name|expr|position}[ASC|DESC],...] // 排序\n    [LIMIT {[offset,]row_count|row_count OFFSET offset}] // 限制查询结果的数量\n\n]\n</code></pre>\n\n<h5>查询表达式(select_expr)</h5>\n\n每一个表达式表示想要的一列，必须有至少一个。多个列之间以英文逗号分隔。星号（<em>）表示所有列。tb_name.</em>可以表示命名表的所有列。查询表达式可以使用AS alias_name为其赋予别名。别名可用于GROUP BY, ORDER BY 或HAVING子句。\n\n<h3>空值与非空</h3>\n\n<ul>\n<li>NULL，字段值可以为空</li>\n<li>NOT NULL，字段值禁止为空</li>\n</ul>\n\n<h3>AUTO_INCREMENT</h3>\n\n<ul>\n<li>自动编号，且必须与主键组合使用</li>\n<li>默认情况下，起始值为1，每次增量为1</li>\n</ul>\n\n<h3>主键</h3>\n\n主键是数据表的唯一索引\n* 主键约束\n* 每张数据表只能存在一个主键\n* 主键保证记录唯一性\n* 主键自动NOT NULL\n\n<h3>UNIQUE KEY</h3>\n\n<ul>\n<li>唯一约束</li>\n<li>唯一约束可以保证记录的唯一性</li>\n<li>唯一约束的字段可以为空值（NULL)</li>\n<li>每张数据表可以存在多个唯一约束</li>\n</ul>\n\n<h3>DEFAULT</h3>\n\n<ul>\n<li>默认值</li>\n<li>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值</li>\n</ul>\n\n<h3>Mysql外键约束的要求解析</h3>\n\n<h4>约束</h4>\n\n<ol>\n<li>约束保证数据的完整性和一致性</li>\n<li>约束分为表级约束和列级约束</li>\n<li>约束类型包括：</li>\n</ol>\n\n* NOT NULL 非空约束\n* PRIMARY KEY 主键约束\n* UNIQUE KEY 唯一约束\n* DEFAULT 默认约束\n* FOREIGE KEY 外键约束\n\n<h3>外键约束</h3>\n\n保持数据的一致性，完整性。实现一对一或一对多关系\n\n<h4>外键约束的要求</h4>\n\n<ol>\n<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表</li>\n<li>数据表的存储引擎只能为InnoDB</li>\n<li>外键列和参照列必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同</li>\n<li>外键列和参照列必须创建索引。如果外键列不存在索引的话，mysql将自动创建索引</li>\n</ol>\n\n<h4>外键约束的参照操作</h4>\n\n<h3>mysql修改数据表</h3>\n\n<h4>添加单列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]\n</code></pre>\n\n<h4>添加多列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [COLUMN] (col_name col_defintion...)\n</code></pre>\n\n<h4>删除列</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name DROP col_name\n</code></pre>\n\n<h4>添加主键约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT[SYMBOL]] PRIMARY KEY [index_type](index_col_name,...)\n</code></pre>\n\n<h4>添加唯一约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)\n</code></pre>\n\n<h4>添加外键约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (index_col_name,...) reference_definition\n</code></pre>\n\n<h4>添加/删除默认约束</h4>\n\n<pre><code class=\"\">ALTER TABLE tb_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\n</code></pre>\n\n<h3>子查询与连接</h3>\n\n<h4>子查询</h4>\n\n子查询（Subquery)是指出现在其他SQL语句内的SELECT子句。<br />\n例如：\n\n<pre><code class=\"\">SELECT * FROM t1 WHERE col1 = (SELECT col2 FROM t2);\n</code></pre>\n\n其中\n\n<pre><code class=\"\">SELECT * FROM t1\n</code></pre>\n\n称为Outer Query/Outer Statement\n\n<pre><code class=\"\">SELECT col2 FROM t2\n</code></pre>\n\n称为SubQuery。<br />\n子查询指嵌套在查询内部，且必须始终出现在圆括号内。子查询可以包含多个关键字或条件，如DISTINCT、GROUP BY、ORDER BY、LIMIT，函数等。子查询的外层查询可以是：SELECT，INSERT,UPDATE,SET或DO。子查询可以返回标量、一行、一列或子查询。\n\n<h4>使用比较运算符的子查询</h4>\n\n<h4>使用[NOT] IN/EXISTS 的子查询</h4>\n\n<h4>INSERT ... SELECT</h4>\n\n<h4>多表更新</h4>\n\n<pre><code class=\"\">UPDATE table_references SET col_name1={expr1|DEFAULT}[,col_name2={expr2|DEFAULT}]...[WHERE where_condition]\n</code></pre>\n\n<h4>连接</h4>\n\n<h5>语法结构</h5>\n\n<pre><code class=\"\">table_reference\n{[INNER|CROSS]JOIN|{LEFT|RIGHT}[OUTER]JOIN}\ntable_reference\nON conditional_expr\n</code></pre>\n\n<h5>内连接</h5>\n\n<h5>左外连接</h5>\n\n<h5>右外连接</h5>\n\n<h3>无限级分类表设计</h3>\n\n<h3>多表删除</h3>\n\n<h3>存储过程</h3>\n\n<h4>创建存储过程</h4>\n\n<pre><code class=\"\">CREATE\n[DEFINER = { user | CURRENT_USER }]\nPROCEDURE sp_name ([proc_parameter[,...]])\n[characteristic] routine_body\n</code></pre>\n\nproc_parameter:<br />\n[IN | OUT | INOUT] param_name type<br />\nIN: 表示参数的值必须在调用时指定，不能改变，不能返回<br />\nOUT:表示该参数的值可以被改变，并且返回<br />\nINOUT:表示该参数的调用指定，并且可以改变和返回\n\n过程体（routine_body）<br />\n* 过程体由合法的SQL语句构成；<br />\n* 过程体可以是任意的SQL语句；<br />\n* 过程体如果为复合结构则使用BEGIN...END语句\n* 复合结构可以包含声明，循环，控制结构；\n\n<h4>调用存储过程</h4>\n\n<code>CALL sp_name([proc_parameter[,...]]);</code>\n\n<code>CALL sp_name;</code>', '写给自己的mysql基础教程', '', 'inherit', 'closed', 'closed', '', '12-revision-v1', '', '', '2019-04-09 14:08:33', '2019-04-09 14:08:33', '### 安装\r\n### 配置\r\n#### MySQL目录结构\r\nbin目录，存储可执行文件  \r\ndata目录，存储数据文件  \r\ndocs, 文档  \r\ninclude目录，存储包含的头文件  \r\nlib目录，存储库文件  \r\nshare目录，错误消息和字符集\r\n#### 配置文件\r\nmy.ini\r\n### 启动与停止服务\r\n1. 管理-服务-mysql服务\r\n2. 启动服务，cmd命令行输入   \r\n```\r\nnet start mysql\r\n```  \r\n停止服务输入  \r\n```\r\nnet stop mysql\r\n```\r\n### 登录与退出mysql\r\n1. 登录：cmd - ```mysql -u root -p```\r\n2. 退出：```\\q ``` ,  ```quit```  ,  ```exit```\r\n\r\n#### 修改MySql提示符\r\n\r\n参数 | 描述\r\n---|---\r\n\\D | 完整日期\r\n\\d | 当前数据库\r\n\\h | 服务器名称\r\n\\u | 当前用户\r\n\r\n设置为 *当前用户@服务器名 数据库>* 的形式\r\n```\r\nprompt \\u@\\h \\d&gt;\r\n```\r\n\r\n### 常用命令\r\n```\r\nSELECT VERSION();\r\nSELECT NOW();\r\nSELECT USER();\r\nSELECT DATABASE(); // 查看当前数据库\r\n```\r\n#### Mysql语句规范\r\n* 关键字与函数名称全部大写\r\n* 数据库名称、表名称、字段名称全部小写\r\n* SQL语句必须以分号结尾\r\n\r\n### 操作数据库\r\n#### 创建数据库\r\n```\r\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name [DEFAULT] CHARACTER SET [=] charset_name\r\n```\r\n#### 修改数据库编码方式\r\n```\r\nALTER {DATABASE | SCHEMA} [db_name] [DEFAULT] CHARACTER SET [=] charset_name\r\n```\r\n#### 删除数据库\r\n```\r\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\r\n```\r\n#### 查看数据库列表\r\n```\r\nSHOW [DATABASES | SCHEMAS]\r\n```\r\n#### 查看警告信息\r\n```\r\nSHOW WARNINGS\r\n```\r\n#### 查看数据库编码方式\r\n```\r\nSHOW CREATE DATABASE db_name;\r\n```\r\n### 数据类型和操作数据表\r\n数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表不同的信息类型\r\n#### 整形\r\n![image]()  \r\nM   \r\n指出最大的显示尺寸。最大的合法的显示尺寸是 255 。\r\n\r\nUNSIGNED  \r\n无符号，即为非负数，只针对整型。\r\n\r\n当插入长度大于设定的M时，字段值不会被截断，还是按照类型的实际精度进行保存。\r\n\r\n整型字段有个ZEROFILL属性，在数字长度不够的数据前面填充0，以达到设定的长度。M值只当属性为ZEROFILL时，才有区别效果。\r\n#### 浮点型\r\nFLOAT  \r\nDOUBLE\r\n\r\n`FLOAT(M, D)`  \r\nM的值应该取1到255。D的值可为0到30\r\n\r\n#### 时期时间型\r\nYEAR  \r\nTIME  \r\nDATE  \r\nDATEIME  \r\nTIMESTAMP\r\n#### 字符型\r\nCHAR(M) M个字节，0 <= M <= 255  \r\nVARCHAR(M)  \r\nTINYTEXT \r\nTEXT  \r\nMEDIUMTEXT  \r\nLONGTEXT  \r\nENUM(\'value1\', \'value2\'...)  \r\nSET(\'value1\', \'value2\'...)  \r\n#### 创建数据表\r\n打开数据库：\r\nUSE 数据库  \r\n查看当前打开的数据库：```SELECT DATABASE();```\r\n```\r\nCREATE TABLE [IF NOT EXISTS] table_name(\r\n    column_name data_type,\r\n)\r\n```\r\n#### 查看数据表\r\n```\r\nSHOW TABLES [FROM db_name];\r\n```\r\n#### 查看数据表的结构\r\n```\r\nSHOW COLUMNS FROM tb_name;\r\n```\r\n或者\r\n```\r\nDESC tb_name;\r\n```\r\n#### 插入记录\r\n```\r\nINSERT [INTO] tb_name[(COLUMNS...)] values(val...)\r\n```\r\n#### 更新记录(单表更新)\r\n```\r\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr1|DEFAULT}[,col_nmae2={expr2|DEFAULT}]... [WHERE where_condition]\r\n```\r\n\r\n#### 单表删除记录\r\n```\r\nDELETE FROM tb_name [WHERE where_condition]\r\n```\r\n#### 记录查找\r\n```\r\nSELECT select_expr[,select_expr...] \r\n[\r\n    FROM tb_name\r\n    [WHERE where_condition] // 条件查询\r\n    [GROUP BY {col_name|expr|position}[ASC|DESC],...] // 分组\r\n    [HAVING where_condition]  //分组条件\r\n    [ORDER BY {col_name|expr|position}[ASC|DESC],...] // 排序\r\n    [LIMIT {[offset,]row_count|row_count OFFSET offset}] // 限制查询结果的数量\r\n    \r\n]\r\n```\r\n##### 查询表达式(select_expr)\r\n每一个表达式表示想要的一列，必须有至少一个。多个列之间以英文逗号分隔。星号（*）表示所有列。tb_name.*可以表示命名表的所有列。查询表达式可以使用AS alias_name为其赋予别名。别名可用于GROUP BY, ORDER BY 或HAVING子句。\r\n\r\n### 空值与非空\r\n* NULL，字段值可以为空  \r\n* NOT NULL，字段值禁止为空  \r\n\r\n### AUTO_INCREMENT\r\n* 自动编号，且必须与主键组合使用\r\n* 默认情况下，起始值为1，每次增量为1  \r\n\r\n### 主键\r\n主键是数据表的唯一索引\r\n* 主键约束\r\n* 每张数据表只能存在一个主键\r\n* 主键保证记录唯一性\r\n* 主键自动NOT NULL\r\n\r\n### UNIQUE KEY\r\n* 唯一约束\r\n* 唯一约束可以保证记录的唯一性\r\n* 唯一约束的字段可以为空值（NULL)\r\n* 每张数据表可以存在多个唯一约束\r\n\r\n### DEFAULT\r\n* 默认值\r\n* 当插入记录时，如果没有明确为字段赋值，则自动赋予默认值\r\n\r\n### Mysql外键约束的要求解析\r\n#### 约束\r\n1. 约束保证数据的完整性和一致性\r\n2. 约束分为表级约束和列级约束\r\n3. 约束类型包括：\r\n* NOT NULL 非空约束\r\n* PRIMARY KEY 主键约束\r\n* UNIQUE KEY 唯一约束\r\n* DEFAULT 默认约束\r\n* FOREIGE KEY 外键约束\r\n### 外键约束\r\n保持数据的一致性，完整性。实现一对一或一对多关系\r\n#### 外键约束的要求\r\n1. 父表和子表必须使用相同的存储引擎，而且禁止使用临时表\r\n2. 数据表的存储引擎只能为InnoDB\r\n3. 外键列和参照列必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同\r\n4. 外键列和参照列必须创建索引。如果外键列不存在索引的话，mysql将自动创建索引\r\n#### 外键约束的参照操作\r\n### mysql修改数据表\r\n#### 添加单列\r\n```\r\nALTER TABLE tb_name ADD [COLUMN] col_name column_definition [FIRST | AFTER col_name]\r\n```\r\n#### 添加多列\r\n```\r\nALTER TABLE tb_name ADD [COLUMN] (col_name col_defintion...)\r\n```\r\n#### 删除列\r\n```\r\nALTER TABLE tb_name DROP col_name\r\n```\r\n#### 添加主键约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT[SYMBOL]] PRIMARY KEY [index_type](index_col_name,...)\r\n```\r\n#### 添加唯一约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)\r\n```\r\n#### 添加外键约束\r\n```\r\nALTER TABLE tb_name ADD [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (index_col_name,...) reference_definition\r\n```\r\n#### 添加/删除默认约束\r\n```\r\nALTER TABLE tb_name ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\r\n```\r\n### 子查询与连接\r\n#### 子查询\r\n子查询（Subquery)是指出现在其他SQL语句内的SELECT子句。  \r\n例如：  \r\n```\r\nSELECT * FROM t1 WHERE col1 = (SELECT col2 FROM t2);\r\n```\r\n其中\r\n```\r\nSELECT * FROM t1\r\n```\r\n称为Outer Query/Outer Statement\r\n```\r\nSELECT col2 FROM t2\r\n```\r\n称为SubQuery。  \r\n子查询指嵌套在查询内部，且必须始终出现在圆括号内。子查询可以包含多个关键字或条件，如DISTINCT、GROUP BY、ORDER BY、LIMIT，函数等。子查询的外层查询可以是：SELECT，INSERT,UPDATE,SET或DO。子查询可以返回标量、一行、一列或子查询。  \r\n#### 使用比较运算符的子查询\r\n#### 使用[NOT] IN/EXISTS 的子查询\r\n#### INSERT ... SELECT\r\n#### 多表更新\r\n```\r\nUPDATE table_references SET col_name1={expr1|DEFAULT}[,col_name2={expr2|DEFAULT}]...[WHERE where_condition]\r\n```\r\n#### 连接\r\n##### 语法结构\r\n```\r\ntable_reference\r\n{[INNER|CROSS]JOIN|{LEFT|RIGHT}[OUTER]JOIN}\r\ntable_reference\r\nON conditional_expr\r\n```\r\n##### 内连接\r\n##### 左外连接\r\n##### 右外连接\r\n### 无限级分类表设计\r\n### 多表删除\r\n\r\n### 存储过程\r\n#### 创建存储过程\r\n```\r\nCREATE\r\n[DEFINER = { user | CURRENT_USER }]\r\nPROCEDURE sp_name ([proc_parameter[,...]])\r\n[characteristic] routine_body\r\n```\r\nproc_parameter:  \r\n[IN | OUT | INOUT] param_name type  \r\nIN: 表示参数的值必须在调用时指定，不能改变，不能返回  \r\nOUT:表示该参数的值可以被改变，并且返回  \r\nINOUT:表示该参数的调用指定，并且可以改变和返回\r\n\r\n过程体（routine_body）  \r\n* 过程体由合法的SQL语句构成；  \r\n* 过程体可以是任意的SQL语句；  \r\n* 过程体如果为复合结构则使用BEGIN...END语句\r\n* 复合结构可以包含声明，循环，控制结构；\r\n\r\n#### 调用存储过程\r\n`CALL sp_name([proc_parameter[,...]]);`\r\n\r\n`CALL sp_name;`', 12, 'https://www.chwech.com/2019/04/09/12-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (14, 1, '2019-06-18 14:27:27', '2019-06-18 14:27:27', 'chwech\n男 广州天河|本科 2年工作经验\n804699297@qq.com\n\n<h2>求职意向</h2>\n\n期望工作岗位：中级前端开发\n到职状态: 离职随时入职\n\n<h2>工作经历</h2>\n\n<strong>2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发</strong>\n1. 负责产品团队成熟电子档案管理系统的重构工作。\n2. 负责多个新项目的前端开发和一个老项目的维护工作\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\n<strong>2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师</strong>\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\n\n<h2>项目经历</h2>\n\n<strong>2018.06 - 2018.12   交通工程电子档案系统重构</strong>\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\n<strong>2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台</strong>\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\n\n<h2>专业技能</h2>\n\n以下为我熟练使用的技能：\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\n前端工具：懂得使用webpack对项目进行模块打包。\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\n\n<h2>教育经历</h2>\n\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', '我的简历', '', 'inherit', 'closed', 'closed', '', '2-autosave-v1', '', '', '2019-06-18 14:27:27', '2019-06-18 14:27:27', 'chwech\n男 广州天河|本科 2年工作经验\n804699297@qq.com\n## 求职意向\n期望工作岗位：中级前端开发\n到职状态: 离职随时入职\n## 工作经历\n**2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发**\n1. 负责产品团队成熟电子档案管理系统的重构工作。\n2. 负责多个新项目的前端开发和一个老项目的维护工作\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\n**2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师**\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\n## 项目经历\n**2018.06 - 2018.12   交通工程电子档案系统重构**\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\n**2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台**\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\n## 专业技能\n以下为我熟练使用的技能：\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\n前端工具：懂得使用webpack对项目进行模块打包。\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\n## 教育经历\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', 2, 'https://www.chwech.com/2019/04/14/2-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (18, 1, '2019-05-02 07:30:09', '2019-05-02 07:30:09', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>\n\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\n\n<blockquote>\n  注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\n</blockquote>\n\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\n\n<pre><code class=\"\">version: \"3\"\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre>\n\n当你运行命令docker-compose up, 会发生以下几件事件：\n1. 一个名为myapp_default的网络被创建\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\n\n<blockquote>\n  在v2.1+,overlay网络一直都是attachable的\n  从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\n  在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\n</blockquote>\n\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\n\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。\n\n在web容器里，你连接数据库的代码看起来是这样的postgres://db:5432，而在docker宿主机器，连接数据库看起来是这样的postgres://{DOCKER_IP}:8001。\n\n<h2>更新容器</h2>\n\n如果你修改了配置文件并且运行docker-compose up命令重新启动，旧的容器将会被删除，新的容器会以不同的ip地址和相同的主机名加入网络，运行的容器可以通过主机名连接新的地址，但是旧的地址将不再工作。\n\n如果有容器正在连接旧的容器，它们将关闭，容器会检测此条件，再次查找名称并重新连接新的容器。', '[翻译]Compose中的网络', '', 'publish', 'open', 'open', '', '%e7%bf%bb%e8%af%91compose%e4%b8%ad%e7%9a%84%e7%bd%91%e7%bb%9c', '', '', '2019-05-02 07:30:09', '2019-05-02 07:30:09', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)\r\n\r\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\r\n\r\n> 注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\r\n\r\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\r\n\r\n```\r\nversion: &quot;3&quot;\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - &quot;8000:8000&quot;\r\n  db:\r\n    image: postgres\r\n    ports:\r\n      - &quot;8001:5432&quot;\r\n```\r\n\r\n当你运行命令docker-compose up, 会发生以下几件事件：\r\n1. 一个名为myapp_default的网络被创建\r\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\r\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\r\n\r\n> 在v2.1+,overlay网络一直都是attachable的\r\n从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\r\n在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\r\n\r\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\r\n\r\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。\r\n\r\n在web容器里，你连接数据库的代码看起来是这样的postgres://db:5432，而在docker宿主机器，连接数据库看起来是这样的postgres://{DOCKER_IP}:8001。\r\n\r\n## 更新容器\r\n如果你修改了配置文件并且运行docker-compose up命令重新启动，旧的容器将会被删除，新的容器会以不同的ip地址和相同的主机名加入网络，运行的容器可以通过主机名连接新的地址，但是旧的地址将不再工作。\r\n\r\n如果有容器正在连接旧的容器，它们将关闭，容器会检测此条件，再次查找名称并重新连接新的容器。', 0, 'https://www.chwech.com/?p=18', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (19, 1, '2019-05-02 06:30:38', '2019-05-02 06:30:38', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>', '[翻译]Compose中的网络', '', 'inherit', 'closed', 'closed', '', '18-revision-v1', '', '', '2019-05-02 06:30:38', '2019-05-02 06:30:38', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)', 18, 'https://www.chwech.com/2019/05/02/18-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (20, 1, '2019-05-02 06:43:27', '2019-05-02 06:43:27', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>\n\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\n\n<blockquote>\n  注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\n</blockquote>\n\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的\n\n<pre><code class=\"\">version: \"3\"\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre>', '[翻译]Compose中的网络', '', 'inherit', 'closed', 'closed', '', '18-revision-v1', '', '', '2019-05-02 06:43:27', '2019-05-02 06:43:27', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)\r\n\r\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\r\n\r\n> 注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\r\n\r\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的\r\n\r\n```\r\nversion: &quot;3&quot;\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - &quot;8000:8000&quot;\r\n  db:\r\n    image: postgres\r\n    ports:\r\n      - &quot;8001:5432&quot;\r\n```', 18, 'https://www.chwech.com/2019/05/02/18-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (21, 1, '2019-05-02 06:52:28', '2019-05-02 06:52:28', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>\n\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\n\n<blockquote>\n  注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\n</blockquote>\n\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\n\n<pre><code class=\"\">version: \"3\"\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre>\n\n当你运行命令docker-compose up, 会发生以下几件事件：\n1. 一个名为myapp_default的网络被创建\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\n\n<blockquote>\n  In v2.1+, overlay networks are always attachable\n  Starting in Compose file format 2.1, overlay networks are always created as attachable, and this is not configurable. This means that standalone containers can connect to overlay networks.\n  In Compose file format 3.x, you can optionally set the attachable property to false.\n</blockquote>', '[翻译]Compose中的网络', '', 'inherit', 'closed', 'closed', '', '18-revision-v1', '', '', '2019-05-02 06:52:28', '2019-05-02 06:52:28', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)\r\n\r\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\r\n\r\n> 注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\r\n\r\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\r\n\r\n```\r\nversion: &quot;3&quot;\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - &quot;8000:8000&quot;\r\n  db:\r\n    image: postgres\r\n    ports:\r\n      - &quot;8001:5432&quot;\r\n```\r\n\r\n当你运行命令docker-compose up, 会发生以下几件事件：\r\n1. 一个名为myapp_default的网络被创建\r\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\r\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\r\n\r\n> In v2.1+, overlay networks are always attachable\r\nStarting in Compose file format 2.1, overlay networks are always created as attachable, and this is not configurable. This means that standalone containers can connect to overlay networks.\r\nIn Compose file format 3.x, you can optionally set the attachable property to false.', 18, 'https://www.chwech.com/2019/05/02/18-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (22, 1, '2019-05-02 07:18:52', '2019-05-02 07:18:52', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>\n\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\n\n<blockquote>\n  注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\n</blockquote>\n\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\n\n<pre><code class=\"\">version: \"3\"\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre>\n\n当你运行命令docker-compose up, 会发生以下几件事件：\n1. 一个名为myapp_default的网络被创建\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\n\n<blockquote>\n  在v2.1+,overlay网络一直都是attachable的\n  从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\n  在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\n</blockquote>\n\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\n\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。', '[翻译]Compose中的网络', '', 'inherit', 'closed', 'closed', '', '18-revision-v1', '', '', '2019-05-02 07:18:52', '2019-05-02 07:18:52', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)\r\n\r\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\r\n\r\n> 注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\r\n\r\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\r\n\r\n```\r\nversion: &quot;3&quot;\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - &quot;8000:8000&quot;\r\n  db:\r\n    image: postgres\r\n    ports:\r\n      - &quot;8001:5432&quot;\r\n```\r\n\r\n当你运行命令docker-compose up, 会发生以下几件事件：\r\n1. 一个名为myapp_default的网络被创建\r\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\r\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\r\n\r\n> 在v2.1+,overlay网络一直都是attachable的\r\n从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\r\n在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\r\n\r\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\r\n\r\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。\r\n\r\n', 18, 'https://www.chwech.com/2019/05/02/18-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (23, 1, '2019-05-02 07:29:38', '2019-05-02 07:29:38', '<blockquote>\n  本文翻译自docker-compose文档<a href=\"https://docs.docker.com/compose/networking/\">Networking in Compose</a>\n</blockquote>\n\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\n\n<blockquote>\n  注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\n</blockquote>\n\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\n\n<pre><code class=\"\">version: \"3\"\nservices:\n  web:\n    build: .\n    ports:\n      - \"8000:8000\"\n  db:\n    image: postgres\n    ports:\n      - \"8001:5432\"\n</code></pre>\n\n当你运行命令docker-compose up, 会发生以下几件事件：\n1. 一个名为myapp_default的网络被创建\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\n\n<blockquote>\n  在v2.1+,overlay网络一直都是attachable的\n  从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\n  在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\n</blockquote>\n\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\n\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。\n\n在web容器里，你连接数据库的代码看起来是这样的postgres://db:5432，而在docker宿主机器，连接数据库看起来是这样的postgres://{DOCKER_IP}:8001。\n\n<h2>更新容器</h2>\n\n如果你修改了配置文件并且运行docker-compose up命令重新启动，旧的容器将会被删除，新的容器会以不同的ip地址和相同的主机名加入网络，运行的容器可以通过主机名连接新的地址，但是旧的地址将不再工作。\n\n如果有容器正在连接旧的容器，它们将关闭，容器会检测此条件，再次查找名称并重新连接新的容器。', '[翻译]Compose中的网络', '', 'inherit', 'closed', 'closed', '', '18-revision-v1', '', '', '2019-05-02 07:29:38', '2019-05-02 07:29:38', '> 本文翻译自docker-compose文档[Networking in Compose](https://docs.docker.com/compose/networking/)\r\n\r\n默认地Compose为你的应用设置一个单一的网络。每一个容器为一个服务加入这个默认网络并且它们在那个网络中对于其它容器彼此都是可达的，通过它们的容器名作为主机名。\r\n\r\n> 注：你的应用的网络名是基于\"project name\", \"project name\"就是docker-compose.yml所在文件夹的名称。你可以重写\"project name\"通过--project-name标记或者环境变量COMPOSE_PROJECT_NAME\r\n\r\n例如，假设你的应用在一个名为myapp的文件夹，你的docker-compose.yml看起来是这样的：\r\n\r\n```\r\nversion: &quot;3&quot;\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - &quot;8000:8000&quot;\r\n  db:\r\n    image: postgres\r\n    ports:\r\n      - &quot;8001:5432&quot;\r\n```\r\n\r\n当你运行命令docker-compose up, 会发生以下几件事件：\r\n1. 一个名为myapp_default的网络被创建\r\n2. 一个使用web配置的容器被创建。它加入网络myapp_default, 通过主机名web可以访问到它\r\n3. 一个使用db配置的容器被创建。它加入网络myapp_default, 通过主机名db可以访问到它\r\n\r\n> 在v2.1+,overlay网络一直都是attachable的\r\n从Compose配置文件版本2.1开始，overlay网络一直被创建为attachabled的，并且这是不可配置的特性。这意味着独立的容器可以连接到overlay网络上。\r\n在Compose配置文件版本3.x，你可以可选地设置attachable属性为false关闭该特性。\r\n\r\n现在每个容器都可以通过主机名web或者db来回溯它们的容器ip地址，web应用代码可以连接URL postgres://db:5432来开始使用postgres数据库\r\n\r\n注意HOST_PORT(主机端口）和CONTAINER_PORT（容器端口）之间的区别是很重要的。在上面的例子的，对于db容器，8001是主机端口, 而容器端口是5432(postgres默认)。网络服务之间的交流使用的是容器端口。当主机端口被定义，服务也可以在群外访问。\r\n\r\n在web容器里，你连接数据库的代码看起来是这样的postgres://db:5432，而在docker宿主机器，连接数据库看起来是这样的postgres://{DOCKER_IP}:8001。\r\n\r\n## 更新容器\r\n如果你修改了配置文件并且运行docker-compose up命令重新启动，旧的容器将会被删除，新的容器会以不同的ip地址和相同的主机名加入网络，运行的容器可以通过主机名连接新的地址，但是旧的地址将不再工作。\r\n\r\n如果有容器正在连接旧的容器，它们将关闭，容器会检测此条件，再次查找名称并重新连接新的容器。', 18, 'https://www.chwech.com/2019/05/02/18-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (24, 1, '2019-06-09 02:48:22', '2019-06-09 02:48:22', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<pre><code class=\"\"># 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n</code></pre>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<pre><code class=\"\">&gt; 这是引用\n</code></pre>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\n<pre><code class=\"\">    function fn () {\n        console.log(\'这是代码块\')\n    }\n</code></pre>\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<pre><code class=\"\">[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n</code></pre>\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n<pre><code class=\"\">此定义参考百度百科[markdown][markdown]词条\n</code></pre>\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<pre><code class=\"\">[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n</code></pre>\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<pre><code class=\"\">![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n</code></pre>\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<pre><code class=\"\">![alt text][id]\n[id]: url/to/image \"title\"\n</code></pre>\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<pre><code class=\"\">*斜体*\n\n**粗体**\n</code></pre>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<pre><code class=\"\">* 苹果\n* 香蕉\n* 雪梨\n</code></pre>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n\n<pre><code class=\"\">1. 苹果\n2. 香蕉\n3. 雪梨\n</code></pre>\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<pre><code class=\"\">header 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n</code></pre>\n\n<h2>中划线（文字中间划线）</h2>\n\n<pre><code class=\"\">~~测试测试测试~~\n</code></pre>\n\n<h1>待办事项列表</h1>\n\n<pre><code class=\"\">- [ ] todo1\n- [ ] todo2\n    - [x] todo3\n</code></pre>\n\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', 'markdown基本使用', '', 'inherit', 'closed', 'closed', '', '5-autosave-v1', '', '', '2019-06-09 02:48:22', '2019-06-09 02:48:22', '## 段落和换行\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n## 标题\n```\n# 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n```\n## 引用\n\n使用 **>** 号表示引用\n```\n&gt; 这是引用\n```\n## 代码块\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n```\n	function fn () {\n		console.log(&#039;这是代码块&#039;)\n	}\n```\n## 代码\n\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\n\njavascript中可以用`console.log()`函数在控制台中输出东西\n\n## 链接\n### 行内链接\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n```\n[百度](http://www.baidu.com/ &quot;百度一下，你就知道&quot;)一下，你就知道\n```\n### 参考链接\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n```\n此定义参考百度百科[markdown][markdown]词条\n```\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n```\n[markdown]: http://baike.baidu.com/item/markdown &quot;markdown词条&quot;\n```\n> 链接内容定义的形式为：\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n> * 接着一个冒号\n> * 接着一个以上的空格或制表符\n> * 接着链接的网址\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n\n## 图片\n### 行内式\n```\n![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg &quot;title&quot;)\n```\n> 详细叙述如下：\n> * 一个惊叹号 !\n> * 接着一个方括号，里面放上图片的替代文字\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n\n### 参考式\n```\n![alt text][id]\n[id]: url/to/image &quot;title&quot;\n```\n## 强调\n\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\n```\n*斜体*\n\n**粗体**\n```\n## 列表\n### 无序列表\n\n无序列表用*加一个空格开头\n```\n* 苹果\n* 香蕉\n* 雪梨\n```\n### 有序列表\n\n有序列表直接写序号开头\n```\n1. 苹果\n2. 香蕉\n3. 雪梨\n```\n## 分隔线\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n---\n\n## 表格\n```\nheader 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n```\n## 中划线（文字中间划线）\n```\n~~测试测试测试~~\n```\n# 待办事项列表\n```\n- [ ] todo1\n- [ ] todo2\n	- [x] todo3\n```\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\n\n参考文章：\n\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 5, 'https://www.chwech.com/2019/05/02/5-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (26, 1, '2019-05-22 15:14:36', '2019-05-22 15:14:36', 'axios文档里，配置对象config的params属性必须是一个无格式对象(plain object)或 URLSearchParams 对象。那么什么是无格式对象呢？抱着疑问查阅资料记录一下：\n\nplain object就是通过对象字面量或者new Object()创建的对象\n\n以下是redux实现的判断是否是plain object的代码\n\n<pre><code class=\"language-javascript \">/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n</code></pre>', '[笔记]javascript中的plain object是什么?', '', 'publish', 'open', 'open', '', '%e7%ac%94%e8%ae%b0javascript%e4%b8%ad%e7%9a%84plain-object%e6%98%af%e4%bb%80%e4%b9%88', '', '', '2019-05-22 15:14:36', '2019-05-22 15:14:36', 'axios文档里，配置对象config的params属性必须是一个无格式对象(plain object)或 URLSearchParams 对象。那么什么是无格式对象呢？抱着疑问查阅资料记录一下：\r\n\r\nplain object就是通过对象字面量或者new Object()创建的对象\r\n\r\n以下是redux实现的判断是否是plain object的代码\r\n```javascript\r\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\r\nexport default function isPlainObject(obj) {\r\n  if (typeof obj !== &#039;object&#039; || obj === null) return false\r\n\r\n  let proto = obj\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(obj) === proto\r\n}\r\n```', 0, 'https://www.chwech.com/?p=26', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (27, 1, '2019-05-22 15:14:01', '2019-05-22 15:14:01', 'axios文档里，配置对象config的params属性必须是一个无格式对象(plain object)或 URLSearchParams 对象。那么什么是无格式对象呢？抱着疑问查阅资料记录一下：\n\nplain object就是通过对象字面量或者new Object()创建的对象\n\n以下是redux实现的判断是否是plain object的代码\n\n<pre><code class=\"language-javascript \">/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n</code></pre>', '[笔记]javascript中的plain object是什么?', '', 'inherit', 'closed', 'closed', '', '26-revision-v1', '', '', '2019-05-22 15:14:01', '2019-05-22 15:14:01', 'axios文档里，配置对象config的params属性必须是一个无格式对象(plain object)或 URLSearchParams 对象。那么什么是无格式对象呢？抱着疑问查阅资料记录一下：\r\n\r\nplain object就是通过对象字面量或者new Object()创建的对象\r\n\r\n以下是redux实现的判断是否是plain object的代码\r\n```javascript\r\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\r\nexport default function isPlainObject(obj) {\r\n  if (typeof obj !== &#039;object&#039; || obj === null) return false\r\n\r\n  let proto = obj\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(obj) === proto\r\n}\r\n```', 26, 'https://www.chwech.com/2019/05/22/26-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (28, 1, '2019-05-26 01:59:17', '2019-05-26 01:59:17', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 'Hello world!', '', 'inherit', 'closed', 'closed', '', '1-autosave-v1', '', '', '2019-05-26 01:59:17', '2019-05-26 01:59:17', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 1, 'https://www.chwech.com/2019/05/26/1-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (29, 1, '2019-05-26 01:59:21', '2019-05-26 01:59:21', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 'Hello world!', '', 'inherit', 'closed', 'closed', '', '1-revision-v1', '', '', '2019-05-26 01:59:21', '2019-05-26 01:59:21', '一直都有自己维护一个博客，记录技术成长的想法。最初想自己从头开始撸一个，但是由于技术的欠缺一直搁置着。我想，既然博客是用来写文章的，其核心就是文章的内容。而不是写博客网站的过程。业界有很多优秀的博客程序，又何必自己再写一个？自己写也不比别人的好用！于是，就有了本博客啦。由wordpress搭建而成。本篇文章算是一个开端，hello world!', 1, 'https://www.chwech.com/2019/05/26/1-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (30, 1, '2019-05-26 02:41:37', '2019-05-26 02:41:37', '<h1>基本信息</h1>\n\n<ul>\n<li>chwech</li>\n<li>男 27岁</li>\n<li>本科 2年前端开发经验</li>\n<li>804699297@qq.com</li>\n</ul>\n\n<h1>教育经历</h1>\n\n<ul>\n<li>2012.09 - 2016.06  广东海洋大学农学院  专业：农学</li>\n</ul>\n\n<h1>求职意向</h1>\n\n<ul>\n<li>期望工作岗位：前端开发工程师</li>\n<li>期望薪资：税前月薪10k~15k</li>\n</ul>\n\n<h1>工作经历</h1>\n\n<ul>\n<li><p>2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师<br />\n从零开始开发了公司三个后台管理系统和一个微信端微商城项目，前期负责微信公众号的 H5页面的开发，以及一些活动页面的需求，涉及购物车、预付单/订单/送货单状态管理、微信在线支付等常规功能。中期负责后台管理系统项目的重构，涉及到技术选型，业务代码重构。主要技术栈es6,vuejs,jquery</p></li>\n<li><p>2016.08 - 2017.01   广州第一灵感信息科技有限公司  前端开发实习<br />\n负责公司官网和公众号的简单功能开发及日常维护。</p></li>\n</ul>', '我的简历', '', 'inherit', 'closed', 'closed', '', '2-revision-v1', '', '', '2019-05-26 02:41:37', '2019-05-26 02:41:37', '# 基本信息\r\n* chwech\r\n* 男 27岁\r\n* 本科 2年前端开发经验\r\n* 804699297@qq.com\r\n\r\n# 教育经历\r\n* 2012.09 - 2016.06  广东海洋大学农学院  专业：农学\r\n\r\n# 求职意向\r\n* 期望工作岗位：前端开发工程师\r\n* 期望薪资：税前月薪10k~15k\r\n\r\n# 工作经历\r\n* 2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师    \r\n从零开始开发了公司三个后台管理系统和一个微信端微商城项目，前期负责微信公众号的 H5页面的开发，以及一些活动页面的需求，涉及购物车、预付单/订单/送货单状态管理、微信在线支付等常规功能。中期负责后台管理系统项目的重构，涉及到技术选型，业务代码重构。主要技术栈es6,vuejs,jquery\r\n\r\n* 2016.08 - 2017.01   广州第一灵感信息科技有限公司  前端开发实习    \r\n负责公司官网和公众号的简单功能开发及日常维护。', 2, 'https://www.chwech.com/2019/05/26/2-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (31, 1, '2019-05-28 14:14:01', '2019-05-28 14:14:01', '<h1>踩坑</h1>\n\n<h1>javascript中数字的存储方式</h1>\n\n<h1>0.1 + 0.2的过程</h1>\n\n<h1>解决方案</h1>\n\n<h1>结语</h1>', '为什么0.1 + 0.2不等于0.3？', '', 'draft', 'open', 'open', '', '', '', '', '2019-05-28 14:14:01', '2019-05-28 14:14:01', '# 踩坑\r\n# javascript中数字的存储方式\r\n# 0.1 + 0.2的过程\r\n# 解决方案\r\n# 结语', 0, 'https://www.chwech.com/?p=31', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (32, 1, '2019-05-28 14:12:05', '2019-05-28 14:12:05', '', '为什么0.1 + 0.2不等于0.3？', '', 'inherit', 'closed', 'closed', '', '31-revision-v1', '', '', '2019-05-28 14:12:05', '2019-05-28 14:12:05', '', 31, 'https://www.chwech.com/2019/05/28/31-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (33, 1, '2019-05-28 14:13:56', '2019-05-28 14:13:56', '<h1>踩坑</h1>\n\n<h1>javascript中数字的存储方式</h1>\n\n<h1>0.1 + 0.2的过程</h1>\n\n<h1>解决方案</h1>\n\n<h1>结语</h1>', '为什么0.1 + 0.2不等于0.3？', '', 'inherit', 'closed', 'closed', '', '31-revision-v1', '', '', '2019-05-28 14:13:56', '2019-05-28 14:13:56', '# 踩坑\r\n# javascript中数字的存储方式\r\n# 0.1 + 0.2的过程\r\n# 解决方案\r\n# 结语', 31, 'https://www.chwech.com/2019/05/28/31-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (35, 1, '2019-05-29 14:56:33', '2019-05-29 14:56:33', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<h1>分析</h1>\n\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\n\n<h1>总结</h1>\n\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下，以免下次犯同样的错误。', 'vue-router多个router-view导致组件重复渲染的问题', '', 'publish', 'open', 'open', '', 'vue-router%e5%a4%9a%e4%b8%aarouter-view%e5%af%bc%e8%87%b4%e7%bb%84%e4%bb%b6%e9%87%8d%e5%a4%8d%e6%b8%b2%e6%9f%93%e7%9a%84%e9%97%ae%e9%a2%98', '', '', '2019-06-09 02:32:50', '2019-06-09 02:32:50', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n# 分析\r\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\r\n\r\n# 总结\r\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下，以免下次犯同样的错误。', 0, 'https://www.chwech.com/?p=35', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (36, 1, '2019-05-28 14:17:54', '2019-05-28 14:17:54', '<h1>踩坑</h1>\n\n<h1>分析</h1>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-28 14:17:54', '2019-05-28 14:17:54', '# 踩坑\r\n# 分析\r\n# 总结', 35, 'https://www.chwech.com/2019/05/28/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (37, 1, '2019-05-28 14:23:52', '2019-05-28 14:23:52', '<h1>前言</h1>', '[翻译]浏览器的event loop', '', 'draft', 'open', 'open', '', '', '', '', '2019-05-28 14:23:52', '2019-05-28 14:23:52', '# 前言', 0, 'https://www.chwech.com/?p=37', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (38, 1, '2019-05-28 14:23:52', '2019-05-28 14:23:52', '<h1>前言</h1>', '[翻译]浏览器的event loop', '', 'inherit', 'closed', 'closed', '', '37-revision-v1', '', '', '2019-05-28 14:23:52', '2019-05-28 14:23:52', '# 前言', 37, 'https://www.chwech.com/2019/05/28/37-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (40, 1, '2019-05-29 13:17:33', '2019-05-29 13:17:33', '<h1>踩坑</h1>\n\n&lt;\n\np class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n\n<h1>分析</h1>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 13:17:33', '2019-05-29 13:17:33', '# 踩坑\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n# 分析\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (41, 1, '2019-05-29 13:33:08', '2019-05-29 13:33:08', '<h1>踩坑</h1>\n\n[codepen_embed height=\"265\" theme_id=\"dark\" slug_hash=\"eaLLBg\" default_tab=\"js,result\" user=\"chwech\"]See the Pen <a href=\'https://codepen.io/chwech/pen/eaLLBg/\'>eaLLBg</a> by chwech (<a href=\'https://codepen.io/chwech\'>@chwech</a>) on <a href=\'https://codepen.io\'>CodePen</a>.[/codepen_embed]\n\n<h1>分析</h1>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 13:33:08', '2019-05-29 13:33:08', '# 踩坑\r\n[codepen_embed height=\"265\" theme_id=\"dark\" slug_hash=\"eaLLBg\" default_tab=\"js,result\" user=\"chwech\"]See the Pen <a href=\'https://codepen.io/chwech/pen/eaLLBg/\'>eaLLBg</a> by chwech (<a href=\'https://codepen.io/chwech\'>@chwech</a>) on <a href=\'https://codepen.io\'>CodePen</a>.[/codepen_embed]\r\n# 分析\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (42, 1, '2019-05-29 13:35:32', '2019-05-29 13:35:32', '<h1>踩坑</h1>\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n<h1>分析</h1>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 13:35:32', '2019-05-29 13:35:32', '# 踩坑\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n# 分析\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (43, 1, '2019-05-29 14:13:50', '2019-05-29 14:13:50', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n<h1>分析</h1>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 14:13:50', '2019-05-29 14:13:50', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n# 分析\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (44, 1, '2019-05-29 14:32:40', '2019-05-29 14:32:40', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<h1>分析</h1>\n\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 14:32:40', '2019-05-29 14:32:40', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n# 分析\r\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (45, 1, '2019-05-29 14:39:47', '2019-05-29 14:39:47', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<h1>分析</h1>\n\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n<h1>总结</h1>', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 14:39:47', '2019-05-29 14:39:47', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n# 分析\r\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n# 总结', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (46, 1, '2019-05-29 14:53:40', '2019-05-29 14:53:40', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<h1>分析</h1>\n\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\n\n<h1>总结</h1>\n\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下。', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 14:53:40', '2019-05-29 14:53:40', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n# 分析\r\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\r\n# 总结\r\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下。', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (47, 1, '2019-05-29 14:54:50', '2019-05-29 14:54:50', '<h1>踩坑</h1>\n\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\n\n<h1>分析</h1>\n\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\n\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\n\n<h1>总结</h1>\n\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下，以免下次犯同样的错误。', 'vue-router多个router-view导致组件重复渲染的问题', '', 'inherit', 'closed', 'closed', '', '35-revision-v1', '', '', '2019-05-29 14:54:50', '2019-05-29 14:54:50', '# 踩坑\r\n由于业务上需要，需要在标签切换的时候对组件的保持状态。所以用到keep-alive对动态组件进行缓存。这样切换标签时，除了第一次会创建组件外，下次不会再次创建。但是测试小姐姐却提了一个bug，说切换标签时数据没有进行保持。\r\n\r\n# 分析\r\n在debugger的过程中，发现切换标签的时候，组件的created生命周期函数又重新执行了一次，嗯，因为我们的数据获取是在created钩子获取的，所以我首先是检查这个地方。这就触及了我知识盲区了，因为明明用了keep-alive，组件却没有被缓存。请教了同事，也想不出是什么原因会导致组件被再次创建。由于组件中mixin进了其它生命周期钩子逻辑，我们曾一度怀疑是mixin惹得锅。有了怀疑对象，就要排除是不是因为它导致的问题。这里用控制变量法验证，去掉mixin的逻辑，看会不会重复渲染组件。事实证明不是mixin的锅。排除了mixin的问题后，我们陷入困境，无从下手。这时，我们只好重新检查使用keep-alive的代码：\r\n\r\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"js,result\" data-user=\"chwech\" data-slug-hash=\"eaLLBg\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"eaLLBg\">\r\n  <span>See the Pen <a href=\"https://codepen.io/chwech/pen/eaLLBg/\">\r\n  eaLLBg</a> by chwech (<a href=\"https://codepen.io/chwech\">@chwech</a>)\r\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\r\n</p>\r\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\r\n\r\n公司代码不方便贴出，还原回来，逻辑就如上面的一样。看完以后觉得没有任何问题啊。再看，感觉有点怪？此处使用了v-for循环了多个router-view! 按经验一般应该只有一个路由出口，会不会是多个路由出口导致的重复渲染？ok, 又有了怀疑的对象，还是按照套路，试试一个路由出口，再也没有重复渲染的问题。\r\n\r\n# 总结\r\n此bug非常隐蔽，找bug的过程也比较low, 都是猜测中排查，所以在此记录一下，以免下次犯同样的错误。', 35, 'https://www.chwech.com/2019/05/29/35-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (50, 1, '2019-06-09 02:31:27', '2019-06-09 02:31:27', '<ol>\n<li>从属关系的区别：\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。</li>\n<li>加载顺序的区别：\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。</li>\n<li>兼容性的区别：\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。</li>\n<li>DOM可控性区别：\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式</li>\n</ol>', 'link引入和@import引入css有什么区别？', '', 'draft', 'open', 'open', '', '', '', '', '2019-06-09 02:31:27', '2019-06-09 02:31:27', '1. 从属关系的区别：\r\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\r\n2. 加载顺序的区别：\r\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\r\n3. 兼容性的区别：\r\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\r\n4. DOM可控性区别：\r\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 0, 'https://www.chwech.com/?p=50', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (51, 1, '2019-06-09 02:27:31', '2019-06-09 02:27:31', '1）从属关系的区别：link属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\n2）加载顺序的区别：页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\n3）兼容性的区别：@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\n4）DOM可控性区别：通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 'link引入和@import引入css有什么区别？', '', 'inherit', 'closed', 'closed', '', '50-revision-v1', '', '', '2019-06-09 02:27:31', '2019-06-09 02:27:31', '1）从属关系的区别：link属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\r\n2）加载顺序的区别：页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\r\n3）兼容性的区别：@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\r\n4）DOM可控性区别：通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 50, 'https://www.chwech.com/2019/06/09/50-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (52, 1, '2019-06-09 02:28:46', '2019-06-09 02:28:46', '1）从属关系的区别：\n\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\n2）加载顺序的区别：\n\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\n3）兼容性的区别：\n\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\n4）DOM可控性区别：\n\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 'link引入和@import引入css有什么区别？', '', 'inherit', 'closed', 'closed', '', '50-revision-v1', '', '', '2019-06-09 02:28:46', '2019-06-09 02:28:46', '1）从属关系的区别：\r\n\r\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\r\n2）加载顺序的区别：\r\n\r\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\r\n3）兼容性的区别：\r\n\r\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\r\n4）DOM可控性区别：\r\n\r\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 50, 'https://www.chwech.com/2019/06/09/50-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (53, 1, '2019-06-09 02:30:14', '2019-06-09 02:30:14', '<ol>\n<li>从属关系的区别：\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。</li>\n<li>加载顺序的区别：\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。</li>\n<li>兼容性的区别：\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。</li>\n<li>DOM可控性区别：\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式</li>\n</ol>', 'link引入和@import引入css有什么区别？', '', 'inherit', 'closed', 'closed', '', '50-revision-v1', '', '', '2019-06-09 02:30:14', '2019-06-09 02:30:14', '1. 从属关系的区别：\r\nlink属于XHTML标签，而@import是CSS提供的语法规则，link除了加载CSS，还可以定义RSS，定义rel连接属性等，@import就只能加载CSS。\r\n2. 加载顺序的区别：\r\n页面加载时，link会同时被加载，而@import引用的CSS会等页面被加载完后再加载。\r\n3. 兼容性的区别：\r\n@import只有IE5以上才能被识别，而link是XHTML标签，无兼容问题。\r\n4. DOM可控性区别：\r\n通过js操作DOM,可以插入link标签来改变样式；由于DOM方法是基于文档的，无法使用@import方式插入样式', 50, 'https://www.chwech.com/2019/06/09/50-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (56, 1, '2019-06-09 02:48:44', '2019-06-09 02:48:44', '<h2>段落和换行</h2>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\n\n<h2>标题</h2>\n\n<pre><code class=\"\"># 标题一h1\n## 标题二h2\n### 标题二h3\n#### 标题二h4\n##### 标题二h5\n###### 标题二h6\n</code></pre>\n\n<h2>引用</h2>\n\n使用 <strong>></strong> 号表示引用\n\n<pre><code class=\"\">&gt; 这是引用\n</code></pre>\n\n<h2>代码块</h2>\n\n简单地缩进 4 个空格或是 1 个制表符就可以\n\n<pre><code class=\"\">    function fn () {\n        console.log(\'这是代码块\')\n    }\n</code></pre>\n\n<h2>代码</h2>\n\n标记一小段行内代码，你可以用反引号<code>`</code>把它包起来。\n\njavascript中可以用<code>console.log()</code>函数在控制台中输出东西\n\n<h2>链接</h2>\n\n<h3>行内链接</h3>\n\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\n\n<pre><code class=\"\">[百度](http://www.baidu.com/ \"百度一下，你就知道\")一下，你就知道\n</code></pre>\n\n<h3>参考链接</h3>\n\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n<pre><code class=\"\">此定义参考百度百科[markdown][markdown]词条\n</code></pre>\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n<pre><code class=\"\">[markdown]: http://baike.baidu.com/item/markdown \"markdown词条\"\n</code></pre>\n\n<blockquote>\n  链接内容定义的形式为：\n  * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n  * 接着一个冒号\n  * 接着一个以上的空格或制表符\n  * 接着链接的网址\n  * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n</blockquote>\n\n<h2>图片</h2>\n\n<h3>行内式</h3>\n\n<pre><code class=\"\">![alt text](/path/to/img.jpg)\n![alt text](/path/to/img.jpg \"title\")\n</code></pre>\n\n<blockquote>\n  详细叙述如下：\n  * 一个惊叹号 !\n  * 接着一个方括号，里面放上图片的替代文字\n  * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\n</blockquote>\n\n<h3>参考式</h3>\n\n<pre><code class=\"\">![alt text][id]\n[id]: url/to/image \"title\"\n</code></pre>\n\n<h2>强调</h2>\n\n斜体用&#42;content&#42;包含，粗体用&#42;&#42;content&#42;&#42;包含。\n\n<pre><code class=\"\">*斜体*\n\n**粗体**\n</code></pre>\n\n<h2>列表</h2>\n\n<h3>无序列表</h3>\n\n无序列表用*加一个空格开头\n\n<pre><code class=\"\">* 苹果\n* 香蕉\n* 雪梨\n</code></pre>\n\n<h3>有序列表</h3>\n\n有序列表直接写序号开头\n\n<pre><code class=\"\">1. 苹果\n2. 香蕉\n3. 雪梨\n</code></pre>\n\n<h2>分隔线</h2>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\n\n<hr />\n\n<h2>表格</h2>\n\n<pre><code class=\"\">header 1 | header 2\n---|---\nrow 1 col 1 | row 1 col 2\nrow 2 col 1 | row 2 col 2\n</code></pre>\n\n<h2>中划线（文字中间划线）</h2>\n\n<pre><code class=\"\">~~测试测试测试~~\n</code></pre>\n\n<h1>待办事项列表</h1>\n\n<pre><code class=\"\">- [ ] todo1\n- [ ] todo2\n    - [x] todo3\n</code></pre>\n\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\n\n参考文章：\n\n<a href=\"http://www.appinn.com/markdown/\" title=\"markdown语法说明(简体中文版)\">markdown语法说明(简体中文版)</a>', 'markdown基本使用', '', 'inherit', 'closed', 'closed', '', '5-revision-v1', '', '', '2019-06-09 02:48:44', '2019-06-09 02:48:44', '## 段落和换行\r\n\r\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。\r\n\r\n## 标题\r\n```\r\n# 标题一h1\r\n## 标题二h2\r\n### 标题二h3\r\n#### 标题二h4\r\n##### 标题二h5\r\n###### 标题二h6\r\n```\r\n## 引用\r\n\r\n使用 **>** 号表示引用\r\n```\r\n&gt; 这是引用\r\n```\r\n## 代码块\r\n\r\n简单地缩进 4 个空格或是 1 个制表符就可以\r\n```\r\n	function fn () {\r\n		console.log(&#039;这是代码块&#039;)\r\n	}\r\n```\r\n## 代码\r\n\r\n标记一小段行内代码，你可以用反引号`` ` ``把它包起来。\r\n\r\njavascript中可以用`console.log()`函数在控制台中输出东西\r\n\r\n## 链接\r\n### 行内链接\r\n\r\n在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可(前有一空格)。\r\n```\r\n[百度](http://www.baidu.com/ &quot;百度一下，你就知道&quot;)一下，你就知道\r\n```\r\n### 参考链接\r\n\r\n链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\r\n```\r\n此定义参考百度百科[markdown][markdown]词条\r\n```\r\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\r\n```\r\n[markdown]: http://baike.baidu.com/item/markdown &quot;markdown词条&quot;\r\n```\r\n> 链接内容定义的形式为：\r\n> * 方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\r\n> * 接着一个冒号\r\n> * 接着一个以上的空格或制表符\r\n> * 接着链接的网址\r\n> * 选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\r\n\r\n## 图片\r\n### 行内式\r\n```\r\n![alt text](/path/to/img.jpg)\r\n![alt text](/path/to/img.jpg &quot;title&quot;)\r\n```\r\n> 详细叙述如下：\r\n> * 一个惊叹号 !\r\n> * 接着一个方括号，里面放上图片的替代文字\r\n> * 接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 \'title\' 文字。\r\n\r\n### 参考式\r\n```\r\n![alt text][id]\r\n[id]: url/to/image &quot;title&quot;\r\n```\r\n## 强调\r\n\r\n斜体用\\*content\\*包含，粗体用\\*\\*content\\*\\*包含。\r\n```\r\n*斜体*\r\n\r\n**粗体**\r\n```\r\n## 列表\r\n### 无序列表\r\n\r\n无序列表用*加一个空格开头\r\n```\r\n* 苹果\r\n* 香蕉\r\n* 雪梨\r\n```\r\n### 有序列表\r\n\r\n有序列表直接写序号开头\r\n```\r\n1. 苹果\r\n2. 香蕉\r\n3. 雪梨\r\n```\r\n## 分隔线\r\n\r\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。\r\n\r\n---\r\n\r\n## 表格\r\n```\r\nheader 1 | header 2\r\n---|---\r\nrow 1 col 1 | row 1 col 2\r\nrow 2 col 1 | row 2 col 2\r\n```\r\n## 中划线（文字中间划线）\r\n```\r\n~~测试测试测试~~\r\n```\r\n# 待办事项列表\r\n```\r\n- [ ] todo1\r\n- [ ] todo2\r\n	- [x] todo3\r\n```\r\n注意，未完成的事项括号前中后需要有一个空格，已完成的事项括号里面是一个字母x, 括号前后没有空格。\r\n\r\n参考文章：\r\n\r\n[markdown语法说明(简体中文版)](http://www.appinn.com/markdown/ \"markdown语法说明(简体中文版)\")', 5, 'https://www.chwech.com/2019/06/09/5-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (58, 1, '2019-06-09 08:54:30', '2019-06-09 08:54:30', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\n<a href=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\" alt=\"\" /></a>\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\n\n<pre><code class=\"\">.sub {\n    margin-left: -100%;\n}\n.extra {\n    margin-left: -200px;\n}\n</code></pre>\n\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\n<a href=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\" alt=\"\" /></a>\n所以我们设置父容器container的左右padding，把主列挤出来\n\n<pre><code class=\"\">.container {\n    padding: 0 200px 0 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\" alt=\"\" /></a>\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\n\n<pre><code class=\"\">.sub,\n.extra {\n    position: relative;\n}\n.sub {\n    right: 200px;\n}\n.extra {\n    left: 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\" alt=\"\" /></a>\n恭喜你，你完成了一个圣杯布局了！ok，那双飞翼布局又是什么呢？其实双飞翼布局是在圣杯布局上的改造。它比圣杯布局多了一层标签来包裹主列。然后不再虽然设置父容器的padding的重新定位子列和附加列，而是设置主列内容的margin即可。\n\n<pre><code class=\"\">// html\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;\n        &lt;div class=\"main-content\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n// css\n.main-content {\n    margin: 0 200px 0 200px;\n}\n</code></pre>\n\n我认为双飞翼布局比圣杯布局有以下优点：\n1.代码更易于理解，少了一层定位\n2.更灵活，可以实现三栏的自由组合（css改变顺序，不用改html结构）\n\n这就是圣杯布局和双飞翼布局的实现，完整代码可以看这里：\n<a href=\"https://codepen.io/chwech/pen/KLOrdr\" title=\"圣杯布局\">圣杯布局</a>\n<a href=\"https://codepen.io/chwech/pen/WBVPYM\" title=\"双飞翼布局\">双飞翼布局</a>', '圣杯布局和双飞翼布局的实现', '', 'publish', 'open', 'open', '', '%e5%9c%a3%e6%9d%af%e5%b8%83%e5%b1%80%e5%92%8c%e5%8f%8c%e9%a3%9e%e7%bf%bc%e5%b8%83%e5%b1%80%e7%9a%84%e5%ae%9e%e7%8e%b0', '', '', '2019-06-09 08:54:30', '2019-06-09 08:54:30', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\r\n[![](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)\r\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\r\n```\r\n.sub {\r\n	margin-left: -100%;\r\n}\r\n.extra {\r\n	margin-left: -200px;\r\n}\r\n```\r\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\r\n[![](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)\r\n所以我们设置父容器container的左右padding，把主列挤出来\r\n```\r\n.container {\r\n	padding: 0 200px 0 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)\r\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\r\n```\r\n.sub,\r\n.extra {\r\n	position: relative;\r\n}\r\n.sub {\r\n	right: 200px;\r\n}\r\n.extra {\r\n	left: 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)\r\n恭喜你，你完成了一个圣杯布局了！ok，那双飞翼布局又是什么呢？其实双飞翼布局是在圣杯布局上的改造。它比圣杯布局多了一层标签来包裹主列。然后不再虽然设置父容器的padding的重新定位子列和附加列，而是设置主列内容的margin即可。\r\n```\r\n// html\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;\r\n		&lt;div class=&quot;main-content&quot;&gt;&lt;/div&gt;\r\n	&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n// css\r\n.main-content {\r\n	margin: 0 200px 0 200px;\r\n}\r\n```\r\n我认为双飞翼布局比圣杯布局有以下优点：\r\n1.代码更易于理解，少了一层定位\r\n2.更灵活，可以实现三栏的自由组合（css改变顺序，不用改html结构）\r\n\r\n这就是圣杯布局和双飞翼布局的实现，完整代码可以看这里：\r\n[圣杯布局](https://codepen.io/chwech/pen/KLOrdr \"圣杯布局\")\r\n[双飞翼布局](https://codepen.io/chwech/pen/WBVPYM \"双飞翼布局\")', 0, 'https://www.chwech.com/?p=58', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (59, 1, '2019-06-09 07:38:10', '2019-06-09 07:38:10', '<h1>什么是圣杯布局，什么是双飞翼布局</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<em>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</em>', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 07:38:10', '2019-06-09 07:38:10', '# 什么是圣杯布局，什么是双飞翼布局\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种*三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。*', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (60, 1, '2019-06-09 07:44:09', '2019-06-09 07:44:09', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 07:44:09', '2019-06-09 07:44:09', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (61, 1, '2019-06-09 07:57:02', '2019-06-09 07:57:02', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 07:57:02', '2019-06-09 07:57:02', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (62, 1, '2019-06-09 08:02:40', '2019-06-09 08:02:40', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\n<a href=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\" alt=\"\" /></a>', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 08:02:40', '2019-06-09 08:02:40', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\r\n[![](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (63, 1, '2019-06-09 08:13:00', '2019-06-09 08:13:00', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\n<a href=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\" alt=\"\" /></a>\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\n\n<pre><code class=\"\">.sub {\n    margin-left: -100%;\n}\n.extra {\n    margin-left: -200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\" alt=\"\" /></a>\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 08:13:00', '2019-06-09 08:13:00', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\r\n[![](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)\r\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\r\n```\r\n.sub {\r\n	margin-left: -100%;\r\n}\r\n.extra {\r\n	margin-left: -200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)\r\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (64, 1, '2019-06-09 08:30:14', '2019-06-09 08:30:14', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\n<a href=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\" alt=\"\" /></a>\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\n\n<pre><code class=\"\">.sub {\n    margin-left: -100%;\n}\n.extra {\n    margin-left: -200px;\n}\n</code></pre>\n\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\n<a href=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\" alt=\"\" /></a>\n所以我们设置父容器container的左右padding，把主列挤出来\n\n<pre><code class=\"\">.container {\n    padding: 0 200px 0 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\" alt=\"\" /></a>\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\n\n<pre><code class=\"\">.sub,\n.extra {\n    position: relative;\n}\n.sub {\n    right: 200px;\n}\n.extra {\n    left: 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\" alt=\"\" /></a>\n恭喜你，你完成了一个圣杯布局了！', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 08:30:14', '2019-06-09 08:30:14', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\r\n[![](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)\r\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\r\n```\r\n.sub {\r\n	margin-left: -100%;\r\n}\r\n.extra {\r\n	margin-left: -200px;\r\n}\r\n```\r\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\r\n[![](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)\r\n所以我们设置父容器container的左右padding，把主列挤出来\r\n```\r\n.container {\r\n	padding: 0 200px 0 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)\r\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\r\n```\r\n.sub,\r\n.extra {\r\n	position: relative;\r\n}\r\n.sub {\r\n	right: 200px;\r\n}\r\n.extra {\r\n	left: 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)\r\n恭喜你，你完成了一个圣杯布局了！', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (65, 1, '2019-06-09 08:53:48', '2019-06-09 08:53:48', '<h1>什么是圣杯布局，什么是双飞翼布局？</h1>\n\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种<strong>三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。</strong>圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\n\n<h1>一步一步实现圣杯布局和双飞翼布局</h1>\n\n首先是DOM结构\n\n<pre><code class=\"\">&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;&lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n这里需要注意的是三列的顺序是<em>主列（main)</em>, <em>子列(sub)</em>, <em>附加列（extra)</em>。这样主列内容是优先加载的。\n\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\n\n<pre><code class=\"\">.main,\n.sub,\n.extra {\n    float: left;\n}\n.main {\n    width: 100%;\n}\n.sub,\n.extra {\n    width: 200px;\n}\n</code></pre>\n\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\n<a href=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png\" alt=\"\" /></a>\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\n\n<pre><code class=\"\">.sub {\n    margin-left: -100%;\n}\n.extra {\n    margin-left: -200px;\n}\n</code></pre>\n\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\n<a href=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png\" alt=\"\" /></a>\n所以我们设置父容器container的左右padding，把主列挤出来\n\n<pre><code class=\"\">.container {\n    padding: 0 200px 0 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png\" alt=\"\" /></a>\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\n\n<pre><code class=\"\">.sub,\n.extra {\n    position: relative;\n}\n.sub {\n    right: 200px;\n}\n.extra {\n    left: 200px;\n}\n</code></pre>\n\n<a href=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\"><img src=\"https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png\" alt=\"\" /></a>\n恭喜你，你完成了一个圣杯布局了！ok，那双飞翼布局又是什么呢？其实双飞翼布局是在圣杯布局上的改造。它比圣杯布局多了一层标签来包裹主列。然后不再虽然设置父容器的padding的重新定位子列和附加列，而是设置主列内容的margin即可。\n\n<pre><code class=\"\">// html\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"main\"&gt;\n        &lt;div class=\"main-content\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"sub\"&gt;&lt;/div&gt;\n    &lt;div class=\"extra\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n// css\n.main-content {\n    margin: 0 200px 0 200px;\n}\n</code></pre>\n\n我认为双飞翼布局比圣杯布局有以下优点：\n1.代码更易于理解，少了一层定位\n2.更灵活，可以实现三栏的自由组合（css改变顺序，不用改html结构）\n\n这就是圣杯布局和双飞翼布局的实现，完整代码可以看这里：\n<a href=\"https://codepen.io/chwech/pen/KLOrdr\" title=\"圣杯布局\">圣杯布局</a>\n<a href=\"https://codepen.io/chwech/pen/WBVPYM\" title=\"双飞翼布局\">双飞翼布局</a>', '圣杯布局和双飞翼布局的实现', '', 'inherit', 'closed', 'closed', '', '58-revision-v1', '', '', '2019-06-09 08:53:48', '2019-06-09 08:53:48', '# 什么是圣杯布局，什么是双飞翼布局？\r\n对于入行前端比较晚的同学，我想这两个布局应该听得比较少，因为我自己就是（捂脸）。一些技术上听起来很吓人的名词，其背后的实现和原理有时候是很简单的。所以不知道不要紧，学就是了。经过一番查证，圣杯布局和双飞翼布局其实是一种**三栏布局，就是我们常说的中间自适应，两侧固定宽度的布局。**圣杯布局来源于文章In Search of the Holy Grail，而双飞翼布局来源于淘宝UED。我的理解是双飞翼布局是圣杯布局的一种优化实现。\r\n# 一步一步实现圣杯布局和双飞翼布局\r\n首先是DOM结构\r\n```\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n```\r\n这里需要注意的是三列的顺序是*主列（main)*, *子列(sub)*, *附加列（extra)*。这样主列内容是优先加载的。\r\n\r\n下面我们编写css, 首先我们设置主列自适应宽度，子列和附加列固定宽度200px。并且三者左浮动\r\n\r\n```\r\n.main,\r\n.sub,\r\n.extra {\r\n	float: left;\r\n}\r\n.main {\r\n	width: 100%;\r\n}\r\n.sub,\r\n.extra {\r\n	width: 200px;\r\n}\r\n```\r\n\r\n此时的效果是主列占满了整行，子列和附加列被挤到下一行\r\n[![](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)](https://i.loli.net/2019/06/09/5cfcbd169bd4a50546.png)\r\n然后，为了把子列和附加列摆放到正确的位置，需要使用margin的负值定位。把挤到下一行的这两栏往前拉。\r\n```\r\n.sub {\r\n	margin-left: -100%;\r\n}\r\n.extra {\r\n	margin-left: -200px;\r\n}\r\n```\r\n这样，一个基本的三栏布局呼之欲出啦，但是你会发现主列并没有在正确的位置。它是占满一行的。（由它的内容被子列遮挡可以看出）\r\n[![](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)](https://i.loli.net/2019/06/09/5cfcbf6bcea4a43962.png)\r\n所以我们设置父容器container的左右padding，把主列挤出来\r\n```\r\n.container {\r\n	padding: 0 200px 0 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)](https://i.loli.net/2019/06/09/5cfcc0f8bd45766166.png)\r\n主列是挤出来，但是子列和附加列的位置又不对，摔！它们跟着也被挤了出来，怎么办？这时就要发挥我们的想像啦。既然子列和附加列的位置不对，我们重新定位就好了，使用相对定位，根据自身定位\r\n```\r\n.sub,\r\n.extra {\r\n	position: relative;\r\n}\r\n.sub {\r\n	right: 200px;\r\n}\r\n.extra {\r\n	left: 200px;\r\n}\r\n```\r\n[![](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)](https://i.loli.net/2019/06/09/5cfcc35e0a89115794.png)\r\n恭喜你，你完成了一个圣杯布局了！ok，那双飞翼布局又是什么呢？其实双飞翼布局是在圣杯布局上的改造。它比圣杯布局多了一层标签来包裹主列。然后不再虽然设置父容器的padding的重新定位子列和附加列，而是设置主列内容的margin即可。\r\n```\r\n// html\r\n&lt;div class=&quot;container&quot;&gt;\r\n	&lt;div class=&quot;main&quot;&gt;\r\n		&lt;div class=&quot;main-content&quot;&gt;&lt;/div&gt;\r\n	&lt;/div&gt;\r\n	&lt;div class=&quot;sub&quot;&gt;&lt;/div&gt;\r\n	&lt;div class=&quot;extra&quot;&gt;&lt;/div&gt;\r\n&lt;/div&gt;\r\n// css\r\n.main-content {\r\n	margin: 0 200px 0 200px;\r\n}\r\n```\r\n我认为双飞翼布局比圣杯布局有以下优点：\r\n1.代码更易于理解，少了一层定位\r\n2.更灵活，可以实现三栏的自由组合（css改变顺序，不用改html结构）\r\n\r\n这就是圣杯布局和双飞翼布局的实现，完整代码可以看这里：\r\n[圣杯布局](https://codepen.io/chwech/pen/KLOrdr \"圣杯布局\")\r\n[双飞翼布局](https://codepen.io/chwech/pen/WBVPYM \"双飞翼布局\")', 58, 'https://www.chwech.com/2019/06/09/58-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (67, 1, '2019-06-18 14:29:39', '2019-06-18 14:29:39', 'chwech\n男 广州天河|本科 2年工作经验\n804699297@qq.com\n\n<h2>求职意向</h2>\n\n期望工作岗位：中级前端开发\n到职状态: 离职随时入职\n\n<h2>工作经历</h2>\n\n<strong>2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发</strong>\n1. 负责产品团队成熟电子档案管理系统的重构工作。\n2. 负责多个新项目的前端开发和一个老项目的维护工作\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\n<strong>2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师</strong>\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\n\n<h2>项目经历</h2>\n\n<strong>2018.06 - 2018.12   交通工程电子档案系统重构</strong>\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\n<strong>2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台</strong>\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\n\n<h2>专业技能</h2>\n\n以下为我熟练使用的技能：\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\n前端工具：懂得使用webpack对项目进行模块打包。\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\n\n<h2>教育经历</h2>\n\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', 'My Resume', '', 'inherit', 'closed', 'closed', '', '2-revision-v1', '', '', '2019-06-18 14:29:39', '2019-06-18 14:29:39', 'chwech\r\n男 广州天河|本科 2年工作经验\r\n804699297@qq.com\r\n## 求职意向\r\n期望工作岗位：中级前端开发\r\n到职状态: 离职随时入职\r\n## 工作经历\r\n**2018.06 - 2019.06   广州市微柏软件股份有限公司  前端开发**\r\n1. 负责产品团队成熟电子档案管理系统的重构工作。\r\n2. 负责多个新项目的前端开发和一个老项目的维护工作\r\n3. 重构过程中不断优化项目，二次封装UI组件，封装公用方法。\r\n**2017.02 - 2018.05   广州范腾信息科技有限公司  前端开发工程师**\r\n1. 从零开始开发了公司三个后台管理系统和一个微信公众号共享点餐项目。\r\n2. 按照需求，与后端同事合作迭代项目，优化产品功能和界面。\r\n## 项目经历\r\n**2018.06 - 2018.12   交通工程电子档案系统重构**\r\n参与公司成熟电子档案系统重构工作，主要负责相关模块页面开发，通用组件定制开发，公用解决方案实现。基于element二次封装出一套适用于类似项目的组件库，最后搭建内网私有仓库供其它项目使用。主要技术栈为Vue.js及其生态。\r\n**2017.02 - 2017.05   \"点范\"微信公众号共享点餐平台**\r\n公司主要产品共享点餐平台要求半个月后上线，我从零开始学习AmazeUI, 根据原型图，和产品及后台紧密合作，我负责微信端公众号点餐平台及三个配套后台系统的前台页面编写，主要技术用jquery。经过紧张的开发，终于在约定时间上线了系统，后期根据需求完善优化系统。\r\n## 专业技能\r\n以下为我熟练使用的技能：\r\n前端基础：熟悉HTML, CSS, JavaScript基础知识，掌握ES2015常用语法新特性。\r\n前端框架：懂得使用Vue.js框架开发项目。熟悉Element UI框架。了解React.js。\r\n前端工具：懂得使用webpack对项目进行模块打包。\r\n版本管理: 懂得使用Git,Svn等工具的常用操作进行团队合作开发。\r\n其它： 了解微信公众号，小程序开发，了解linux服务器基本命令行操作，项目部署流程。\r\n## 教育经历\r\n2012.09 - 2016.06  广东海洋大学农学院  专业：农学  本科', 2, 'https://www.chwech.com/2019/06/18/2-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (68, 1, '2019-06-18 14:43:39', '2019-06-18 14:43:39', '', 'u=3628509720,244891551&fm=26&gp=0', '', 'inherit', 'open', 'closed', '', 'u3628509720244891551fm26gp0', '', '', '2019-06-18 14:43:39', '2019-06-18 14:43:39', '', 0, 'https://www.chwech.com/wp-content/uploads/2019/06/u3628509720244891551fm26gp0.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` VALUES (69, 1, '2019-06-18 14:57:44', '2019-06-18 14:57:44', '', '006rG8asly1fzte28fllej30dw0dv75c', '', 'inherit', 'open', 'closed', '', '006rg8asly1fzte28fllej30dw0dv75c', '', '', '2019-06-18 14:57:44', '2019-06-18 14:57:44', '', 0, 'https://www.chwech.com/wp-content/uploads/2019/06/006rG8asly1fzte28fllej30dw0dv75c.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` VALUES (70, 1, '2019-06-18 15:08:52', '2019-06-18 15:08:52', '', 'u=1795818014,1349924277&fm=26&gp=0', '', 'inherit', 'open', 'closed', '', 'u17958180141349924277fm26gp0', '', '', '2019-06-18 15:08:52', '2019-06-18 15:08:52', '', 0, 'https://www.chwech.com/wp-content/uploads/2019/06/u17958180141349924277fm26gp0.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` VALUES (72, 1, '2019-07-06 09:24:05', '2019-07-06 09:24:05', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n　　2.2.6.1 如果/当<code>promise</code>是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的<code>then</code>调用的次序执行。\n　　2.2.6.2 如果/当<code>promise</code>是rejected状态时，所有各自onRejected回调必须按照它们原始的<code>then</code>调用的次序执行。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n　　2.2.7.1 如果<code>onFulfilled</code>或<code>onRejected</code>返回一个值<code>x</code>，运行promise解析程序<code>[[Resolve]](promise2, x)</code>\n　　2.2.7.2 如果<code>onFulfilled</code>或<code>onRejected</code>抛出一个异常<code>e</code>，<code>promise2</code>必须是rejected状态，<code>e</code>作为它的\"reason\"。\n　　2.2.7.3 如果<code>onFulfilled</code>不是一个函数并且<code>promise1</code>是fulfilled状态，<code>promise2</code>必须是fulfilled状态，它的\"value\"和<code>promise1</code>的\"value\"一样。\n　　2.2.7.4 如果<code>onRejected</code>不是一个函数并且<code>promise1</code>是rejected状态，<code>promise2</code>必须是rejected状态，它的\"reason\"和<code>promise1</code>的\"reason\"一样。\n\n<h2>2.3 promise解决程序</h2>\n\n<h1>3.注解</h1>\n\n（未完待续）', '[翻译]Promise A+规范', '', 'publish', 'open', 'open', '', '%e7%bf%bb%e8%af%91promise-a%e8%a7%84%e8%8c%83', '', '', '2019-07-08 14:00:41', '2019-07-08 14:00:41', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```javascript\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\r\n2.2.6 在同一promise，`then`可能会被调用多次。\r\n　　2.2.6.1 如果/当`promise`是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的`then`调用的次序执行。\r\n　　2.2.6.2 如果/当`promise`是rejected状态时，所有各自onRejected回调必须按照它们原始的`then`调用的次序执行。\r\n2.2.7 then方法必须返回一个promise。[3.3]\r\n``` javascript\r\n	promise2 = promise1.then(onFulfilled, onRejected);\r\n```\r\n　　2.2.7.1 如果`onFulfilled`或`onRejected`返回一个值`x`，运行promise解析程序`[[Resolve]](promise2, x)`\r\n　　2.2.7.2 如果`onFulfilled`或`onRejected`抛出一个异常`e`，`promise2`必须是rejected状态，`e`作为它的\"reason\"。\r\n　　2.2.7.3 如果`onFulfilled`不是一个函数并且`promise1`是fulfilled状态，`promise2`必须是fulfilled状态，它的\"value\"和`promise1`的\"value\"一样。\r\n　　2.2.7.4 如果`onRejected`不是一个函数并且`promise1`是rejected状态，`promise2`必须是rejected状态，它的\"reason\"和`promise1`的\"reason\"一样。\r\n## 2.3 promise解决程序\r\n\r\n# 3.注解\r\n（未完待续）', 0, 'https://www.chwech.com/?p=72', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (73, 1, '2019-07-03 01:38:02', '2019-07-03 01:38:02', '', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-03 01:38:02', '2019-07-03 01:38:02', '', 72, 'https://www.chwech.com/2019/07/03/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (74, 1, '2019-07-03 01:49:09', '2019-07-03 01:49:09', '<h1>1.术语</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-03 01:49:09', '2019-07-03 01:49:09', '# 1.术语', 72, 'https://www.chwech.com/2019/07/03/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (75, 1, '2019-07-03 01:52:06', '2019-07-03 01:52:06', '<h1>1.术语</h1>\n\n<h1>2.要求</h1>\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-03 01:52:06', '2019-07-03 01:52:06', '# 1.术语\r\n# 2.要求\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/03/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (76, 1, '2019-07-03 01:52:45', '2019-07-03 01:52:45', '<h1>1.术语</h1>\n\n1.1\n1.2\n1.3\n1.4\n1.5\n\n<h1>2.要求</h1>\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-03 01:52:45', '2019-07-03 01:52:45', '# 1.术语\r\n1.1\r\n1.2\r\n1.3\r\n1.4\r\n1.5\r\n# 2.要求\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/03/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (77, 1, '2019-07-03 01:55:17', '2019-07-03 01:55:17', '<h1>1.术语</h1>\n\n1.1\n1.2\n1.3\n1.4\n1.5\n\n<h1>2.要求</h1>\n\n2.1 Promise状态\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-03 01:55:17', '2019-07-03 01:55:17', '# 1.术语\r\n1.1\r\n1.2\r\n1.3\r\n1.4\r\n1.5\r\n# 2.要求\r\n2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/03/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (78, 1, '2019-07-06 09:16:44', '2019-07-06 09:16:44', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，它的<code>then</code>方法行为符合本规范。\n1.2\n1.3\n1.4\n1.5\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-06 09:16:44', '2019-07-06 09:16:44', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，它的`then`方法行为符合本规范。\r\n1.2\r\n1.3\r\n1.4\r\n1.5\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 \r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/06/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (79, 1, '2019-07-06 09:19:45', '2019-07-06 09:19:45', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3\n1.4\n1.5\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-06 09:19:45', '2019-07-06 09:19:45', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3\r\n1.4\r\n1.5\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 \r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/06/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (80, 1, '2019-07-06 09:24:05', '2019-07-06 09:24:05', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）\n1.4\n1.5\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-06 09:24:05', '2019-07-06 09:24:05', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）\r\n1.4\r\n1.5\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 \r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/06/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (81, 1, '2019-07-08 13:48:48', '2019-07-08 13:48:48', '<blockquote>\n  本文是对Promise A+规则的翻译。原文链接：<a href=\"https://promisesaplus.com/\" title=\"点击访问\">点击访问</a>\n</blockquote>\n\n<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n　　2.2.6.1 如果/当<code>promise</code>是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的<code>then</code>调用的次序执行。\n　　2.2.6.2 如果/当<code>promise</code>是rejected状态时，所有各自onRejected回调必须按照它们原始的<code>then</code>调用的次序执行。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n　　2.2.7.1 如果<code>onFulfilled</code>或<code>onRejected</code>返回一个值<code>x</code>，运行promise解析程序<code>[[Resolve]](promise2, x)</code>\n　　2.2.7.2 如果<code>onFulfilled</code>或<code>onRejected</code>抛出一个异常<code>e</code>，<code>promise2</code>必须是rejected状态，<code>e</code>作为它的\"reason\"。\n　　2.2.7.3 如果<code>onFulfilled</code>不是一个函数并且<code>promise1</code>是fulfilled状态，<code>promise2</code>必须是fulfilled状态，它的\"value\"和<code>promise1</code>的\"value\"一样。\n　　2.2.7.4 如果<code>onRejected</code>不是一个函数并且<code>promise1</code>是rejected状态，<code>promise2</code>必须是rejected状态，它的\"reason\"和<code>promise1</code>的\"reason\"一样。\n\n<h2>promise解决程序</h2>\n\n<h1>3.注解</h1>\n\n（未完待续）', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-autosave-v1', '', '', '2019-07-08 13:48:48', '2019-07-08 13:48:48', '> 本文是对Promise A+规则的翻译。原文链接：[点击访问](https://promisesaplus.com/ \"点击访问\")\n# 1.术语\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\n1.4 \"exception\"是使用`throw`语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n# 2.要求\n## 2.1 Promise状态\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\n## 2.2 `then`方法\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n```javascript\n	promise.then(onFulfilled, onRejected)\n```\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\n2.2.2 如果`onFulfilled`是一个函数\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果`onRejected`是一个函数\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，`then`可能会被调用多次。\n　　2.2.6.1 如果/当`promise`是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的`then`调用的次序执行。\n　　2.2.6.2 如果/当`promise`是rejected状态时，所有各自onRejected回调必须按照它们原始的`then`调用的次序执行。\n2.2.7 then方法必须返回一个promise。[3.3]\n``` javascript\n	promise2 = promise1.then(onFulfilled, onRejected);\n```\n　　2.2.7.1 如果`onFulfilled`或`onRejected`返回一个值`x`，运行promise解析程序`[[Resolve]](promise2, x)`\n　　2.2.7.2 如果`onFulfilled`或`onRejected`抛出一个异常`e`，`promise2`必须是rejected状态，`e`作为它的\"reason\"。\n　　2.2.7.3 如果`onFulfilled`不是一个函数并且`promise1`是fulfilled状态，`promise2`必须是fulfilled状态，它的\"value\"和`promise1`的\"value\"一样。\n　　2.2.7.4 如果`onRejected`不是一个函数并且`promise1`是rejected状态，`promise2`必须是rejected状态，它的\"reason\"和`promise1`的\"reason\"一样。\n## promise解决程序\n\n# 3.注解\n（未完待续）', 72, 'https://www.chwech.com/2019/07/06/72-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (82, 1, '2019-07-06 09:29:30', '2019-07-06 09:29:30', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-06 09:29:30', '2019-07-06 09:29:30', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 \r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/06/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (83, 1, '2019-07-06 10:07:07', '2019-07-06 10:07:07', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"\">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n2.2.3 如果<code>onRejected</code>是一个函数\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-06 10:07:07', '2019-07-06 10:07:07', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n2.2.3 如果`onRejected`是一个函数\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/06/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (84, 1, '2019-07-08 08:07:59', '2019-07-08 08:07:59', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"\">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-08 08:07:59', '2019-07-08 08:07:59', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/08/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (85, 1, '2019-07-08 08:57:39', '2019-07-08 08:57:39', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n<h1>3.注解</h1>', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-08 08:57:39', '2019-07-08 08:57:39', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```javascript\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\r\n2.2.6 在同一promise，`then`可能会被调用多次。\r\n2.2.7 then方法必须返回一个promise。[3.3]\r\n``` javascript\r\n	promise2 = promise1.then(onFulfilled, onRejected);\r\n```\r\n# 3.注解', 72, 'https://www.chwech.com/2019/07/08/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (86, 1, '2019-07-08 10:00:24', '2019-07-08 10:00:24', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n　　2.2.7.1 如果<code>onFulfilled</code>或<code>onRejected</code>返回一个值<code>x</code>，运行promise解析程序<code>[[Resolve]](promise2, x)</code>\n　　2.2.7.2 如果<code>onFulfilled</code>或<code>onRejected</code>抛出一个异常<code>e</code>，<code>promise2</code>必须是rejected状态，<code>e</code>作为它的\"reason\"。\n　　2.2.7.3 如果<code>onFulfilled</code>不是一个函数并且<code>promise1</code>是fulfilled状态，<code>promise2</code>必须是fulfilled状态，它的\"value\"和<code>promise1</code>的\"value\"一样。\n　　2.2.7.4 如果<code>onRejected</code>不是一个函数并且<code>promise1</code>是rejected状态，<code>promise2</code>必须是rejected状态，它的\"reason\"和<code>promise1</code>的\"reason\"一样。\n\n<h1>3.注解</h1>\n\n（未完待续）', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-08 10:00:24', '2019-07-08 10:00:24', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```javascript\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\r\n2.2.6 在同一promise，`then`可能会被调用多次。\r\n2.2.7 then方法必须返回一个promise。[3.3]\r\n``` javascript\r\n	promise2 = promise1.then(onFulfilled, onRejected);\r\n```\r\n　　2.2.7.1 如果`onFulfilled`或`onRejected`返回一个值`x`，运行promise解析程序`[[Resolve]](promise2, x)`\r\n　　2.2.7.2 如果`onFulfilled`或`onRejected`抛出一个异常`e`，`promise2`必须是rejected状态，`e`作为它的\"reason\"。\r\n　　2.2.7.3 如果`onFulfilled`不是一个函数并且`promise1`是fulfilled状态，`promise2`必须是fulfilled状态，它的\"value\"和`promise1`的\"value\"一样。\r\n　　2.2.7.4 如果`onRejected`不是一个函数并且`promise1`是rejected状态，`promise2`必须是rejected状态，它的\"reason\"和`promise1`的\"reason\"一样。\r\n# 3.注解\r\n（未完待续）', 72, 'https://www.chwech.com/2019/07/08/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (87, 1, '2019-07-08 13:36:53', '2019-07-08 13:36:53', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n　　2.2.6.1 如果/当<code>promise</code>是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的<code>then</code>调用的次序执行。\n　　2.2.6.2 如果/当<code>promise</code>是rejected状态时，所有各自onRejected回调必须按照它们原始的<code>then</code>调用的次序执行。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n　　2.2.7.1 如果<code>onFulfilled</code>或<code>onRejected</code>返回一个值<code>x</code>，运行promise解析程序<code>[[Resolve]](promise2, x)</code>\n　　2.2.7.2 如果<code>onFulfilled</code>或<code>onRejected</code>抛出一个异常<code>e</code>，<code>promise2</code>必须是rejected状态，<code>e</code>作为它的\"reason\"。\n　　2.2.7.3 如果<code>onFulfilled</code>不是一个函数并且<code>promise1</code>是fulfilled状态，<code>promise2</code>必须是fulfilled状态，它的\"value\"和<code>promise1</code>的\"value\"一样。\n　　2.2.7.4 如果<code>onRejected</code>不是一个函数并且<code>promise1</code>是rejected状态，<code>promise2</code>必须是rejected状态，它的\"reason\"和<code>promise1</code>的\"reason\"一样。\n\n<h2>promise解决程序</h2>\n\n<h1>3.注解</h1>\n\n（未完待续）', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-08 13:36:53', '2019-07-08 13:36:53', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```javascript\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\r\n2.2.6 在同一promise，`then`可能会被调用多次。\r\n　　2.2.6.1 如果/当`promise`是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的`then`调用的次序执行。\r\n　　2.2.6.2 如果/当`promise`是rejected状态时，所有各自onRejected回调必须按照它们原始的`then`调用的次序执行。\r\n2.2.7 then方法必须返回一个promise。[3.3]\r\n``` javascript\r\n	promise2 = promise1.then(onFulfilled, onRejected);\r\n```\r\n　　2.2.7.1 如果`onFulfilled`或`onRejected`返回一个值`x`，运行promise解析程序`[[Resolve]](promise2, x)`\r\n　　2.2.7.2 如果`onFulfilled`或`onRejected`抛出一个异常`e`，`promise2`必须是rejected状态，`e`作为它的\"reason\"。\r\n　　2.2.7.3 如果`onFulfilled`不是一个函数并且`promise1`是fulfilled状态，`promise2`必须是fulfilled状态，它的\"value\"和`promise1`的\"value\"一样。\r\n　　2.2.7.4 如果`onRejected`不是一个函数并且`promise1`是rejected状态，`promise2`必须是rejected状态，它的\"reason\"和`promise1`的\"reason\"一样。\r\n## promise解决程序\r\n\r\n# 3.注解\r\n（未完待续）', 72, 'https://www.chwech.com/2019/07/08/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (88, 1, '2019-07-08 13:57:33', '2019-07-08 13:57:33', '<h1>1.术语</h1>\n\n1.1 \"promise\"是一个对象或函数，其<code>then</code>方法的行为符合本规范。\n1.2 \"thenable\"是一个定义了<code>then</code>方法的对象或函数。\n1.3 \"value\"是任何合法的JavaScript值（包括<code>undefined</code>，thenable或者promise）。\n1.4 \"exception\"是使用<code>throw</code>语句抛出的值。\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\n\n<h1>2.要求</h1>\n\n<h2>2.1 Promise状态</h2>\n\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\n2.1.1 当promise处于pending状态：\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\n2.1.2 当promise处于fulfilled状态：\n　　2.1.2.1 一定不能转化为任何其它状态。\n　　2.1.2.2 有一个一定不会改变的\"value\"。\n2.1.3 当promise处于rejected状态：\n　　2.1.3.1 一定不能转化为任何其它状态。\n　　2.1.3.2 有一个一定不会改变的\"reason\"。<br />\n此处，“一定不会改变”意思是标识不可改变（即<code>===</code>)，并不意味着深度不可改变。\n\n<h2>2.2 <code>then</code>方法</h2>\n\n一个promise必须提供<code>then</code>方法来读取它当前或最终的\"value\"或\"reason\"\n一个promise的then方法接受两个参数：\n\n<pre><code class=\"language-javascript \">    promise.then(onFulfilled, onRejected)\n</code></pre>\n\n2.2.1 <code>onFulfilled</code>和<code>onRejected</code>都是可选参数\n　　2.2.1.1 如果<code>onFulfilled</code>不是一个函数，它会被忽略\n　　2.2.1.2 如果<code>onRejected</code>不是一个函数，它会被忽略\n2.2.2 如果<code>onFulfilled</code>是一个函数\n　　2.2.2.1 当<code>promise</code>是fulfilled状态时，传入<code>promise</code>的\"value\"作为它的第一个参数调用。\n　　2.2.2.2 在<code>promise</code>是fulfilled状态之前，它一定不会被调用。\n　　2.2.2.3 它不会被调用超过一次。\n2.2.3 如果<code>onRejected</code>是一个函数\n　　2.2.3.1 当<code>promise</code>是rejected状态时，传入<code>promise</code>的\"reason\"作为它的第一个参数调用。\n　　2.2.3.2 在<code>promise</code>是rejected状态之前，它一定不会被调用。\n　　2.2.3.3 它不会被调用超过一次。\n2.2.4 <code>onFulfilled</code>和<code>onRejected</code>一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\n2.2.5 <code>onFulfilled</code>和<code>onRejected</code>必须作为函数调用。（即没有this值）[3.2]\n2.2.6 在同一promise，<code>then</code>可能会被调用多次。\n　　2.2.6.1 如果/当<code>promise</code>是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的<code>then</code>调用的次序执行。\n　　2.2.6.2 如果/当<code>promise</code>是rejected状态时，所有各自onRejected回调必须按照它们原始的<code>then</code>调用的次序执行。\n2.2.7 then方法必须返回一个promise。[3.3]\n\n<pre><code class=\"language-javascript \">    promise2 = promise1.then(onFulfilled, onRejected);\n</code></pre>\n\n　　2.2.7.1 如果<code>onFulfilled</code>或<code>onRejected</code>返回一个值<code>x</code>，运行promise解析程序<code>[[Resolve]](promise2, x)</code>\n　　2.2.7.2 如果<code>onFulfilled</code>或<code>onRejected</code>抛出一个异常<code>e</code>，<code>promise2</code>必须是rejected状态，<code>e</code>作为它的\"reason\"。\n　　2.2.7.3 如果<code>onFulfilled</code>不是一个函数并且<code>promise1</code>是fulfilled状态，<code>promise2</code>必须是fulfilled状态，它的\"value\"和<code>promise1</code>的\"value\"一样。\n　　2.2.7.4 如果<code>onRejected</code>不是一个函数并且<code>promise1</code>是rejected状态，<code>promise2</code>必须是rejected状态，它的\"reason\"和<code>promise1</code>的\"reason\"一样。\n\n<h2>2.3 promise解决程序</h2>\n\n<h1>3.注解</h1>\n\n（未完待续）', '[翻译]Promise A+规范', '', 'inherit', 'closed', 'closed', '', '72-revision-v1', '', '', '2019-07-08 13:57:33', '2019-07-08 13:57:33', '# 1.术语\r\n1.1 \"promise\"是一个对象或函数，其`then`方法的行为符合本规范。\r\n1.2 \"thenable\"是一个定义了`then`方法的对象或函数。\r\n1.3 \"value\"是任何合法的JavaScript值（包括`undefined`，thenable或者promise）。\r\n1.4 \"exception\"是使用`throw`语句抛出的值。\r\n1.5 \"reason\"是一个值，表明promise被rejected的原因。\r\n# 2.要求\r\n## 2.1 Promise状态\r\n一个promise必须是以下三种状态之一： pending、fulfilled或者rejected。\r\n2.1.1 当promise处于pending状态：\r\n　　2.1.1.1 可以转化为fulfilled或者rejected状态。\r\n2.1.2 当promise处于fulfilled状态：\r\n　　2.1.2.1 一定不能转化为任何其它状态。\r\n　　2.1.2.2 有一个一定不会改变的\"value\"。\r\n2.1.3 当promise处于rejected状态：\r\n　　2.1.3.1 一定不能转化为任何其它状态。\r\n　　2.1.3.2 有一个一定不会改变的\"reason\"。    \r\n此处，“一定不会改变”意思是标识不可改变（即`===`)，并不意味着深度不可改变。\r\n## 2.2 `then`方法\r\n一个promise必须提供`then`方法来读取它当前或最终的\"value\"或\"reason\"\r\n一个promise的then方法接受两个参数：\r\n```javascript\r\n	promise.then(onFulfilled, onRejected)\r\n```\r\n2.2.1 `onFulfilled`和`onRejected`都是可选参数\r\n　　2.2.1.1 如果`onFulfilled`不是一个函数，它会被忽略\r\n　　2.2.1.2 如果`onRejected`不是一个函数，它会被忽略\r\n2.2.2 如果`onFulfilled`是一个函数\r\n　　2.2.2.1 当`promise`是fulfilled状态时，传入`promise`的\"value\"作为它的第一个参数调用。\r\n　　2.2.2.2 在`promise`是fulfilled状态之前，它一定不会被调用。\r\n　　2.2.2.3 它不会被调用超过一次。\r\n2.2.3 如果`onRejected`是一个函数\r\n　　2.2.3.1 当`promise`是rejected状态时，传入`promise`的\"reason\"作为它的第一个参数调用。\r\n　　2.2.3.2 在`promise`是rejected状态之前，它一定不会被调用。\r\n　　2.2.3.3 它不会被调用超过一次。\r\n2.2.4 `onFulfilled`和`onRejected`一定不会调用，除非执行上下文堆栈只包含平台代码。[3.1]。\r\n2.2.5 `onFulfilled`和`onRejected`必须作为函数调用。（即没有this值）[3.2]\r\n2.2.6 在同一promise，`then`可能会被调用多次。\r\n　　2.2.6.1 如果/当`promise`是fulfilled状态时，所有各自onFulfilled回调必须按照它们原始的`then`调用的次序执行。\r\n　　2.2.6.2 如果/当`promise`是rejected状态时，所有各自onRejected回调必须按照它们原始的`then`调用的次序执行。\r\n2.2.7 then方法必须返回一个promise。[3.3]\r\n``` javascript\r\n	promise2 = promise1.then(onFulfilled, onRejected);\r\n```\r\n　　2.2.7.1 如果`onFulfilled`或`onRejected`返回一个值`x`，运行promise解析程序`[[Resolve]](promise2, x)`\r\n　　2.2.7.2 如果`onFulfilled`或`onRejected`抛出一个异常`e`，`promise2`必须是rejected状态，`e`作为它的\"reason\"。\r\n　　2.2.7.3 如果`onFulfilled`不是一个函数并且`promise1`是fulfilled状态，`promise2`必须是fulfilled状态，它的\"value\"和`promise1`的\"value\"一样。\r\n　　2.2.7.4 如果`onRejected`不是一个函数并且`promise1`是rejected状态，`promise2`必须是rejected状态，它的\"reason\"和`promise1`的\"reason\"一样。\r\n## 2.3 promise解决程序\r\n\r\n# 3.注解\r\n（未完待续）', 72, 'https://www.chwech.com/2019/07/08/72-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (90, 1, '2019-08-05 11:52:11', '2019-08-05 11:52:11', '<h1>集合的定义</h1>', '集合', '', 'draft', 'open', 'open', '', '', '', '', '2019-08-05 11:52:11', '2019-08-05 11:52:11', '# 集合的定义', 0, 'https://www.chwech.com/?p=90', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (91, 1, '2019-08-04 10:02:41', '2019-08-04 10:02:41', '<h1>集合的定义</h1>', '集合', '', 'inherit', 'closed', 'closed', '', '90-revision-v1', '', '', '2019-08-04 10:02:41', '2019-08-04 10:02:41', '# 集合的定义', 90, 'https://www.chwech.com/2019/08/04/90-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (92, 1, '2019-08-07 00:45:10', '2019-08-07 00:45:10', '<h1>什么是函数式编程</h1>\n\n<h2>纯函数</h2>', 'js函数式编程入门', '', 'draft', 'open', 'open', '', '', '', '', '2019-08-07 00:45:10', '2019-08-07 00:45:10', '# 什么是函数式编程\r\n## 纯函数', 0, 'https://www.chwech.com/?p=92', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (93, 1, '2019-08-07 00:45:10', '2019-08-07 00:45:10', '<h1>什么是函数式编程</h1>\n\n<h2>纯函数</h2>', 'js函数式编程入门', '', 'inherit', 'closed', 'closed', '', '92-revision-v1', '', '', '2019-08-07 00:45:10', '2019-08-07 00:45:10', '# 什么是函数式编程\r\n## 纯函数', 92, 'https://www.chwech.com/2019/08/07/92-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (95, 1, '2019-08-13 13:42:24', '2019-08-13 13:42:24', '', '713774d5383d726b1cb8e6b6ef48fd0d_r', '', 'inherit', 'open', 'closed', '', '713774d5383d726b1cb8e6b6ef48fd0d_r', '', '', '2019-08-13 13:42:24', '2019-08-13 13:42:24', '', 0, 'https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg', 0, 'attachment', 'image/jpeg', 0);
INSERT INTO `wp_posts` VALUES (96, 1, '2019-08-13 14:10:50', '2019-08-13 14:10:50', '<h1>契机</h1>\n\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\n\n<h1>前端如何学习</h1>\n\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\n这里推荐阅读几篇不错的文章：\n\n<a href=\"https://www.zhihu.com/question/67467219/answer/253992931\">怎样系统地自学前端？ - 冴羽的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/32314049/answer/120717594\">Web 前端怎样入门？ - Hawintion的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/19834302/answer/13108148\">零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎</a>\n\n<h1>前端技术图谱</h1>\n\n<img src=\"https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg\" alt=\"image\" />', '我是如何入行前端开发的', '', 'publish', 'open', 'open', '', '%e6%88%91%e6%98%af%e5%a6%82%e4%bd%95%e5%85%a5%e8%a1%8c%e5%89%8d%e7%ab%af%e5%bc%80%e5%8f%91%e7%9a%84', '', '', '2019-08-13 14:10:50', '2019-08-13 14:10:50', '# 契机\r\n\r\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\r\n\r\n# 前端如何学习\r\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\r\n这里推荐阅读几篇不错的文章：\r\n\r\n[怎样系统地自学前端？ - 冴羽的回答 - 知乎](https://www.zhihu.com/question/67467219/answer/253992931)\r\n\r\n[Web 前端怎样入门？ - Hawintion的回答 - 知乎](https://www.zhihu.com/question/32314049/answer/120717594)\r\n\r\n[零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎](https://www.zhihu.com/question/19834302/answer/13108148)\r\n\r\n\r\n# 前端技术图谱\r\n![image](https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg)', 0, 'https://www.chwech.com/?p=96', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (97, 1, '2019-08-13 14:08:39', '2019-08-13 14:08:39', '<h4>契机</h4>\n\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\n\n<h4>前端如何学习</h4>\n\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\n这里推荐阅读几篇不错的文章：\n\n<a href=\"https://www.zhihu.com/question/67467219/answer/253992931\">怎样系统地自学前端？ - 冴羽的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/32314049/answer/120717594\">Web 前端怎样入门？ - Hawintion的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/19834302/answer/13108148\">零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎</a>\n\n<h4>前端技术图谱</h4>\n\n<img src=\"https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg\" alt=\"image\" />', '我是如何入行前端开发的', '', 'inherit', 'closed', 'closed', '', '96-revision-v1', '', '', '2019-08-13 14:08:39', '2019-08-13 14:08:39', '#### 契机\r\n\r\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\r\n\r\n#### 前端如何学习\r\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\r\n这里推荐阅读几篇不错的文章：\r\n\r\n[怎样系统地自学前端？ - 冴羽的回答 - 知乎](https://www.zhihu.com/question/67467219/answer/253992931)\r\n\r\n[Web 前端怎样入门？ - Hawintion的回答 - 知乎](https://www.zhihu.com/question/32314049/answer/120717594)\r\n\r\n[零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎](https://www.zhihu.com/question/19834302/answer/13108148)\r\n\r\n\r\n#### 前端技术图谱\r\n![image](https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg)', 96, 'https://www.chwech.com/2019/08/13/96-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (98, 1, '2019-08-13 14:10:07', '2019-08-13 14:10:07', '<h1>契机</h1>\n\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\n\n<h1>前端如何学习</h1>\n\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\n这里推荐阅读几篇不错的文章：\n\n<a href=\"https://www.zhihu.com/question/67467219/answer/253992931\">怎样系统地自学前端？ - 冴羽的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/32314049/answer/120717594\">Web 前端怎样入门？ - Hawintion的回答 - 知乎</a>\n\n<a href=\"https://www.zhihu.com/question/19834302/answer/13108148\">零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎</a>\n\n<h1>前端技术图谱</h1>\n\n<img src=\"https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg\" alt=\"image\" />', '我是如何入行前端开发的', '', 'inherit', 'closed', 'closed', '', '96-revision-v1', '', '', '2019-08-13 14:10:07', '2019-08-13 14:10:07', '# 契机\r\n\r\n由于一些原因，最近换了一份工作。面试的时候，面试官比较喜欢问的一个问题是：你的专业是农学，为什么要做前端开发？可能面试官想了解一下我的职业规划吧。其实我没有什么规划，想做前端是因为一篇文章而已。16年2月的时候，离毕业还有几个月，我还是很迷茫，不知道将来要干什么。没有感兴趣的东西，学习成绩一般。有一天晚上吧，和平常一样逛了知乎，看到一个培训机构的文章，里面介绍了前端开发这个行业和如何学习前端开发，看完后，我突然就像抓到了救命稻草一般，我心里想，这个我也能做！于是开始漫长的自学之旅。培训班我没有考虑，一个是因为费用太高，动则过万的学费负担不起，二是我对自己的自学能力有信心。所以选择了自学。\r\n\r\n# 前端如何学习\r\n那么，要做前端要学习什么东西呢。我在知乎上做了一番调查。当年的知乎是各行各业的人才的聚集地。程序员也比较多，而我正好遇到前端行业发展最后一波高潮。各种介绍前端的文章很多。我就是他们按照说的路线学习的。\r\n这里推荐阅读几篇不错的文章：\r\n\r\n[怎样系统地自学前端？ - 冴羽的回答 - 知乎](https://www.zhihu.com/question/67467219/answer/253992931)\r\n\r\n[Web 前端怎样入门？ - Hawintion的回答 - 知乎](https://www.zhihu.com/question/32314049/answer/120717594)\r\n\r\n[零基础的前端开发初学者应如何系统地学习？ - 张帅的回答 - 知乎](https://www.zhihu.com/question/19834302/answer/13108148)\r\n\r\n\r\n# 前端技术图谱\r\n![image](https://www.chwech.com/wp-content/uploads/2019/08/713774d5383d726b1cb8e6b6ef48fd0d_r.jpg)', 96, 'https://www.chwech.com/2019/08/13/96-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (99, 1, '2019-09-06 03:08:02', '2019-09-06 03:08:02', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件和目录路径。例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'publish', 'open', 'open', '', 'node-glob%e5%85%a5%e9%97%a8', '', '', '2019-09-06 03:24:41', '2019-09-06 03:24:41', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件和目录路径。例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\r\n\r\n\r\n', 0, 'https://www.chwech.com/?p=99', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (100, 1, '2019-09-06 02:26:35', '2019-09-06 02:26:35', '', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 02:26:35', '2019-09-06 02:26:35', '', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (102, 1, '2019-09-06 02:39:41', '2019-09-06 02:39:41', 'glob是一种匹配模式，例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 02:39:41', '2019-09-06 02:39:41', 'glob是一种匹配模式，例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (103, 1, '2019-09-06 02:53:20', '2019-09-06 02:53:20', 'glob是一种匹配模式，例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)开头', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 02:53:20', '2019-09-06 02:53:20', 'glob是一种匹配模式，例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)开头\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (104, 1, '2019-09-06 03:08:02', '2019-09-06 03:08:02', 'glob是一种匹配模式，例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 03:08:02', '2019-09-06 03:08:02', 'glob是一种匹配模式，例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\r\n\r\n\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (105, 1, '2019-09-06 03:21:57', '2019-09-06 03:21:57', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件或目录路径。例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-autosave-v1', '', '', '2019-09-06 03:21:57', '2019-09-06 03:21:57', '\nglob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件或目录路径。例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\n\n以下字符在路径中有特殊的意义:\n`*`匹配一个路径中一个或多个字符。\n`?`匹配一个字符。\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n### 点号(dots)\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\n\n\n', 99, 'https://www.chwech.com/2019/09/06/99-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (106, 1, '2019-09-06 03:22:06', '2019-09-06 03:22:06', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件或目录路径。例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 03:22:06', '2019-09-06 03:22:06', '\r\nglob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件或目录路径。例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\r\n\r\n\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (107, 1, '2019-09-06 03:23:08', '2019-09-06 03:23:08', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件路径。例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 03:23:08', '2019-09-06 03:23:08', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件路径。例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\r\n\r\n\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (108, 1, '2019-09-06 03:24:41', '2019-09-06 03:24:41', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件和目录路径。例如我们在命令行里输入<code>ls *.js</code>，在.gitignore写的规则<code>build/*</code>。\n\n以下字符在路径中有特殊的意义:\n<code>*</code>匹配一个路径中一个或多个字符。\n<code>?</code>匹配一个字符。\n<code>[...]</code>匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是<code>!</code>或<code>^</code>，表示取反，匹配不在范围内的字符。\n<code>!(pattern|pattern|pattern)</code> 匹配不适合指定的模式的字符\n<code>?(pattern|pattern|pattern)</code> 匹配0个或1个符合指定模式的字符\n<code>+(pattern|pattern|pattern)</code> 匹配1个或多个符合指定模式的字符\n<code>*(a|b|c)</code> 匹配0个或多个符合指定模式的字符\n<code>@(pattern|pat*|pat?erN)</code> 精确匹配指定的模式的字符\n<code>**</code> 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\n\n<h3>点号(dots)</h3>\n\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式<code>a/.*/c</code>会匹配文件<code>a/.b/c</code>， 但是模式<code>a/*/c</code>不会匹配。因为<code>*</code>不是以点号开始。你可以传入选项<code>dot: true</code>使glob处理点号像正常字符一样。', 'node glob入门', '', 'inherit', 'closed', 'closed', '', '99-revision-v1', '', '', '2019-09-06 03:24:41', '2019-09-06 03:24:41', 'glob是一种匹配模式，最早出现在类unix命令行中，用以匹配文件和目录路径。例如我们在命令行里输入`ls *.js`，在.gitignore写的规则`build/*`。\r\n\r\n以下字符在路径中有特殊的意义:\r\n`*`匹配一个路径中一个或多个字符。\r\n`?`匹配一个字符。\r\n`[...]`匹配中括号里面指定范围的字符，类似于正则表达式范围。如果范围的第一个字符是`!`或`^`，表示取反，匹配不在范围内的字符。\r\n`!(pattern|pattern|pattern)` 匹配不适合指定的模式的字符\r\n`?(pattern|pattern|pattern)` 匹配0个或1个符合指定模式的字符\r\n`+(pattern|pattern|pattern)` 匹配1个或多个符合指定模式的字符\r\n`*(a|b|c)` 匹配0个或多个符合指定模式的字符\r\n`@(pattern|pat*|pat?erN)` 精确匹配指定的模式的字符\r\n`**` 两个星单独出现在路径的一部分，表示匹配0个或多个目录，包括匹配子目录。\r\n\r\n### 点号(dots)\r\n如果一个文件或目录的路径部分是以点号(.)作为第一个字符, 那么它不匹配任何模式除非模式对应的路径部分也是以点号(.)作为第一个字符。例如模式`a/.*/c`会匹配文件`a/.b/c`， 但是模式`a/*/c`不会匹配。因为`*`不是以点号开始。你可以传入选项`dot: true`使glob处理点号像正常字符一样。\r\n\r\n\r\n', 99, 'https://www.chwech.com/2019/09/06/99-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (110, 1, '2019-10-14 02:37:18', '2019-10-14 02:37:18', '<h2>通用格式规则</h2>\n\n<h3>缩进</h3>\n\n使用两个空格为一个缩进级别，不要使用tab或者混合tab和空格来缩进。<br />\n注：由于我们使用习惯是按tab键进行缩进，所以编辑器要设置按tab键时填充的空格。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;ul&gt;\n  &lt;li&gt;Fantastic\n  &lt;li&gt;Great\n&lt;/ul&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">.example {\n  color: blue;\n}\n</code></pre>\n\n<h3>大写</h3>\n\n仅使用小写。<br />\n所有代码使用小写，适用于html元素名，属性和属性值（除了text/CDATA)，css选择器，属性和属性值。html css属性值为字符串允许大写\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 --&gt;\n&lt;A HREF=\"/\"&gt;Home&lt;/A&gt;\n\n&lt;!-- 推荐 --&gt;\n&lt;img src=\"google.png\" alt=\"Google\"&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">/* 不推荐 */\ncolor: #E5E5E5;\n\n/* 推荐 */\ncolor: #e5e5e5;\n</code></pre>\n\n<h3>尾随空格</h3>\n\n去掉尾随空格\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 (_代表有一个空格) --&gt;\n&lt;p&gt;What?_\n\n&lt;!-- 推荐 --&gt;\n&lt;p&gt;Yes please.\n</code></pre>\n\n<h2>HTML格式规则</h2>\n\n<h3>通用格式化</h3>\n\n为每个块，列表或表格使用新行，缩进每个子元素。将列表项li放在新行\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;blockquote&gt;\n  &lt;p&gt;&lt;em&gt;Space&lt;/em&gt;, the final frontier.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Moe\n  &lt;li&gt;Larry\n  &lt;li&gt;Curly\n&lt;/ul&gt;\n\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th scope=\"col\"&gt;Income\n      &lt;th scope=\"col\"&gt;Taxes\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;$ 5.00\n      &lt;td&gt;$ 4.50\n&lt;/table&gt;\n</code></pre>\n\n<h3>html引号</h3>\n\n使用双引号包裹属性值。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 --&gt;\n&lt;a class=\'maia-button maia-button-secondary\'&gt;Sign in&lt;/a&gt;\n\n&lt;!-- 推荐 --&gt;\n&lt;a class=\"maia-button maia-button-secondary\"&gt;Sign in&lt;/a&gt;\n</code></pre>\n\n<h2>CSS格式规则</h2>\n\n<h3>块内容缩进</h3>\n\n缩进所有块内容。\n缩进所有块内容，即规则内的规则以及声明，以反映层次结构并增进理解。\n\n<pre><code class=\"language-css \">@media screen, projection {\n\n  html {\n    background: #fff;\n    color: #444;\n  }\n\n}\n</code></pre>\n\n<h3>声明结尾</h3>\n\n出于一致性和可扩展性的原因，每个声明后用分号结束。\n\n<pre><code class=\"language-css \">/* 不推荐 */\n.test {\n  display: block;\n  height: 100px\n}\n\n/* 推荐 */\n.test {\n  display: block;\n  height: 100px;\n}\n</code></pre>\n\n<h3>属性名结尾</h3>\n\n在属性名冒号后使用一个空格分隔属性值。\n\n<pre><code class=\"language-css \">/* 不推荐 */\nh3 {\n  font-weight:bold;\n}\n\n/* 推荐 */\nh3 {\n  font-weight: bold;\n}\n</code></pre>\n\n<h3>声明块分隔</h3>\n\n在最后一个选择器和声明块之间使用空格。\n在最后一个选择器和开始声明块的开头括号之间始终使用单个空格。\n开头括号应与给定规则中的最后一个选择器在同一行上。\n\n<pre><code class=\"language-css \">/* 不推荐: 没有空格 */\n#video{\n  margin-top: 1em;\n}\n\n/* 不推荐: 括号不需要另起一行 */\n#video\n{\n  margin-top: 1em;\n}\n\n/* 推荐 */\n#video {\n  margin-top: 1em;\n}\n</code></pre>\n\n<h3>分组选择器</h3>\n\n分组选择器为每个选择器另起新行。\n\n<pre><code class=\"language-css \">/* 不推荐 */\na:focus, a:active {\n  position: relative; top: 1px;\n}\n\n/* 推荐 */\nh1,\nh2,\nh3 {\n  font-weight: normal;\n  line-height: 1.2;\n}\n</code></pre>\n\n<h3>规则分隔</h3>\n\n规则集之间使用空行分隔\n\n<pre><code class=\"language-css \">html {\n  background: #fff;\n}\n\nbody {\n  margin: auto;\n  width: 50%;\n}\n</code></pre>', 'HTML和CSS代码格式指南', '', 'publish', 'open', 'open', '', 'html%e5%92%8ccss%e4%bb%a3%e7%a0%81%e6%a0%bc%e5%bc%8f%e6%8c%87%e5%8d%97', '', '', '2019-10-14 02:37:18', '2019-10-14 02:37:18', '## 通用格式规则\r\n### 缩进\r\n使用两个空格为一个缩进级别，不要使用tab或者混合tab和空格来缩进。  \r\n注：由于我们使用习惯是按tab键进行缩进，所以编辑器要设置按tab键时填充的空格。  \r\n``` html\r\n&lt;ul&gt;\r\n  &lt;li&gt;Fantastic\r\n  &lt;li&gt;Great\r\n&lt;/ul&gt;\r\n```\r\n``` css\r\n.example {\r\n  color: blue;\r\n}\r\n```\r\n### 大写\r\n仅使用小写。  \r\n所有代码使用小写，适用于html元素名，属性和属性值（除了text/CDATA)，css选择器，属性和属性值。html css属性值为字符串允许大写\r\n``` html\r\n&lt;!-- 不推荐 --&gt;\r\n&lt;A HREF=&quot;/&quot;&gt;Home&lt;/A&gt;\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;img src=&quot;google.png&quot; alt=&quot;Google&quot;&gt;\r\n```\r\n``` css\r\n/* 不推荐 */\r\ncolor: #E5E5E5;\r\n\r\n/* 推荐 */\r\ncolor: #e5e5e5;\r\n```\r\n### 尾随空格\r\n去掉尾随空格\r\n``` html\r\n&lt;!-- 不推荐 (_代表有一个空格) --&gt;\r\n&lt;p&gt;What?_\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;p&gt;Yes please.\r\n```\r\n\r\n## HTML格式规则\r\n### 通用格式化\r\n为每个块，列表或表格使用新行，缩进每个子元素。将列表项li放在新行\r\n``` html\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;&lt;em&gt;Space&lt;/em&gt;, the final frontier.&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;ul&gt;\r\n  &lt;li&gt;Moe\r\n  &lt;li&gt;Larry\r\n  &lt;li&gt;Curly\r\n&lt;/ul&gt;\r\n\r\n&lt;table&gt;\r\n  &lt;thead&gt;\r\n    &lt;tr&gt;\r\n      &lt;th scope=&quot;col&quot;&gt;Income\r\n      &lt;th scope=&quot;col&quot;&gt;Taxes\r\n  &lt;tbody&gt;\r\n    &lt;tr&gt;\r\n      &lt;td&gt;$ 5.00\r\n      &lt;td&gt;$ 4.50\r\n&lt;/table&gt;\r\n```\r\n### html引号\r\n使用双引号包裹属性值。\r\n``` html\r\n&lt;!-- 不推荐 --&gt;\r\n&lt;a class=&#039;maia-button maia-button-secondary&#039;&gt;Sign in&lt;/a&gt;\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;a class=&quot;maia-button maia-button-secondary&quot;&gt;Sign in&lt;/a&gt;\r\n```\r\n\r\n## CSS格式规则\r\n### 块内容缩进\r\n缩进所有块内容。\r\n缩进所有块内容，即规则内的规则以及声明，以反映层次结构并增进理解。\r\n``` css\r\n@media screen, projection {\r\n\r\n  html {\r\n    background: #fff;\r\n    color: #444;\r\n  }\r\n\r\n}\r\n```\r\n\r\n### 声明结尾\r\n出于一致性和可扩展性的原因，每个声明后用分号结束。\r\n``` css\r\n/* 不推荐 */\r\n.test {\r\n  display: block;\r\n  height: 100px\r\n}\r\n\r\n/* 推荐 */\r\n.test {\r\n  display: block;\r\n  height: 100px;\r\n}\r\n```\r\n\r\n### 属性名结尾\r\n在属性名冒号后使用一个空格分隔属性值。\r\n``` css\r\n/* 不推荐 */\r\nh3 {\r\n  font-weight:bold;\r\n}\r\n\r\n/* 推荐 */\r\nh3 {\r\n  font-weight: bold;\r\n}\r\n```\r\n\r\n### 声明块分隔\r\n在最后一个选择器和声明块之间使用空格。\r\n在最后一个选择器和开始声明块的开头括号之间始终使用单个空格。\r\n开头括号应与给定规则中的最后一个选择器在同一行上。\r\n``` css\r\n/* 不推荐: 没有空格 */\r\n#video{\r\n  margin-top: 1em;\r\n}\r\n\r\n/* 不推荐: 括号不需要另起一行 */\r\n#video\r\n{\r\n  margin-top: 1em;\r\n}\r\n\r\n/* 推荐 */\r\n#video {\r\n  margin-top: 1em;\r\n}\r\n```\r\n\r\n### 分组选择器\r\n分组选择器为每个选择器另起新行。\r\n``` css\r\n/* 不推荐 */\r\na:focus, a:active {\r\n  position: relative; top: 1px;\r\n}\r\n\r\n/* 推荐 */\r\nh1,\r\nh2,\r\nh3 {\r\n  font-weight: normal;\r\n  line-height: 1.2;\r\n}\r\n```\r\n\r\n### 规则分隔\r\n规则集之间使用空行分隔\r\n``` css\r\nhtml {\r\n  background: #fff;\r\n}\r\n\r\nbody {\r\n  margin: auto;\r\n  width: 50%;\r\n}\r\n```', 0, 'https://www.chwech.com/?p=110', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (111, 1, '2019-10-14 02:36:47', '2019-10-14 02:36:47', '<h2>通用格式规则</h2>\n\n<h3>缩进</h3>\n\n使用两个空格为一个缩进级别，不要使用tab或者混合tab和空格来缩进。<br />\n注：由于我们使用习惯是按tab键进行缩进，所以编辑器要设置按tab键时填充的空格。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;ul&gt;\n  &lt;li&gt;Fantastic\n  &lt;li&gt;Great\n&lt;/ul&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">.example {\n  color: blue;\n}\n</code></pre>\n\n<h3>大写</h3>\n\n仅使用小写。<br />\n所有代码使用小写，适用于html元素名，属性和属性值（除了text/CDATA)，css选择器，属性和属性值。html css属性值为字符串允许大写\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 --&gt;\n&lt;A HREF=\"/\"&gt;Home&lt;/A&gt;\n\n&lt;!-- 推荐 --&gt;\n&lt;img src=\"google.png\" alt=\"Google\"&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">/* 不推荐 */\ncolor: #E5E5E5;\n\n/* 推荐 */\ncolor: #e5e5e5;\n</code></pre>\n\n<h3>尾随空格</h3>\n\n去掉尾随空格\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 (_代表有一个空格) --&gt;\n&lt;p&gt;What?_\n\n&lt;!-- 推荐 --&gt;\n&lt;p&gt;Yes please.\n</code></pre>\n\n<h2>HTML格式规则</h2>\n\n<h3>通用格式化</h3>\n\n为每个块，列表或表格使用新行，缩进每个子元素。将列表项li放在新行\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;blockquote&gt;\n  &lt;p&gt;&lt;em&gt;Space&lt;/em&gt;, the final frontier.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Moe\n  &lt;li&gt;Larry\n  &lt;li&gt;Curly\n&lt;/ul&gt;\n\n&lt;table&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th scope=\"col\"&gt;Income\n      &lt;th scope=\"col\"&gt;Taxes\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;$ 5.00\n      &lt;td&gt;$ 4.50\n&lt;/table&gt;\n</code></pre>\n\n<h3>html引号</h3>\n\n使用双引号包裹属性值。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;!-- 不推荐 --&gt;\n&lt;a class=\'maia-button maia-button-secondary\'&gt;Sign in&lt;/a&gt;\n\n&lt;!-- 推荐 --&gt;\n&lt;a class=\"maia-button maia-button-secondary\"&gt;Sign in&lt;/a&gt;\n</code></pre>\n\n<h2>CSS格式规则</h2>\n\n<h3>块内容缩进</h3>\n\n缩进所有块内容。\n缩进所有块内容，即规则内的规则以及声明，以反映层次结构并增进理解。\n\n<pre><code class=\"language-css \">@media screen, projection {\n\n  html {\n    background: #fff;\n    color: #444;\n  }\n\n}\n</code></pre>\n\n<h3>声明结尾</h3>\n\n出于一致性和可扩展性的原因，每个声明后用分号结束。\n\n<pre><code class=\"language-css \">/* 不推荐 */\n.test {\n  display: block;\n  height: 100px\n}\n\n/* 推荐 */\n.test {\n  display: block;\n  height: 100px;\n}\n</code></pre>\n\n<h3>属性名结尾</h3>\n\n在属性名冒号后使用一个空格分隔属性值。\n\n<pre><code class=\"language-css \">/* 不推荐 */\nh3 {\n  font-weight:bold;\n}\n\n/* 推荐 */\nh3 {\n  font-weight: bold;\n}\n</code></pre>\n\n<h3>声明块分隔</h3>\n\n在最后一个选择器和声明块之间使用空格。\n在最后一个选择器和开始声明块的开头括号之间始终使用单个空格。\n开头括号应与给定规则中的最后一个选择器在同一行上。\n\n<pre><code class=\"language-css \">/* 不推荐: 没有空格 */\n#video{\n  margin-top: 1em;\n}\n\n/* 不推荐: 括号不需要另起一行 */\n#video\n{\n  margin-top: 1em;\n}\n\n/* 推荐 */\n#video {\n  margin-top: 1em;\n}\n</code></pre>\n\n<h3>分组选择器</h3>\n\n分组选择器为每个选择器另起新行。\n\n<pre><code class=\"language-css \">/* 不推荐 */\na:focus, a:active {\n  position: relative; top: 1px;\n}\n\n/* 推荐 */\nh1,\nh2,\nh3 {\n  font-weight: normal;\n  line-height: 1.2;\n}\n</code></pre>\n\n<h3>规则分隔</h3>\n\n规则集之间使用空行分隔\n\n<pre><code class=\"language-css \">html {\n  background: #fff;\n}\n\nbody {\n  margin: auto;\n  width: 50%;\n}\n</code></pre>', 'HTML和CSS代码格式指南', '', 'inherit', 'closed', 'closed', '', '110-revision-v1', '', '', '2019-10-14 02:36:47', '2019-10-14 02:36:47', '## 通用格式规则\r\n### 缩进\r\n使用两个空格为一个缩进级别，不要使用tab或者混合tab和空格来缩进。  \r\n注：由于我们使用习惯是按tab键进行缩进，所以编辑器要设置按tab键时填充的空格。  \r\n``` html\r\n&lt;ul&gt;\r\n  &lt;li&gt;Fantastic\r\n  &lt;li&gt;Great\r\n&lt;/ul&gt;\r\n```\r\n``` css\r\n.example {\r\n  color: blue;\r\n}\r\n```\r\n### 大写\r\n仅使用小写。  \r\n所有代码使用小写，适用于html元素名，属性和属性值（除了text/CDATA)，css选择器，属性和属性值。html css属性值为字符串允许大写\r\n``` html\r\n&lt;!-- 不推荐 --&gt;\r\n&lt;A HREF=&quot;/&quot;&gt;Home&lt;/A&gt;\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;img src=&quot;google.png&quot; alt=&quot;Google&quot;&gt;\r\n```\r\n``` css\r\n/* 不推荐 */\r\ncolor: #E5E5E5;\r\n\r\n/* 推荐 */\r\ncolor: #e5e5e5;\r\n```\r\n### 尾随空格\r\n去掉尾随空格\r\n``` html\r\n&lt;!-- 不推荐 (_代表有一个空格) --&gt;\r\n&lt;p&gt;What?_\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;p&gt;Yes please.\r\n```\r\n\r\n## HTML格式规则\r\n### 通用格式化\r\n为每个块，列表或表格使用新行，缩进每个子元素。将列表项li放在新行\r\n``` html\r\n&lt;blockquote&gt;\r\n  &lt;p&gt;&lt;em&gt;Space&lt;/em&gt;, the final frontier.&lt;/p&gt;\r\n&lt;/blockquote&gt;\r\n\r\n&lt;ul&gt;\r\n  &lt;li&gt;Moe\r\n  &lt;li&gt;Larry\r\n  &lt;li&gt;Curly\r\n&lt;/ul&gt;\r\n\r\n&lt;table&gt;\r\n  &lt;thead&gt;\r\n    &lt;tr&gt;\r\n      &lt;th scope=&quot;col&quot;&gt;Income\r\n      &lt;th scope=&quot;col&quot;&gt;Taxes\r\n  &lt;tbody&gt;\r\n    &lt;tr&gt;\r\n      &lt;td&gt;$ 5.00\r\n      &lt;td&gt;$ 4.50\r\n&lt;/table&gt;\r\n```\r\n### html引号\r\n使用双引号包裹属性值。\r\n``` html\r\n&lt;!-- 不推荐 --&gt;\r\n&lt;a class=&#039;maia-button maia-button-secondary&#039;&gt;Sign in&lt;/a&gt;\r\n\r\n&lt;!-- 推荐 --&gt;\r\n&lt;a class=&quot;maia-button maia-button-secondary&quot;&gt;Sign in&lt;/a&gt;\r\n```\r\n\r\n## CSS格式规则\r\n### 块内容缩进\r\n缩进所有块内容。\r\n缩进所有块内容，即规则内的规则以及声明，以反映层次结构并增进理解。\r\n``` css\r\n@media screen, projection {\r\n\r\n  html {\r\n    background: #fff;\r\n    color: #444;\r\n  }\r\n\r\n}\r\n```\r\n\r\n### 声明结尾\r\n出于一致性和可扩展性的原因，每个声明后用分号结束。\r\n``` css\r\n/* 不推荐 */\r\n.test {\r\n  display: block;\r\n  height: 100px\r\n}\r\n\r\n/* 推荐 */\r\n.test {\r\n  display: block;\r\n  height: 100px;\r\n}\r\n```\r\n\r\n### 属性名结尾\r\n在属性名冒号后使用一个空格分隔属性值。\r\n``` css\r\n/* 不推荐 */\r\nh3 {\r\n  font-weight:bold;\r\n}\r\n\r\n/* 推荐 */\r\nh3 {\r\n  font-weight: bold;\r\n}\r\n```\r\n\r\n### 声明块分隔\r\n在最后一个选择器和声明块之间使用空格。\r\n在最后一个选择器和开始声明块的开头括号之间始终使用单个空格。\r\n开头括号应与给定规则中的最后一个选择器在同一行上。\r\n``` css\r\n/* 不推荐: 没有空格 */\r\n#video{\r\n  margin-top: 1em;\r\n}\r\n\r\n/* 不推荐: 括号不需要另起一行 */\r\n#video\r\n{\r\n  margin-top: 1em;\r\n}\r\n\r\n/* 推荐 */\r\n#video {\r\n  margin-top: 1em;\r\n}\r\n```\r\n\r\n### 分组选择器\r\n分组选择器为每个选择器另起新行。\r\n``` css\r\n/* 不推荐 */\r\na:focus, a:active {\r\n  position: relative; top: 1px;\r\n}\r\n\r\n/* 推荐 */\r\nh1,\r\nh2,\r\nh3 {\r\n  font-weight: normal;\r\n  line-height: 1.2;\r\n}\r\n```\r\n\r\n### 规则分隔\r\n规则集之间使用空行分隔\r\n``` css\r\nhtml {\r\n  background: #fff;\r\n}\r\n\r\nbody {\r\n  margin: auto;\r\n  width: 50%;\r\n}\r\n```', 110, 'https://www.chwech.com/2019/10/14/110-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (113, 1, '2019-11-26 14:22:27', '2019-11-26 14:22:27', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\n\n问题复现：\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\"&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">.content {\n    height: 100px; /* 固定高度 */\n    overflow: scroll; /* 超出滚动 */\n}\n</code></pre>\n\n解决方案： 在需要滑动的内容区加上touchmove事件并阻止事件冒泡。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\" @touchmove.stop&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n为什么这样能解决？知道的同学请告诉我。', '[笔记]使用cube-ui popup弹窗，内容过多鼠标能滚动，触摸不能滚动的问题解决', '', 'publish', 'open', 'open', '', '%e7%ac%94%e8%ae%b0%e4%bd%bf%e7%94%a8cube-ui-popup%e5%bc%b9%e7%aa%97%ef%bc%8c%e5%86%85%e5%ae%b9%e8%bf%87%e5%a4%9a%e9%bc%a0%e6%a0%87%e8%83%bd%e6%bb%9a%e5%8a%a8%ef%bc%8c%e8%a7%a6%e6%91%b8%e4%b8%8d', '', '', '2019-11-26 14:22:27', '2019-11-26 14:22:27', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\r\n\r\n问题复现：\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot;&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n``` css\r\n.content {\r\n	height: 100px; /* 固定高度 */\r\n	overflow: scroll; /* 超出滚动 */\r\n}\r\n```\r\n\r\n解决方案： 在需要滑动的内容区加上touchmove事件并阻止事件冒泡。\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot; @touchmove.stop&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n\r\n为什么这样能解决？知道的同学请告诉我。\r\n\r\n\r\n', 0, 'https://www.chwech.com/?p=113', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (114, 1, '2019-11-26 14:21:52', '2019-11-26 14:21:52', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\n\n问题复现：\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\"&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">.content {\n    height: 100px; /* 固定高度 */\n    overflow: scroll; /* 超出滚动 */\n}\n</code></pre>\n\n解决方案： 在需要滑动的内容区加上touchmove并阻止事件冒泡。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\" @touchmove.stop&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n为什么这样能解决？知道的同学请告诉我。', '[笔记]使用cube-ui popup弹窗，内容过多鼠标能滚动，触摸不能滚动的问题解决', '', 'inherit', 'closed', 'closed', '', '113-revision-v1', '', '', '2019-11-26 14:21:52', '2019-11-26 14:21:52', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\r\n\r\n问题复现：\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot;&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n``` css\r\n.content {\r\n	height: 100px; /* 固定高度 */\r\n	overflow: scroll; /* 超出滚动 */\r\n}\r\n```\r\n\r\n解决方案： 在需要滑动的内容区加上touchmove并阻止事件冒泡。\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot; @touchmove.stop&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n\r\n为什么这样能解决？知道的同学请告诉我。\r\n\r\n\r\n', 113, 'https://www.chwech.com/2019/11/26/113-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (115, 1, '2019-11-26 14:22:27', '2019-11-26 14:22:27', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\n\n问题复现：\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\"&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n<pre><code class=\"language-css \">.content {\n    height: 100px; /* 固定高度 */\n    overflow: scroll; /* 超出滚动 */\n}\n</code></pre>\n\n解决方案： 在需要滑动的内容区加上touchmove事件并阻止事件冒泡。\n\n<pre data-language=HTML><code class=\"language-markup \">&lt;cube-popup&gt;\n    &lt;div class=\"content\" @touchmove.stop&gt;\n     ...\n    &lt;/div&gt;\n&lt;/cube-popup&gt;\n</code></pre>\n\n为什么这样能解决？知道的同学请告诉我。', '[笔记]使用cube-ui popup弹窗，内容过多鼠标能滚动，触摸不能滚动的问题解决', '', 'inherit', 'closed', 'closed', '', '113-revision-v1', '', '', '2019-11-26 14:22:27', '2019-11-26 14:22:27', '使用cube-ui popup弹窗时，发现移动端内容过多触摸不能滚动的问题，使用chrome调试发现使用鼠标滚轮能滚动，百思不得其解。\r\n\r\n问题复现：\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot;&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n``` css\r\n.content {\r\n	height: 100px; /* 固定高度 */\r\n	overflow: scroll; /* 超出滚动 */\r\n}\r\n```\r\n\r\n解决方案： 在需要滑动的内容区加上touchmove事件并阻止事件冒泡。\r\n``` html\r\n&lt;cube-popup&gt;\r\n	&lt;div class=&quot;content&quot; @touchmove.stop&gt;\r\n	 ...\r\n	&lt;/div&gt;\r\n&lt;/cube-popup&gt;\r\n```\r\n\r\n为什么这样能解决？知道的同学请告诉我。\r\n\r\n\r\n', 113, 'https://www.chwech.com/2019/11/26/113-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (117, 1, '2019-12-24 15:10:56', '2019-12-24 15:10:56', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>\n\nexample:<br />\n<a href=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" title=\"引入小程序组件的目录结构\"><img src=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" alt=\"引入小程序组件的目录结构\" title=\"引入小程序组件的目录结构\" /></a>\n\n<pre><code class=\"language-json \">\"globalStyle\": {\n    \"usingComponents\": {\n        \"van-button\": \"/wxcomponents/vant-weapp/button/index\"\n    }\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>uni不支持使用Vue.use注册Vue全局组件<br />\nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。</li>\n<li>在组件定义标签上不能用v-show</li>\n</ol>\n\n<pre><code class=\"\">    // 在组件定义的标签上使用v-show没作用\n    &lt;my-component v-show=\"flag\"&gt;&lt;/my-component&gt;\n\n    // 在普通标签使用没有问题\n    &lt;div v-show=\"flag\"&gt;条件编译v-show&lt;/div&gt;\n</code></pre>\n\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'publish', 'open', 'open', '', '%e5%a1%ab%e5%9d%91-%e4%bd%bf%e7%94%a8uni-app%e5%bc%80%e5%8f%91%e5%b0%8f%e7%a8%8b%e5%ba%8f%e8%b8%a9%e5%9d%91%ef%bc%8c%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad', '', '', '2020-01-03 07:14:55', '2020-01-03 07:14:55', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \r\n		1. 小程序组件必需放在wxcomponents目录里的。\r\n		2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n\r\nexample:  \r\n[![引入小程序组件的目录结构](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")\r\n``` json\r\n&quot;globalStyle&quot;: {\r\n	&quot;usingComponents&quot;: {\r\n		&quot;van-button&quot;: &quot;/wxcomponents/vant-weapp/button/index&quot;\r\n	}\r\n}\r\n```\r\n2. uni不支持使用Vue.use注册Vue全局组件  \r\nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。\r\n3. 在组件定义标签上不能用v-show\r\n```\r\n	// 在组件定义的标签上使用v-show没作用\r\n	&lt;my-component v-show=&quot;flag&quot;&gt;&lt;/my-component&gt;\r\n	\r\n	// 在普通标签使用没有问题\r\n	&lt;div v-show=&quot;flag&quot;&gt;条件编译v-show&lt;/div&gt;\r\n```\r\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', 0, 'https://www.chwech.com/?p=117', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (118, 1, '2019-12-24 15:04:40', '2019-12-24 15:04:40', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： 1. 小程序组件必需放在wxcomponents目录里的。2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-revision-v1', '', '', '2019-12-24 15:04:40', '2019-12-24 15:04:40', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： 1. 小程序组件必需放在wxcomponents目录里的。2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n', 117, 'https://www.chwech.com/2019/12/24/117-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (119, 1, '2019-12-24 15:05:16', '2019-12-24 15:05:16', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-revision-v1', '', '', '2019-12-24 15:05:16', '2019-12-24 15:05:16', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \r\n		1. 小程序组件必需放在wxcomponents目录里的。\r\n		2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n', 117, 'https://www.chwech.com/2019/12/24/117-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (120, 1, '2019-12-24 15:09:16', '2019-12-24 15:09:16', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>\n\nexample:<br />\n<a href=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" title=\"引入小程序组件的目录结构\"><img src=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" alt=\"引入小程序组件的目录结构\" title=\"引入小程序组件的目录结构\" /></a>\n\n<pre><code class=\"language-json \">\"globalStyle\": {\n    \"usingComponents\": {\n        \"van-button\": \"/wxcomponents/vant-weapp/button/index\"\n    }\n}\n</code></pre>', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-revision-v1', '', '', '2019-12-24 15:09:16', '2019-12-24 15:09:16', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \r\n		1. 小程序组件必需放在wxcomponents目录里的。\r\n		2. 当需要在 vue 组件中使用小程序组件时，引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n\r\nexample:  \r\n[![引入小程序组件的目录结构](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")\r\n``` json\r\n&quot;globalStyle&quot;: {\r\n	&quot;usingComponents&quot;: {\r\n		&quot;van-button&quot;: &quot;/wxcomponents/vant-weapp/button/index&quot;\r\n	}\r\n}\r\n```', 117, 'https://www.chwech.com/2019/12/24/117-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (121, 1, '2019-12-24 15:10:30', '2019-12-24 15:10:30', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>\n\nexample:<br />\n<a href=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" title=\"引入小程序组件的目录结构\"><img src=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" alt=\"引入小程序组件的目录结构\" title=\"引入小程序组件的目录结构\" /></a>\n\n<pre><code class=\"language-json \">\"globalStyle\": {\n    \"usingComponents\": {\n        \"van-button\": \"/wxcomponents/vant-weapp/button/index\"\n    }\n}\n</code></pre>', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-revision-v1', '', '', '2019-12-24 15:10:30', '2019-12-24 15:10:30', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \r\n		1. 小程序组件必需放在wxcomponents目录里的。\r\n		2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n\r\nexample:  \r\n[![引入小程序组件的目录结构](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")\r\n``` json\r\n&quot;globalStyle&quot;: {\r\n	&quot;usingComponents&quot;: {\r\n		&quot;van-button&quot;: &quot;/wxcomponents/vant-weapp/button/index&quot;\r\n	}\r\n}\r\n```', 117, 'https://www.chwech.com/2019/12/24/117-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (123, 1, '2020-01-03 07:12:59', '2020-01-03 07:12:59', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>\n\nexample:<br />\n<a href=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" title=\"引入小程序组件的目录结构\"><img src=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" alt=\"引入小程序组件的目录结构\" title=\"引入小程序组件的目录结构\" /></a>\n\n<pre><code class=\"language-json \">\"globalStyle\": {\n    \"usingComponents\": {\n        \"van-button\": \"/wxcomponents/vant-weapp/button/index\"\n    }\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>uni不支持使用Vue.use注册Vue全局组件<br />\nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。</li>\n<li>在组件定义标签上不能用v-show</li>\n</ol>\n\n<pre><code class=\"\">    // 在组件定义的标签上使用v-show没作用\n    &lt;my-component v-show=\"flag\"&gt;&lt;/my-component&gt;\n\n    // 在普通标签使用没有问题\n    &lt;div v-show=\"flag\"&gt;条件编译v-show&lt;/div&gt;\n</code></pre>\n\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-autosave-v1', '', '', '2020-01-03 07:12:59', '2020-01-03 07:12:59', '# 前言\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n# 遇到的问题\n1. 引入小程序ui组件库  \n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n		1. 小程序组件必需放在wxcomponents目录里的。\n		2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\n\nexample:  \n[![引入小程序组件的目录结构](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")\n``` json\n&quot;globalStyle&quot;: {\n	&quot;usingComponents&quot;: {\n		&quot;van-button&quot;: &quot;/wxcomponents/vant-weapp/button/index&quot;\n	}\n}\n```\n2. uni不支持使用Vue.use注册Vue全局组件  \nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。\n3. 在组件定义标签上不能用v-show\n```\n	// 在组件定义的标签上使用v-show没作用\n	&lt;my-component v-show=&quot;flag&quot;&gt;&lt;/my-component&gt;\n	\n	// 在普通标签使用没有问题\n	&lt;div v-show=&quot;flag&quot;&gt;条件编译v-show&lt;/div&gt;\n```\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', 117, 'https://www.chwech.com/2020/01/03/117-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (124, 1, '2020-01-03 07:14:55', '2020-01-03 07:14:55', '<h1>前言</h1>\n\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\n\n<h1>遇到的问题</h1>\n\n<ol>\n<li>引入小程序ui组件库<br />\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \n    1. 小程序组件必需放在wxcomponents目录里的。\n    2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。</li>\n</ol>\n\nexample:<br />\n<a href=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" title=\"引入小程序组件的目录结构\"><img src=\"https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png\" alt=\"引入小程序组件的目录结构\" title=\"引入小程序组件的目录结构\" /></a>\n\n<pre><code class=\"language-json \">\"globalStyle\": {\n    \"usingComponents\": {\n        \"van-button\": \"/wxcomponents/vant-weapp/button/index\"\n    }\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>uni不支持使用Vue.use注册Vue全局组件<br />\nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。</li>\n<li>在组件定义标签上不能用v-show</li>\n</ol>\n\n<pre><code class=\"\">    // 在组件定义的标签上使用v-show没作用\n    &lt;my-component v-show=\"flag\"&gt;&lt;/my-component&gt;\n\n    // 在普通标签使用没有问题\n    &lt;div v-show=\"flag\"&gt;条件编译v-show&lt;/div&gt;\n</code></pre>\n\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', '[填坑] 使用uni-app开发小程序踩坑，持续更新中~', '', 'inherit', 'closed', 'closed', '', '117-revision-v1', '', '', '2020-01-03 07:14:55', '2020-01-03 07:14:55', '# 前言\r\n最近计划和小伙伴们开发一款小程序，工期一个月，由于我没有学过原生小程序的写法，开发框架选择了更新还算频繁的uni-app，美团的mpvue已经很久没更新了，所以就不考虑了。以下是在下使用uni-app过程遇到的坑点。在这里简单记录下\r\n\r\n# 遇到的问题\r\n1. 引入小程序ui组件库  \r\n在开发小程序具体功能之前，首先当然是选择一款ui库了，这样能节省很多时间，我选择了vant-weapp。vant-weapp是一款小程序组件库，在uni-app框架中使用时要注意点是： \r\n		1. 小程序组件必需放在wxcomponents目录里的。\r\n		2. 当需要在 vue 组件中使用小程序组件时，pages.json配置引入时不要在页面的style的usingComponents下引入，而是应该在globalStyle下usingComponents引入。如果在页面级usingComponents引入小程序组件来使用，嵌套的vue组件是不能用小程序组件的，而且没有任何报错。\r\n\r\nexample:  \r\n[![引入小程序组件的目录结构](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")](https://i.loli.net/2019/12/24/svgkz6H9L2Tqd1N.png \"引入小程序组件的目录结构\")\r\n``` json\r\n&quot;globalStyle&quot;: {\r\n	&quot;usingComponents&quot;: {\r\n		&quot;van-button&quot;: &quot;/wxcomponents/vant-weapp/button/index&quot;\r\n	}\r\n}\r\n```\r\n2. uni不支持使用Vue.use注册Vue全局组件  \r\nuni不支持使用Vue.use注册Vue全局组件，解决办法是直接在main.js里使用全局注册。\r\n3. 在组件定义标签上不能用v-show\r\n```\r\n	// 在组件定义的标签上使用v-show没作用\r\n	&lt;my-component v-show=&quot;flag&quot;&gt;&lt;/my-component&gt;\r\n	\r\n	// 在普通标签使用没有问题\r\n	&lt;div v-show=&quot;flag&quot;&gt;条件编译v-show&lt;/div&gt;\r\n```\r\n解决办法： 使用v-if替换v-show。需要注意v-if与v-show的区别', 117, 'https://www.chwech.com/2020/01/03/117-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (126, 1, '2020-02-21 14:16:08', '2020-02-21 14:16:08', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有不是自己定义的话都删除掉。</p></li>\n<li><p>把kdevtmpfsi和kinsing进程kill掉。</p></li>\n</ol>\n\n<pre><code class=\"\">ps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n</code></pre>\n\n<ol start=\"4\">\n<li>怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。</li>\n</ol>\n\n<blockquote>\n  <p>2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\n  2020年2月24日10:11:51更新： 晕，原来是有个lanp环境dockder容器带木马。把它停掉后，世界安静了。看来软件镜像还是得用官方的才行。\n</blockquote>', '记清除kdevtmpfsi挖矿程序的过程', '', 'publish', 'open', 'open', '', '%e8%ae%b0%e6%b8%85%e9%99%a4kdevtmpfsi%e6%8c%96%e7%9f%bf%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%bf%87%e7%a8%8b', '', '', '2020-02-24 02:14:14', '2020-02-24 02:14:14', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\r\n\r\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\r\n```\r\nfind / -name kdevtmpfsi\r\nfind / -name kinsing\r\n```\r\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\r\n\r\n2. 排除是否有可疑定时任务\r\n```crontab -l```\r\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有不是自己定义的话都删除掉。\r\n\r\n3. 把kdevtmpfsi和kinsing进程kill掉。\r\n```\r\nps aux | grep kdevtmpfsi\r\nps aux | grep kinsing\r\nkill -9 进程id\r\n```\r\n\r\n4. 怎么中的招\r\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。\r\n\r\n> 2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\r\n> 2020年2月24日10:11:51更新： 晕，原来是有个lanp环境dockder容器带木马。把它停掉后，世界安静了。看来软件镜像还是得用官方的才行。', 0, 'https://www.chwech.com/?p=126', 0, 'post', '', 0);
INSERT INTO `wp_posts` VALUES (127, 1, '2020-02-21 14:09:13', '2020-02-21 14:09:13', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有</li>\n</ol>', '记清除kdevtmpfsi挖矿程序的过程', '', 'inherit', 'closed', 'closed', '', '126-revision-v1', '', '', '2020-02-21 14:09:13', '2020-02-21 14:09:13', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\r\n\r\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\r\n```\r\nfind / -name kdevtmpfsi\r\nfind / -name kinsing\r\n```\r\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\r\n\r\n2. 排除是否有可疑定时任务\r\n```crontab -l```\r\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有', 126, 'https://www.chwech.com/2020/02/21/126-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (128, 1, '2020-02-21 14:16:08', '2020-02-21 14:16:08', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li><p>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有不是自己定义的话都删除掉。</p></li>\n<li><p>把kdevtmpfsi和kinsing进程kill掉。</p></li>\n</ol>\n\n<pre><code class=\"\">ps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n</code></pre>\n\n<ol start=\"4\">\n<li>怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。</li>\n</ol>', '记清除kdevtmpfsi挖矿程序的过程', '', 'inherit', 'closed', 'closed', '', '126-revision-v1', '', '', '2020-02-21 14:16:08', '2020-02-21 14:16:08', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\r\n\r\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\r\n```\r\nfind / -name kdevtmpfsi\r\nfind / -name kinsing\r\n```\r\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\r\n\r\n2. 排除是否有可疑定时任务\r\n```crontab -l```\r\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有不是自己定义的话都删除掉。\r\n\r\n3. 把kdevtmpfsi和kinsing进程kill掉。\r\n```\r\nps aux | grep kdevtmpfsi\r\nps aux | grep kinsing\r\nkill -9 进程id\r\n```\r\n\r\n4. 怎么中的招\r\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。', 126, 'https://www.chwech.com/2020/02/21/126-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (129, 1, '2020-02-24 02:12:34', '2020-02-24 02:12:34', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有不是自己定义的话都删除掉。</p></li>\n<li><p>把kdevtmpfsi和kinsing进程kill掉。</p></li>\n</ol>\n\n<pre><code class=\"\">ps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n</code></pre>\n\n<ol start=\"4\">\n<li>怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。</li>\n</ol>\n\n<blockquote>\n  <p>2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\n  2020年2月24日10:11:51更新： 晕，原来是有个dockder容器带木马。\n</blockquote>', '记清除kdevtmpfsi挖矿程序的过程', '', 'inherit', 'closed', 'closed', '', '126-autosave-v1', '', '', '2020-02-24 02:12:34', '2020-02-24 02:12:34', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\n```\nfind / -name kdevtmpfsi\nfind / -name kinsing\n```\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n2. 排除是否有可疑定时任务\n```crontab -l```\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有不是自己定义的话都删除掉。\n\n3. 把kdevtmpfsi和kinsing进程kill掉。\n```\nps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n```\n\n4. 怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。\n\n> 2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\n> 2020年2月24日10:11:51更新： 晕，原来是有个dockder容器带木马。', 126, 'https://www.chwech.com/2020/02/22/126-autosave-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (130, 1, '2020-02-22 03:00:59', '2020-02-22 03:00:59', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有不是自己定义的话都删除掉。</p></li>\n<li><p>把kdevtmpfsi和kinsing进程kill掉。</p></li>\n</ol>\n\n<pre><code class=\"\">ps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n</code></pre>\n\n<ol start=\"4\">\n<li>怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。</li>\n</ol>\n\n<blockquote>\n  <p>2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\n</blockquote>', '记清除kdevtmpfsi挖矿程序的过程', '', 'inherit', 'closed', 'closed', '', '126-revision-v1', '', '', '2020-02-22 03:00:59', '2020-02-22 03:00:59', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\r\n\r\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\r\n```\r\nfind / -name kdevtmpfsi\r\nfind / -name kinsing\r\n```\r\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\r\n\r\n2. 排除是否有可疑定时任务\r\n```crontab -l```\r\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有不是自己定义的话都删除掉。\r\n\r\n3. 把kdevtmpfsi和kinsing进程kill掉。\r\n```\r\nps aux | grep kdevtmpfsi\r\nps aux | grep kinsing\r\nkill -9 进程id\r\n```\r\n\r\n4. 怎么中的招\r\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。\r\n\r\n> 2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。', 126, 'https://www.chwech.com/2020/02/22/126-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (131, 1, '2020-02-24 02:14:14', '2020-02-24 02:14:14', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\n\n<ol>\n<li>通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing</li>\n</ol>\n\n<pre><code class=\"\">find / -name kdevtmpfsi\nfind / -name kinsing\n</code></pre>\n\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\n\n<ol start=\"2\">\n<li>排除是否有可疑定时任务\n<code>crontab -l</code>\n以上命令可查看本用户的定时任务。还可以直接进入<em>/var/spool/cron</em> 查看所有用户的定时任务。有不是自己定义的话都删除掉。</p></li>\n<li><p>把kdevtmpfsi和kinsing进程kill掉。</p></li>\n</ol>\n\n<pre><code class=\"\">ps aux | grep kdevtmpfsi\nps aux | grep kinsing\nkill -9 进程id\n</code></pre>\n\n<ol start=\"4\">\n<li>怎么中的招\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。</li>\n</ol>\n\n<blockquote>\n  <p>2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\n  2020年2月24日10:11:51更新： 晕，原来是有个lanp环境dockder容器带木马。把它停掉后，世界安静了。看来软件镜像还是得用官方的才行。\n</blockquote>', '记清除kdevtmpfsi挖矿程序的过程', '', 'inherit', 'closed', 'closed', '', '126-revision-v1', '', '', '2020-02-24 02:14:14', '2020-02-24 02:14:14', '其实从我的博客诞生不久，博客所在的服务器的cpu不知什么时候开始，常年使用率达到了100%。由于我是一名前端，对linux操作系统仅了解基本命令的使用。所以就一直没管它，任由它负载运行。今天我又闲来没事，使用xshell登录服务器折腾，无意中使用top命令，发现在一个可疑进程kdevtmpfsi，cpu占用非常高，达98%以上。在百度上一搜，好家伙，原来是挖矿程序！服务器运行了近一年，帮别人挖了不和矿吧。于是我开始着手把它删掉。\r\n\r\n1. 通过find命令查找kdevtmpfsi文件和它的守护进程文件kinsing\r\n```\r\nfind / -name kdevtmpfsi\r\nfind / -name kinsing\r\n```\r\n找到后，通通删掉。守护进程会不断的重启挖矿程序，所以这个很关键。\r\n\r\n2. 排除是否有可疑定时任务\r\n```crontab -l```\r\n以上命令可查看本用户的定时任务。还可以直接进入*/var/spool/cron* 查看所有用户的定时任务。有不是自己定义的话都删除掉。\r\n\r\n3. 把kdevtmpfsi和kinsing进程kill掉。\r\n```\r\nps aux | grep kdevtmpfsi\r\nps aux | grep kinsing\r\nkill -9 进程id\r\n```\r\n\r\n4. 怎么中的招\r\n现在还不知道是怎么被植入挖矿程序的。通过前面3点操作，现在cpu终于降下来啦，开心。博客的访问速度也提升了一点。后续观察是否还会继续重启。\r\n\r\n> 2020年2月22日10:59:52更新： 一夜过去了，反弹了。并没有解决问题。\r\n> 2020年2月24日10:11:51更新： 晕，原来是有个lanp环境dockder容器带木马。把它停掉后，世界安静了。看来软件镜像还是得用官方的才行。', 126, 'https://www.chwech.com/2020/02/24/126-revision-v1/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` VALUES (148, 1, '2021-01-12 17:31:32', '2021-01-12 09:31:32', '21111111', '65', '', 'draft', 'open', 'open', '', 'testtest', '', '', '2021-01-12 17:43:22', '2021-01-12 09:43:22', '', 0, '', 0, 'post', '', 0);

-- ----------------------------
-- Table structure for wp_term_relationships
-- ----------------------------
DROP TABLE IF EXISTS `wp_term_relationships`;
CREATE TABLE `wp_term_relationships`  (
  `object_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `term_taxonomy_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `term_order` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`object_id`, `term_taxonomy_id`) USING BTREE,
  INDEX `term_taxonomy_id`(`term_taxonomy_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_term_relationships
-- ----------------------------
INSERT INTO `wp_term_relationships` VALUES (1, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (5, 2, 0);
INSERT INTO `wp_term_relationships` VALUES (5, 3, 0);
INSERT INTO `wp_term_relationships` VALUES (12, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (18, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (26, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (31, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (35, 4, 0);
INSERT INTO `wp_term_relationships` VALUES (35, 5, 0);
INSERT INTO `wp_term_relationships` VALUES (35, 6, 0);
INSERT INTO `wp_term_relationships` VALUES (37, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (50, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (58, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (72, 7, 0);
INSERT INTO `wp_term_relationships` VALUES (90, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (92, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (96, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (99, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (110, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (113, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (117, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (126, 1, 0);
INSERT INTO `wp_term_relationships` VALUES (148, 20, 0);
INSERT INTO `wp_term_relationships` VALUES (148, 21, 0);

-- ----------------------------
-- Table structure for wp_term_taxonomy
-- ----------------------------
DROP TABLE IF EXISTS `wp_term_taxonomy`;
CREATE TABLE `wp_term_taxonomy`  (
  `term_taxonomy_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `taxonomy` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `description` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `parent` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `count` bigint(20) NOT NULL DEFAULT 0,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL,
  PRIMARY KEY (`term_taxonomy_id`) USING BTREE,
  UNIQUE INDEX `typename`(`taxonomy`, `name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 23 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_term_taxonomy
-- ----------------------------
INSERT INTO `wp_term_taxonomy` VALUES (1, 1, 'category', '', 0, 11, 'Uncategorized');
INSERT INTO `wp_term_taxonomy` VALUES (2, 2, 'category', '', 0, 1, 'markdown');
INSERT INTO `wp_term_taxonomy` VALUES (3, 3, 'post_tag', '', 0, 1, 'markdown');
INSERT INTO `wp_term_taxonomy` VALUES (4, 4, 'category', '', 0, 1, 'vue');
INSERT INTO `wp_term_taxonomy` VALUES (5, 5, 'post_tag', '', 0, 1, 'vue');
INSERT INTO `wp_term_taxonomy` VALUES (6, 6, 'post_tag', '', 0, 1, 'vue-router');
INSERT INTO `wp_term_taxonomy` VALUES (7, 7, 'category', '', 0, 1, 'JavaScript');
INSERT INTO `wp_term_taxonomy` VALUES (20, 17, 'category', '4563212', 0, 0, '11122');
INSERT INTO `wp_term_taxonomy` VALUES (21, 14, 'category', 'test333', 0, 0, 'test33');
INSERT INTO `wp_term_taxonomy` VALUES (22, 18, 'category', '222', 0, 0, 'tet111');

-- ----------------------------
-- Table structure for wp_termmeta
-- ----------------------------
DROP TABLE IF EXISTS `wp_termmeta`;
CREATE TABLE `wp_termmeta`  (
  `meta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `meta_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL DEFAULT NULL,
  `meta_value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL,
  PRIMARY KEY (`meta_id`) USING BTREE,
  INDEX `term_id`(`term_id`) USING BTREE,
  INDEX `meta_key`(`meta_key`(191)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 14 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_termmeta
-- ----------------------------
INSERT INTO `wp_termmeta` VALUES (13, 21, 'img', '1');

-- ----------------------------
-- Table structure for wp_terms
-- ----------------------------
DROP TABLE IF EXISTS `wp_terms`;
CREATE TABLE `wp_terms`  (
  `term_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `slug` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT 0,
  PRIMARY KEY (`term_id`) USING BTREE,
  UNIQUE INDEX `slug`(`slug`(191)) USING BTREE,
  INDEX `name`(`name`(191)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 19 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_terms
-- ----------------------------
INSERT INTO `wp_terms` VALUES (1, 'Uncategorized', 'uncategorized', 0);
INSERT INTO `wp_terms` VALUES (2, 'markdown', 'markdown', 0);
INSERT INTO `wp_terms` VALUES (4, 'vue', 'vue', 0);
INSERT INTO `wp_terms` VALUES (6, 'vue-router', 'vue-router', 0);
INSERT INTO `wp_terms` VALUES (7, 'JavaScript', 'javascript', 0);
INSERT INTO `wp_terms` VALUES (14, 'vue3', 'vue3', 0);
INSERT INTO `wp_terms` VALUES (17, 'cccccc', 'cccccc', 0);
INSERT INTO `wp_terms` VALUES (18, 'tet111', 'tet111', 0);

-- ----------------------------
-- Table structure for wp_usermeta
-- ----------------------------
DROP TABLE IF EXISTS `wp_usermeta`;
CREATE TABLE `wp_usermeta`  (
  `umeta_id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) UNSIGNED NOT NULL DEFAULT 0,
  `meta_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL DEFAULT NULL,
  `meta_value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NULL,
  PRIMARY KEY (`umeta_id`) USING BTREE,
  INDEX `user_id`(`user_id`) USING BTREE,
  INDEX `meta_key`(`meta_key`(191)) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 24 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_usermeta
-- ----------------------------
INSERT INTO `wp_usermeta` VALUES (1, 1, 'nickname', 'chwech');
INSERT INTO `wp_usermeta` VALUES (2, 1, 'first_name', '');
INSERT INTO `wp_usermeta` VALUES (3, 1, 'last_name', '');
INSERT INTO `wp_usermeta` VALUES (4, 1, 'description', '');
INSERT INTO `wp_usermeta` VALUES (5, 1, 'rich_editing', 'true');
INSERT INTO `wp_usermeta` VALUES (6, 1, 'syntax_highlighting', 'true');
INSERT INTO `wp_usermeta` VALUES (7, 1, 'comment_shortcuts', 'false');
INSERT INTO `wp_usermeta` VALUES (8, 1, 'admin_color', 'fresh');
INSERT INTO `wp_usermeta` VALUES (9, 1, 'use_ssl', '0');
INSERT INTO `wp_usermeta` VALUES (10, 1, 'show_admin_bar_front', 'true');
INSERT INTO `wp_usermeta` VALUES (11, 1, 'locale', '');
INSERT INTO `wp_usermeta` VALUES (12, 1, 'wp_capabilities', 'a:1:{s:13:\"administrator\";b:1;}');
INSERT INTO `wp_usermeta` VALUES (13, 1, 'wp_user_level', '10');
INSERT INTO `wp_usermeta` VALUES (14, 1, 'dismissed_wp_pointers', 'wp496_privacy,editormd');
INSERT INTO `wp_usermeta` VALUES (15, 1, 'show_welcome_panel', '1');
INSERT INTO `wp_usermeta` VALUES (17, 1, 'wp_dashboard_quick_press_last_post_id', '133');
INSERT INTO `wp_usermeta` VALUES (18, 1, 'community-events-location', 'a:1:{s:2:\"ip\";s:10:\"172.18.0.0\";}');
INSERT INTO `wp_usermeta` VALUES (19, 1, 'session_tokens', 'a:1:{s:64:\"708e9a27a059e751afec6ad48be4259c707177829949afb77625de3d6aeb861d\";a:4:{s:10:\"expiration\";i:1584349474;s:2:\"ip\";s:10:\"172.18.0.2\";s:2:\"ua\";s:114:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\";s:5:\"login\";i:1584176674;}}');
INSERT INTO `wp_usermeta` VALUES (20, 1, 'wp_user-settings', 'mfold=o&libraryContent=browse');
INSERT INTO `wp_usermeta` VALUES (21, 1, 'wp_user-settings-time', '1560869074');
INSERT INTO `wp_usermeta` VALUES (22, 1, 'closedpostboxes_dashboard', 'a:0:{}');
INSERT INTO `wp_usermeta` VALUES (23, 1, 'metaboxhidden_dashboard', 'a:0:{}');

-- ----------------------------
-- Table structure for wp_users
-- ----------------------------
DROP TABLE IF EXISTS `wp_users`;
CREATE TABLE `wp_users`  (
  `ID` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_registered` datetime(0) NOT NULL,
  `user_activation_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT 0,
  `display_name` varchar(250) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`) USING BTREE,
  INDEX `user_login_key`(`user_login`) USING BTREE,
  INDEX `user_nicename`(`user_nicename`) USING BTREE,
  INDEX `user_email`(`user_email`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_520_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of wp_users
-- ----------------------------
INSERT INTO `wp_users` VALUES (1, 'chwech', 'ggi3h8ggi3h8', 'chwech', '804699297@qq.com', 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif', '2019-03-30 09:12:11', '', 0, 'chwech');

-- ----------------------------
-- Procedure structure for add_relation_between_post_term_taxonomy
-- ----------------------------
DROP PROCEDURE IF EXISTS `add_relation_between_post_term_taxonomy`;
delimiter ;;
CREATE PROCEDURE `add_relation_between_post_term_taxonomy`(IN f_post_id BIGINT, IN f_category VARCHAR(1000), IN f_delimiter varchar(5))
BEGIN
 DECLARE temptermid VARCHAR(200);
 DECLARE temptermidIndex INT DEFAULT 1;
 DECLARE temptermidMaxIndex INT DEFAULT func_get_split_string_total(f_category, f_delimiter);
 WHILE temptermidIndex <= temptermidMaxIndex
	DO
	SET temptermid = func_get_split_string(f_category, f_delimiter, temptermidIndex);
	INSERT INTO wp_term_relationships (object_id, term_taxonomy_id) VALUES (f_post_id, temptermid);
	SET temptermidIndex = temptermidIndex + 1;
 END WHILE;
END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for delete_relation_between_post_term_taxonomy
-- ----------------------------
DROP PROCEDURE IF EXISTS `delete_relation_between_post_term_taxonomy`;
delimiter ;;
CREATE PROCEDURE `delete_relation_between_post_term_taxonomy`(IN f_post_id BIGINT, IN f_category VARCHAR(1000), IN f_delimiter varchar(5))
BEGIN
 DECLARE temptermid VARCHAR(200);
 DECLARE temptermidIndex INT DEFAULT 1;
 DECLARE temptermidMaxIndex INT DEFAULT func_get_split_string_total(f_category, f_delimiter);
 WHILE temptermidIndex <= temptermidMaxIndex
	DO
	SET temptermid = func_get_split_string(f_category, f_delimiter, temptermidIndex);
	DELETE FROM wp_term_relationships WHERE object_id = f_post_id AND term_taxonomy_id = temptermid;
	SET temptermidIndex = temptermidIndex + 1;
 END WHILE;
END
;;
delimiter ;

-- ----------------------------
-- Function structure for func_get_category
-- ----------------------------
DROP FUNCTION IF EXISTS `func_get_category`;
delimiter ;;
CREATE FUNCTION `func_get_category`(f_post_id BIGINT)
 RETURNS varchar(255) CHARSET utf8
BEGIN
-- Get the separated number of given string.
declare result varchar(255) default '';
SELECT GROUP_CONCAT(wp_term_relationships.term_taxonomy_id) INTO result 
	FROM 
		wp_term_relationships 
	INNER JOIN 
		wp_term_taxonomy
	ON 
		wp_term_taxonomy.taxonomy = 'category' AND wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id
	WHERE 
		object_id = f_post_id;
return result;
END
;;
delimiter ;

-- ----------------------------
-- Function structure for func_get_split_string
-- ----------------------------
DROP FUNCTION IF EXISTS `func_get_split_string`;
delimiter ;;
CREATE FUNCTION `func_get_split_string`(f_string varchar(1000),f_delimiter varchar(5),f_order int)
 RETURNS varchar(255) CHARSET utf8
BEGIN
-- Get the separated number of given string.
declare result varchar(255) default '';
set result = reverse(substring_index(reverse(substring_index(f_string,f_delimiter,f_order)),f_delimiter,1));
return result;
END
;;
delimiter ;

-- ----------------------------
-- Function structure for func_get_split_string_total
-- ----------------------------
DROP FUNCTION IF EXISTS `func_get_split_string_total`;
delimiter ;;
CREATE FUNCTION `func_get_split_string_total`(f_string varchar(1000),f_delimiter varchar(5))
 RETURNS int(11)
BEGIN
-- Get the total number of given string.
return 1+(length(f_string) - length(replace(f_string,f_delimiter,'')));
END
;;
delimiter ;

-- ----------------------------
-- Procedure structure for get_or_add_slug
-- ----------------------------
DROP PROCEDURE IF EXISTS `get_or_add_slug`;
delimiter ;;
CREATE PROCEDURE `get_or_add_slug`(IN f_slug VARCHAR(200))
BEGIN
 DECLARE termid BIGINT;
 SELECT term_id INTO termid FROM wp_terms WHERE slug=f_slug;
 IF termid IS NOT null THEN
 SELECT termid as term_id;
 ELSE
	INSERT INTO wp_terms (name, slug) VALUES (f_slug, f_slug);
  SELECT * FROM wp_terms WHERE term_id = LAST_INSERT_ID();
 END IF;
END
;;
delimiter ;

SET FOREIGN_KEY_CHECKS = 1;
